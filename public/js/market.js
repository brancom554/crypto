/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/AlarmsList.vue?vue&type=script&lang=js&":
/*!***************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/AlarmsList.vue?vue&type=script&lang=js& ***!
  \***************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
// component
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  // component props
  props: {
    alarmsData: {
      type: Array,
      "default": function _default() {
        return [];
      },
      required: true
    },
    pairData: {
      type: Object,
      "default": function _default() {
        return {};
      }
    }
  },
  // comonent data
  data: function data() {
    return {
      curPrice: ''
    };
  },
  // computed methods
  computed: {
    // filter alarms for this token
    alarmsList: function alarmsList() {
      var list = this.alarmsData.slice();
      var symbol = this.pairData.symbol || ''; // sort all alarms by symbol

      list = this.$utils.sort(list, 'symbol', 'asc'); // sort alarms for a specific symbol by status

      if (symbol) {
        list = list.filter(function (a) {
          return a.symbol === symbol;
        });
        list = this.$utils.sort(list, 'active', 'desc');
      } // update count outside


      this.$emit('listCount', list.length);
      return list;
    }
  },
  // component methods
  methods: {
    // save a new alert for this token
    saveAlarm: function saveAlarm(e) {
      var _this$pairData = this.pairData,
          symbol = _this$pairData.symbol,
          token = _this$pairData.token,
          close = _this$pairData.close;
      var price = parseFloat(e.target.price.value) || 0;
      var saved = this.$alarms.add(this.pairData, price);
      if (!saved) return this.$bus.emit('showNotice', 'Please enter a different ' + token + ' alarm price.', 'warning');
      this.$bus.emit('showNotice', 'New alarm for ' + symbol + ' set for ' + price.toFixed(8) + ' ' + token + '.', 'success');
    },
    // toggle existing alarm for as symbol by id
    toggleAlarm: function toggleAlarm(id, symbol, toggle) {
      var action = toggle ? 'enabled' : 'disabled';
      this.$alarms.toggle(id, toggle);
      this.$bus.emit('showNotice', 'Alarm for ' + symbol + ' has been ' + action + '.', 'success');
    },
    // remove an alert from the list by id
    deleteAlarm: function deleteAlarm(id, symbol) {
      this.$alarms.remove(id);
      this.$bus.emit('showNotice', 'Alarm for ' + symbol + ' has been removed.', 'success');
    },
    // flush all alarms from the list
    flushAlarms: function flushAlarms() {
      if (!confirm('Delete all alarms from the list?')) return;
      this.$alarms.flush();
      this.$bus.emit('showNotice', 'All alarms have been deleted.', 'success');
    }
  },
  // component mounted
  mounted: function mounted() {
    if (this.pairData.symbol) {
      this.curPrice = Number(this.pairData.close).toFixed(8);
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/App.vue?vue&type=script&lang=js&":
/*!********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/App.vue?vue&type=script&lang=js& ***!
  \********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Topbar_vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Topbar.vue */ "./src/market/components/Topbar.vue");
/* harmony import */ var _Modal_vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Modal.vue */ "./src/market/components/Modal.vue");
/* harmony import */ var _Notify_vue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Notify.vue */ "./src/market/components/Notify.vue");
/* harmony import */ var _WatchForm_vue__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./WatchForm.vue */ "./src/market/components/WatchForm.vue");
/* harmony import */ var _TokenList_vue__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./TokenList.vue */ "./src/market/components/TokenList.vue");
/* harmony import */ var _OptionsPage_vue__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./OptionsPage.vue */ "./src/market/components/OptionsPage.vue");
/* harmony import */ var _OptionsPageAdmin_vue__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./OptionsPageAdmin.vue */ "./src/market/components/OptionsPageAdmin.vue");
/* harmony import */ var _HistoryPage_vue__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./HistoryPage.vue */ "./src/market/components/HistoryPage.vue");
/* harmony import */ var _AlarmsList_vue__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./AlarmsList.vue */ "./src/market/components/AlarmsList.vue");
/* harmony import */ var _TokenPage_vue__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./TokenPage.vue */ "./src/market/components/TokenPage.vue");
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




 //import NewsPage from './NewsPage.vue';
//import TradePage from './TradePage.vue';
//import AboutPage from './AboutPage.vue';





 // component

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  // component list
  components: {
    Topbar: _Topbar_vue__WEBPACK_IMPORTED_MODULE_0__["default"],
    Modal: _Modal_vue__WEBPACK_IMPORTED_MODULE_1__["default"],
    Notify: _Notify_vue__WEBPACK_IMPORTED_MODULE_2__["default"],
    WatchForm: _WatchForm_vue__WEBPACK_IMPORTED_MODULE_3__["default"],
    //AboutPage,
    OptionsPage: _OptionsPage_vue__WEBPACK_IMPORTED_MODULE_5__["default"],
    OptionsPageAdmin: _OptionsPageAdmin_vue__WEBPACK_IMPORTED_MODULE_6__["default"],
    HistoryPage: _HistoryPage_vue__WEBPACK_IMPORTED_MODULE_7__["default"],
    TokenList: _TokenList_vue__WEBPACK_IMPORTED_MODULE_4__["default"],
    AlarmsList: _AlarmsList_vue__WEBPACK_IMPORTED_MODULE_8__["default"],
    //NewsPage,
    //TradePage,
    TokenPage: _TokenPage_vue__WEBPACK_IMPORTED_MODULE_9__["default"]
  },
  // component data
  data: function data() {
    return {
      refid: '12268078',
      title: 'Bicrypto',
      // app options and data
      options: {},
      sortData: {},
      priceData: [],
      assetsList: [],
      newsHandlers: [],
      newsEntries: [],
      historyData: [],
      alarmsData: [],
      quoteSymbols: [],
      marketsData: {},
      coinsData: {},
      // page and modal related
      mainComp: '',
      modalComp: '',
      modalData: {},
      // ticker related data
      tickerStatus: 0,
      // ( 0: off, 1: wait, 2: on )
      tickerStart: 0,
      tickerTime: '',
      // fixed header props
      header: {
        collapsed: false,
        opaque: false
      }
    };
  },
  // custom methods
  methods: {
    // update app options and pass it on to other handlers
    updateOptions: function updateOptions(options) {
      this.options = options;
      this.$ajax.setOptions({
        proxy: this.options.proxy
      });
      this.$notify.setOptions({
        enabled: this.options.notify.enabled,
        duration: this.options.notify.duration,
        sound: this.options.audio.enabled,
        volume: this.options.audio.volume,
        audio: this.options.audio.file
      });
      this.$news.setOptions({
        enabled: this.options.news.enabled,
        interval: this.options.news.interval,
        delay: this.options.news.delay,
        days: this.options.news.days,
        tweets: this.options.news.tweets,
        total: this.options.news.total
      });
      this.$messenger.setOptions({
        mailgin: this.options.mailgin,
        telegram: this.options.telegram
      });
      this.$binance.setApiKey(this.options.binance.apikey);
      this.$binance.setApiSecret(this.options.binance.apisecret);
    },
    // setup options class handlers and load saved options
    setupOptionsHandlers: function setupOptionsHandlers() {
      this.$opts.on('update', this.updateOptions);
      this.$opts.loadOptions();
    },
    // setup sort order data handler
    setupSorterHandlers: function setupSorterHandlers() {
      var _this = this;

      this.$sorter.setKey('ticker', 'marketVolume', 'desc');
      this.$sorter.setKey('sentiment', 'count', 'desc');
      this.$sorter.setKey('balances', 'asset', 'asc');
      this.$sorter.setKey('orders', 'time', 'desc');
      this.$sorter.setKey('trades', 'time', 'desc');
      this.$sorter.setKey('sessions', 'time', 'desc');
      this.$sorter.on('change', function (data) {
        _this.sortData = data;
      });
      this.$sorter.on('load', function (data) {
        _this.sortData = data;
      });
      this.$sorter.loadData();
    },
    // setup app routes
    setupRoutes: function setupRoutes() {
      var _this2 = this;

      // page routes
      this.$router.on('/', function () {
        _this2.showPage('TokenList', 'Price List');
      }); //this.$router.on( '/news', () => { this.showPage( 'NewsPage', 'Twitter News' ) } );
      //this.$router.on( '/trade', () => { this.showPage( 'TradePage', 'Trade Bot' ) } );
      // modal routes

      this.$router.on('/history', function () {
        _this2.showModal('HistoryPage', 'Recent Alert History');
      });
      this.$router.on('/alarms', function () {
        _this2.showModal('AlarmsList', 'Saved Price Alarms');
      }); //this.$router.on( '/about', () => { this.showModal( 'AboutPage', 'About This App' ) } );

      this.$router.on('/options', function () {
        _this2.showModal('OptionsPage', 'Options & Settings');
      });
      this.$router.on('/optionsadmin', function () {
        _this2.showModal('OptionsPageAdmin', 'Admin Options & Settings');
      }); // symbol modal route

      this.$router.on('/symbol/([A-Z0-9]+)', function (symbol) {
        var d = _this2.priceData.filter(function (p) {
          return p.symbol === symbol;
        }).shift();

        if (d) return _this2.showModal('TokenPage', d.pair + ' Info ', d);

        _this2.$router.setRoute('/');
      });
    },
    // set a url hash route
    setRoute: function setRoute(route) {
      this.$router.setRoute(route);
    },
    // setup global event bus handlers
    setupGlobalHandlers: function setupGlobalHandlers() {
      this.$bus.on('setTitle', this.setTitle);
      this.$bus.on('setRoute', this.setRoute);
      this.$bus.on('showModal', this.showModal);
      this.$bus.on('closeModal', this.closeModal);
      this.$bus.on('showNotice', this.showNotice);
      this.$bus.on('handleClick', this.handleClick);
    },
    // setup alarms class handlers
    setupAlarmsHandlers: function setupAlarmsHandlers() {
      var _this3 = this;

      this.$alarms.on('update', function (data) {
        _this3.alarmsData = data;
      });
      this.$alarms.loadData();
    },
    // setup history class handlers
    setupHistoryHandlers: function setupHistoryHandlers() {
      var _this4 = this;

      this.$history.on('update', function (data) {
        _this4.historyData = data;
      });
      this.$history.loadData();
    },
    // setup twitter news handlers
    setupNewsHandlers: function setupNewsHandlers() {
      var _this5 = this;

      this.$news.useAjax(this.$ajax);
      this.$news.on('error', function (err) {
        console.warn(err);
      });
      this.$news.on('handlers', function (data) {
        _this5.newsHandlers = data;
      });
      this.$news.on('tweets', function (data) {
        _this5.newsEntries = data;
      });
    },
    // setup msg queue to go off on a timer
    setupMessengerHandlers: function setupMessengerHandlers() {
      var _this6 = this;

      this.$messenger.useAjax(this.$ajax);
      this.$messenger.on('sent', function (info) {
        _this6.showNotice(info, 'info');
      });
      this.$messenger.start();
    },
    // setup scroller handlers
    setupScrollHandlers: function setupScrollHandlers() {
      var _this7 = this;

      this.$scroller.on('scroll', function (pos) {
        _this7.onScrollChange('scroll', pos);
      });
      this.$scroller.on('down', function (pos) {
        _this7.onScrollChange('down', pos);
      });
      this.$scroller.on('up', function (pos) {
        _this7.onScrollChange('up', pos);
      });
    },
    // setup coincap data handlers
    setupCoincapHandlers: function setupCoincapHandlers() {
      this.$coincap.useAjax(this.$ajax);
      this.$coincap.on('allcoins', this.onCoincapData);
      this.$coincap.fetchAll();
    },
    // setup binance live ticker data handlers
    setupTickerHandlers: function setupTickerHandlers() {
      this.$binance.useAjax(this.$ajax);
      this.$binance.on('sock_fail', this.onSockFail);
      this.$binance.on('ticker_init', this.onTickerInit);
      this.$binance.on('ticker_fail', this.onTickerFail);
      this.$binance.on('ticker_error', this.onTickerError);
      this.$binance.on('ticker_close', this.onTickerClose);
      this.$binance.on('ticker_open', this.onTickerOpen);
      this.$binance.on('ticker_data', this.onTickerData);
      this.$binance.on('ticker_prices', this.onTickerPrices);
      this.$binance.on('markets_data', this.onMarketsData);
      this.$binance.fetchMarketsData();
      this.$binance.startTickerStream(true);
    },
    // handle coincap all coins data
    onCoincapData: function onCoincapData(coins) {
      this.coinsData = coins;
      this.$binance.setCoinData(coins);
    },
    // handle binance available markets data
    onMarketsData: function onMarketsData(markets) {
      var list = Object.keys(markets);
      this.assetsList = list;
      this.marketsData = markets;
    },
    // when scroll position updates
    onScrollChange: function onScrollChange(dir, pos) {
      if (dir === 'scroll') {
        this.header.opaque = pos > 10;
      }

      if (dir === 'down') {
        this.header.collapsed = true;
      }

      if (dir === 'up') {
        this.header.collapsed = false;
      }
    },
    // show socket related notifications
    tickerNotify: function tickerNotify(title, message) {
      if (document.hasFocus()) return;
      var d = new Date();
      this.$notify.add(title, message + ' \nNow: ' + d.toLocaleString());
    },
    // on socket init fail
    onSockFail: function onSockFail(error) {
      this.tickerStatus = 0;
      this.showNotice(error, 'error');
    },
    // on socket conenction attempt
    onTickerInit: function onTickerInit(time) {
      this.tickerStatus = 0;
      this.tickerStart = time;
    },
    // on socket failure to start
    onTickerFail: function onTickerFail(error) {
      this.tickerStatus = 0;
      this.showNotice(error, 'error');
    },
    // when socket connection ends
    onTickerError: function onTickerError(e) {
      var info = String(e.message || 'Price ticker API connection failed, check the console for more details.');
      this.tickerStatus = 0;
      this.tickerNotify('Ticker Error', info);
      this.showNotice(info, 'error');
    },
    // when socket connection ends
    onTickerClose: function onTickerClose(e) {
      this.tickerStatus = 0;
      this.$bus.emit('toggleWatchform', 'stop');
      this.$bus.emit('toggleTradeBot', 'stop');
    },
    // when socket connection opens
    onTickerOpen: function onTickerOpen(e) {
      this.tickerStatus = 1;
      this.tickerStart = Date.now();
    },
    // when socket connection has data
    onTickerData: function onTickerData(data) {
      this.tickerStatus = 2;
    },
    // updates price data list from socket on an interval
    onTickerPrices: function onTickerPrices(prices) {
      for (var i = 0; i < prices.length; ++i) {
        var p = prices[i];
        p.alarms = this.$alarms.getCount(p.symbol);
        this.updateModalPairData(p);
        this.checkPairAlarms(p);
      }

      var secs = (Date.now() - this.tickerStart) / 1000;
      this.tickerTime = this.$utils.elapsed(secs, '', true);
      this.priceData = prices;
    },
    // check if alarms need to go off for a pair
    checkPairAlarms: function checkPairAlarms(pair) {
      var _this8 = this;

      this.$alarms.check(pair.symbol, pair.close, function (title, info, a) {
        var icon = _this8.$utils.fullUrl(a.image);

        _this8.$notify.add(title, info, icon, function (e) {
          _this8.setRoute('/history');
        });

        _this8.$messenger.add(title, info, icon);

        _this8.$history.add(title, info, icon);
      });
    },
    // build page title
    setTitle: function setTitle(info) {
      var title = String(info || '').trim();
      var list = [this.title];
      if (title) list.unshift(title);
      document.title = list.join(' | ');
    },
    // handler for click events passed through the event bus
    handleClick: function handleClick() {
      var args = Array.from(arguments);
      var action = args.length ? args.shift() : '';
      var dest = args.length ? args.shift() : '';
      var target = args.length ? args.shift() : '_blank';
      if (action === 'scroll') return this.$scroller.jumpTo(dest);
      if (action === 'link') return window.open(dest, target);
      if (action === 'reload') return window.location.reload();
      if (action === 'return') return window.history.back();

      if (action === 'binance') {
        var symb = /\?/g.test(dest) ? '&' : '?';
        var base = 'https://www.binance.com' + dest + symb + 'ref=' + this.refid;
        return window.open(base, target);
      }
    },
    // change visible page component
    showPage: function showPage(component, title) {
      this.closeModal();
      this.$bus.emit('toggleWatchform', 'close');
      this.setTitle(title || component);
      this.mainComp = component;
    },
    // show modal window
    showModal: function showModal(component, title, data) {
      if (!this.$refs.modal) return;
      title = title || component;
      this.setTitle(title);
      this.modalComp = component;
      this.modalData = data;
      this.$refs.modal.show(title);
    },
    // update pair data inside modals
    updateModalPairData: function updateModalPairData(pair) {
      if (!this.modalData || !this.modalData.symbol) return;
      if (!pair || !pair.symbol || this.modalData.symbol !== pair.symbol) return;
      this.modalData = pair;
    },
    // close modal window, if open
    closeModal: function closeModal() {
      if (!this.$refs.modal) return;
      this.$refs.modal.close();
    },
    // on modal close event
    modalDone: function modalDone() {
      this.modalComp = '';
      this.modalData = {};
      window.history.back();
    },
    // show css alert
    showNotice: function showNotice(message, type, timeout) {
      if (!this.$refs.notify) return;
      this.$refs.notify.show(message, type, timeout);
    },
    // fetch wordlist files for sentiment analysis
    fetchSentimentWords: function fetchSentimentWords() {
      var _this9 = this;

      Array('words').forEach(function (file) {
        _this9.$ajax.get('../../../market/afinn/' + file + '.json', {
          type: 'json',
          proxy: false,
          success: function success(xhr, status, words) {
            return _this9.$sentiment.merge(words);
          }
        });
      });
    },
    // hide initial page spinner
    hideInitSpinner: function hideInitSpinner() {
      var spinner = document.querySelector('#_spnr');
      if (spinner) spinner.style.display = 'none';
    }
  },
  // on component created
  created: function created() {
    this.setupOptionsHandlers();
    this.setupSorterHandlers();
    this.setupGlobalHandlers();
    this.setupAlarmsHandlers();
    this.setupHistoryHandlers();
    this.setupNewsHandlers();
    this.setupMessengerHandlers();
    this.setupScrollHandlers();
    this.setupCoincapHandlers();
    this.setupTickerHandlers();
    this.setupRoutes();
  },
  // on component mounted
  mounted: function mounted() {
    this.$router.trigger(window.location.hash || '/');
    this.fetchSentimentWords();
    this.hideInitSpinner();
  },
  // on component destroyed
  destroyed: function destroyed() {
    this.$binance.stopTickerStream();
    this.$news.stopTimer();
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Dropdown.vue?vue&type=script&lang=js&":
/*!*************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Dropdown.vue?vue&type=script&lang=js& ***!
  \*************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
//
//
//
//
//
//
//
//
//
//
//
// component
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  // component data
  data: function data() {
    return {
      visible: false,
      top: true,
      right: false,
      bottom: false,
      left: true
    };
  },
  // custom methods
  methods: {
    // show dropdown
    listShow: function listShow(e) {
      if (this.visible || !this.$refs.trigger) return;
      var pos = this.$utils.boxPosition(this.$refs.trigger);
      this.top = pos.top;
      this.right = pos.right;
      this.bottom = pos.bottom;
      this.left = pos.left;
      this.visible = true;
    },
    // hide dropdown
    listHide: function listHide(e) {
      this.visible = false;
    },
    // detect click outside container
    _clickOut: function _clickOut(e) {
      if (!this.$refs.menu.contains(e.target)) {
        this.listHide(e);
      }
    }
  },
  // comonent mounted
  mounted: function mounted() {
    document.addEventListener('click', this._clickOut);
  },
  // comonent destroyed
  destroyed: function destroyed() {
    document.removeEventListener('click', this._clickOut);
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/HistoryPage.vue?vue&type=script&lang=js&":
/*!****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/HistoryPage.vue?vue&type=script&lang=js& ***!
  \****************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _TokenIcon_vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TokenIcon.vue */ "./src/market/components/TokenIcon.vue");
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
 // component

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  // component list
  components: {
    TokenIcon: _TokenIcon_vue__WEBPACK_IMPORTED_MODULE_0__["default"]
  },
  // component props
  props: {
    historyData: {
      type: Array,
      "default": function _default() {
        return [];
      },
      required: true
    },
    modalData: {
      type: Object,
      "default": function _default() {
        return {};
      }
    }
  },
  // custom methods
  methods: {
    // delete item from history
    deleteHistory: function deleteHistory(id) {
      this.$history.remove(id);
    },
    // flush history list
    flushHistory: function flushHistory() {
      this.$history.flush();
    },
    // format info string
    formatInfo: function formatInfo(info) {
      return String(info || '').replace(/[\r\n]+/g, ', ') + '.';
    }
  },
  // on component destroyed
  destroyed: function destroyed() {
    this.$history.reset();
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/LineChart.vue?vue&type=script&lang=js&":
/*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/LineChart.vue?vue&type=script&lang=js& ***!
  \**************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
//
//
//
//
//
//
//
//
//
// component
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  // component props
  props: {
    width: {
      type: Number,
      "default": 800,
      required: true
    },
    height: {
      type: Number,
      "default": 100,
      required: true
    },
    values: {
      type: Array,
      "default": [],
      required: true
    }
  },
  // data
  data: function data() {
    return {
      cx: 0,
      cy: 0
    };
  },
  // computed methods
  computed: {
    // svg view box size
    svgBox: function svgBox() {
      return '0 0 ' + this.width + ' ' + this.height;
    },
    // build points for SVG polyline
    chartPoints: function chartPoints() {
      var data = this.$utils.points(this.width, this.height, this.values);
      var last = data.length ? data[data.length - 1] : {
        x: 0,
        y: 0
      };
      var list = data.map(function (d) {
        return d.x - 8 + ',' + d.y;
      });
      this.cx = last.x - 3;
      this.cy = last.y;
      return list.join(' ');
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Modal.vue?vue&type=script&lang=js&":
/*!**********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Modal.vue?vue&type=script&lang=js& ***!
  \**********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
//
//
//
//
//
//
//
//
//
//
//
//
//
//
// component
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  // component data
  data: function data() {
    return {
      title: '',
      visible: false,
      under: true,
      sto: null
    };
  },
  // custom methods
  methods: {
    // show the modal window
    show: function show(title) {
      if (this.visible) return;
      this.$emit('onShow');
      this.title = title || 'Modal Window';
      this.under = false;
      this.visible = true;
    },
    // close the modal
    close: function close(e) {
      if (!this.visible) return;
      if (this.sto) clearTimeout(this.sto);
      this.sto = setTimeout(this.onDone, 400);
      this.$emit('onClose', e);
      this.visible = false;
    },
    // when the modal is done animating out
    onDone: function onDone(e) {
      if (this.under) return;
      this.$emit('onDone', e);
      this.under = true;
    },
    // check for escape key
    onKey: function onKey(e) {
      if (e.keyCode !== 27) return;
      this.close(e);
    }
  },
  // on destroyed
  destroyed: function destroyed() {
    document.removeEventListener('keydown', this.onKey);
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Notify.vue?vue&type=script&lang=js&":
/*!***********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Notify.vue?vue&type=script&lang=js& ***!
  \***********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
//
//
//
//
//
//
//
//
//
// component
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  // component data
  data: function data() {
    return {
      alerts: []
    };
  },
  // custom methods
  methods: {
    // show new alert, types: (success, error, warning, info)
    show: function show(message, type, timeout) {
      var _this = this;

      message = String(message || 'No message available.');
      type = String(type || 'info');
      timeout = Number(!timeout && type !== 'error' ? 5000 : timeout) || 0;
      var id = this.$utils.randString(20);
      var sto = timeout ? setTimeout(function () {
        return _this.close(id);
      }, timeout) : 0;
      var closed = false;

      if (this.alerts.length >= 5) {
        var a = this.alerts.pop();
        if (a.sto) clearTimeout(a.sto);
        this.remove(a.id);
      }

      this.alerts.push({
        id: id,
        message: message,
        type: type,
        timeout: timeout,
        sto: sto,
        closed: closed
      });
    },
    // close alert by id
    close: function close(id) {
      var _this2 = this;

      this.alerts.forEach(function (a, i) {
        if (a.id !== id) return;
        a.closed = true; // animate out, then...

        setTimeout(function () {
          return _this2.remove(id);
        }, 500);
      });
    },
    // remove lert from the list
    remove: function remove(id) {
      this.alerts = this.alerts.filter(function (a) {
        return a.id !== id;
      });
    },
    // alias
    info: function info(message, timeout) {
      this.show(message, 'info', timeout);
    },
    // alias
    success: function success(message, timeout) {
      this.show(message, 'success', timeout);
    },
    // alias
    warning: function warning(message, timeout) {
      this.show(message, 'warning', timeout);
    },
    // alias
    error: function error(message, timeout) {
      this.show(message, 'error', timeout);
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/OptionsPage.vue?vue&type=script&lang=js&":
/*!****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/OptionsPage.vue?vue&type=script&lang=js& ***!
  \****************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Toggle_vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Toggle.vue */ "./src/market/components/Toggle.vue");
/* harmony import */ var _SelectMenu_vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SelectMenu.vue */ "./src/market/components/SelectMenu.vue");
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
// sub components


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  // component list
  components: {
    Toggle: _Toggle_vue__WEBPACK_IMPORTED_MODULE_0__["default"],
    SelectMenu: _SelectMenu_vue__WEBPACK_IMPORTED_MODULE_1__["default"]
  },
  // component props
  props: {
    options: {
      type: Object,
      required: true
    }
  },
  // component data
  data: function data() {
    return {
      canNotify: false,
      urlSuccess: true,
      testing: false,
      // notification choices
      audioFiles: [{
        text: 'Audio 1',
        value: '../../../market/audio/audio_1.mp3'
      }, {
        text: 'Audio 2',
        value: '../../../market/audio/audio_2.mp3'
      }, {
        text: 'Audio 3',
        value: '../../../market/audio/audio_3.mp3'
      }, {
        text: 'Audio 4',
        value: '../../../market/audio/audio_4.mp3'
      }, {
        text: 'Audio 5',
        value: '../../../market/audio/audio_5.mp3'
      }]
    };
  },
  // computed methods
  computed: {},
  // custom methods
  methods: {
    // play selected notification sound
    playSound: function playSound() {
      var _this$options$audio = this.options.audio,
          file = _this$options$audio.file,
          volume = _this$options$audio.volume;
      this.$utils.playAudio(file, volume);
    },
    // apply options
    saveOptions: function saveOptions(audio) {
      var options = Object.assign({}, this.options, {
        proxy: this.corsProxy
      });
      if (audio === true) this.playSound();
      this.$opts.saveOptions(options);
    },
    // ask user for notification permission
    askNotifyPermission: function askNotifyPermission(e) {
      var _this = this;

      e.preventDefault();
      this.canNotify = false;
      this.$notify.permission(function (status) {
        _this.canNotify = status === 'granted' ? true : false;
      });
    }
  },
  // on component mounted
  mounted: function mounted() {
    this.canNotify = this.$notify.canNotify();
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/OptionsPageAdmin.vue?vue&type=script&lang=js&":
/*!*********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/OptionsPageAdmin.vue?vue&type=script&lang=js& ***!
  \*********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Tabs_vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tabs.vue */ "./src/market/components/Tabs.vue");
/* harmony import */ var _Toggle_vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Toggle.vue */ "./src/market/components/Toggle.vue");
/* harmony import */ var _SelectMenu_vue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SelectMenu.vue */ "./src/market/components/SelectMenu.vue");
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
// sub components



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  // component list
  components: {
    Tabs: _Tabs_vue__WEBPACK_IMPORTED_MODULE_0__["default"],
    Toggle: _Toggle_vue__WEBPACK_IMPORTED_MODULE_1__["default"],
    SelectMenu: _SelectMenu_vue__WEBPACK_IMPORTED_MODULE_2__["default"]
  },
  // component props
  props: {
    options: {
      type: Object,
      required: true
    }
  },
  // component data
  data: function data() {
    return {
      corsProxy: '',
      canNotify: false,
      urlSuccess: true,
      testing: false,
      // notification choices
      audioFiles: [{
        text: 'Audio 1',
        value: '../../../market/audio/audio_1.mp3'
      }, {
        text: 'Audio 2',
        value: '../../../market/audio/audio_2.mp3'
      }, {
        text: 'Audio 3',
        value: '../../../market/audio/audio_3.mp3'
      }, {
        text: 'Audio 4',
        value: '../../../market/audio/audio_4.mp3'
      }, {
        text: 'Audio 5',
        value: '../../../market/audio/audio_5.mp3'
      }]
    };
  },
  // computed methods
  computed: {
    // list of saved proxies
    proxyList: function proxyList() {
      var _this = this;

      return this.options.proxylist.map(function (url) {
        var selected = url === _this.options.proxy ? true : false;
        return {
          url: url,
          selected: selected
        };
      });
    }
  },
  // custom methods
  methods: {
    // lick to binance site with ref id added
    goBinance: function goBinance(e) {
      e.preventDefault();
      this.$bus.emit('handleClick', 'binance', '/', '_blank');
    },
    // play selected notification sound
    playSound: function playSound() {
      var _this$options$audio = this.options.audio,
          file = _this$options$audio.file,
          volume = _this$options$audio.volume;
      this.$utils.playAudio(file, volume);
    },
    // apply options
    saveOptions: function saveOptions(audio) {
      var options = Object.assign({}, this.options, {
        proxy: this.corsProxy
      });
      if (audio === true) this.playSound();
      this.$opts.saveOptions(options);
    },
    // add proxy to options list
    addProxy: function addProxy(url) {
      if (!url) return;
      this.options.proxylist = this.options.proxylist.filter(function (p) {
        return p !== url;
      });
      this.options.proxylist.push(url);
      this.$bus.emit('showNotice', 'Proxy URL added to list.', 'success');
      this.saveOptions();
    },
    // remove proxy from options list
    removeProxy: function removeProxy(url) {
      if (!url) return;
      this.options.proxylist = this.options.proxylist.filter(function (p) {
        return p !== url;
      });
      this.$bus.emit('showNotice', 'Proxy URL removed from list.', 'success');
      this.saveOptions();
    },
    // set active proxy from list
    setProxy: function setProxy(url) {
      this.corsProxy = url;
      this.options.proxy = url;
      this.saveOptions();
    },
    // test cors proxy url
    testProxy: function testProxy(url) {
      var _this2 = this;

      this.testing = true;
      this.$ajax.get(url, {
        type: 'text',
        proxy: false,
        // don't proxy the proxy
        error: function error(xhr, status, _error) {
          _this2.testing = false;
          _this2.urlSuccess = false;

          _this2.$bus.emit('showNotice', _error, 'warning');
        },
        success: function success(xhr, status, response) {
          var pass = status && status > 199 && status < 400;
          var clss = pass ? 'success' : 'warning';
          _this2.testing = false;
          _this2.urlSuccess = pass;

          _this2.$bus.emit('showNotice', 'Proxy URL responded with status code (' + status + ').', clss);
        }
      });
    },
    // cors proxy form submit handler
    corsFormSubmit: function corsFormSubmit(e) {
      e.preventDefault();
      var url = e.target.proxyurl.value || '';
      this.testProxy(url);
    },
    // ask user for notification permission
    askNotifyPermission: function askNotifyPermission(e) {
      var _this3 = this;

      e.preventDefault();
      this.canNotify = false;
      this.$notify.permission(function (status) {
        _this3.canNotify = status === 'granted' ? true : false;
      });
    }
  },
  // on component mounted
  mounted: function mounted() {
    this.corsProxy = this.options.proxy;
    this.canNotify = this.$notify.canNotify();
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Search.vue?vue&type=script&lang=js&":
/*!***********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Search.vue?vue&type=script&lang=js& ***!
  \***********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
//
//
//
//
//
//
//
//
// component
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  // component props
  props: {
    value: {
      type: String,
      "default": ''
    }
  },
  // component data
  data: function data() {
    return {
      searchStr: ''
    };
  },
  // watch methods
  watch: {
    value: function value() {
      this.searchStr = this.value;
    }
  },
  // custom mounted
  methods: {
    onClick: function onClick(e) {
      this.$emit('click', e);
    },
    onChange: function onChange(e) {
      this.$emit('change', e);
    },
    onInput: function onInput(e) {
      this.$emit('input', this.searchStr);
    },
    onReset: function onReset(e) {
      this.searchStr = '';
      this.$emit('input', '');
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/SelectMenu.vue?vue&type=script&lang=js&":
/*!***************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/SelectMenu.vue?vue&type=script&lang=js& ***!
  \***************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
// component
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  // component props
  props: {
    options: {
      type: Array,
      "default": function _default() {
        return [];
      }
    },
    css: {
      type: String,
      "default": ''
    },
    value: {
      "default": null
    }
  },
  // component data
  data: function data() {
    return {
      visible: false,
      top: false,
      bottom: false,
      index: -1,
      optlist: [],
      val: null,
      text: ''
    };
  },
  // watch methods
  watch: {
    options: function options() {
      this.loadOptions();
    },
    value: function value() {
      this.updateOption();
    }
  },
  // computed methods
  computed: {
    // build menu list
    optionsList: function optionsList() {
      var _this = this;

      return this.optlist.map(function (option, index) {
        option.active = index === _this.index ? true : false;
        return option;
      });
    }
  },
  // custom methods
  methods: {
    // on trigger click
    onClick: function onClick(e) {
      this.$emit('click', e);
      this.listShow();
    },
    // on trigger focus
    onFocus: function onFocus(e) {
      this.$emit('focus', e);
      this.listShow();
    },
    // reset selected values
    resetValues: function resetValues() {
      this.index = -1;
      this.val = null;
      this.text = '';
    },
    // set selected values
    setValues: function setValues(index) {
      var deft = {
        value: null,
        text: ''
      };
      var option = this.optlist[index] || deft;
      this.val = option.value;
      this.text = option.text;
      this.index = index;
    },
    // change current select option
    changeOption: function changeOption(index, hide) {
      this.setValues(index);
      this.$emit('input', this.val);
      this.$emit('change', this.val);
      if (hide) this.listHide();
    },
    // update selected option values
    updateOption: function updateOption() {
      this.resetValues();

      for (var i = 0; i < this.optlist.length; ++i) {
        if (this.optlist[i].value === this.value) {
          return this.setValues(i);
        }
      }
    },
    // load options from nested slots elements, or props
    loadOptions: function loadOptions() {
      var slots = this.$slots && this.$slots["default"] ? this.$slots["default"] : [];
      var list = slots.filter(function (e) {
        return e.elm instanceof HTMLOptionElement;
      });
      var optlist = [];

      for (var i = 0; i < list.length; ++i) {
        var elm = list[i].elm;
        var value = elm.value;
        var text = String(elm.textContent || value || '').trim(); // unserialize values

        if (/^\-?[\d\.]+$/.test(value)) value = parseFloat(value) || 0;
        if (value === 'true') value = true;
        if (value === 'false') value = false;
        optlist.push({
          value: value,
          text: text
        });
      }

      this.optlist = optlist.length ? optlist : this.options.slice();
      this.updateOption();
    },
    // show menu
    listShow: function listShow(e) {
      if (this.visible || !this.$refs.trigger) return;
      var pos = this.$utils.boxPosition(this.$refs.trigger);
      this.top = pos.top;
      this.bottom = pos.bottom;
      this.visible = true;
    },
    // hide menu
    listHide: function listHide(e) {
      this.visible = false;
    },
    // detect click outside container
    clickOut: function clickOut(e) {
      if (!this.$refs.menu.contains(e.target)) {
        this.listHide(e);
      }
    },
    // change option on arrow key press
    keyDown: function keyDown(e) {
      var key = this.$utils.keyboard(e);
      var first = 0;
      var total = this.optlist.length;
      var last = total ? total - 1 : 0;
      if (!this.visible || !total) return;

      if (key.up && this.index > first) {
        e.preventDefault();
        return this.changeOption(this.index - 1);
      }

      if (key.down && this.index < last) {
        e.preventDefault();
        return this.changeOption(this.index + 1);
      }

      if (key.enter) {
        e.preventDefault();
        return this.changeOption(this.index, true);
      }
    }
  },
  // comonent mounted
  mounted: function mounted() {
    this.loadOptions();
    document.addEventListener('click', this.clickOut);
    document.addEventListener('keydown', this.keyDown);
  },
  // comonent destroyed
  destroyed: function destroyed() {
    document.removeEventListener('click', this.clickOut);
    document.removeEventListener('keydown', this.keyDown);
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Spinner.vue?vue&type=script&lang=js&":
/*!************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Spinner.vue?vue&type=script&lang=js& ***!
  \************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
//
//
//
//
//
//
//
//
//
// component
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  // component props
  props: {
    active: {
      type: Boolean,
      "default": false
    },
    text: {
      type: String,
      "default": 'Loading'
    }
  },
  // component data
  data: function data() {
    return {
      visible: false,
      failed: false,
      message: ''
    };
  },
  // custom methods
  methods: {
    // show the spinner
    show: function show(message) {
      this.$emit('onShow');
      this.visible = true;
      this.failed = false;
      this.message = String(message || '').trim();
    },
    // show error state spinner
    error: function error(message) {
      this.$emit('onError');
      this.visible = true;
      this.failed = true;
      this.message = String(message || '').trim();
    },
    // hise the spinner
    hide: function hide() {
      this.$emit('onHide');
      this.visible = false;
      this.failed = false;
      this.message = '';
    },
    // on spinner click
    click: function click(e) {
      this.$emit('onClick', e);
    }
  },
  // check initial state on mount
  mounted: function mounted() {
    if (this.active) {
      this.show(this.text);
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Tabs.vue?vue&type=script&lang=js&":
/*!*********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Tabs.vue?vue&type=script&lang=js& ***!
  \*********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
// component
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  // component props
  props: {
    data: {
      type: Object,
      "default": function _default() {
        return {};
      }
    }
  },
  // component data
  data: function data() {
    return {
      slides: [],
      // content slides
      tabs: [],
      // tabs data from slides
      index: 0,
      // index of current selected tab
      inline: false,
      // if tabs will be displayed inline (flex-row)
      visible: false,
      // dropdown tabs visible state
      width: 0 // computed width taken by all tabs inline

    };
  },
  // watch methods
  watch: {
    // rebuild the tabs when some external data changes
    data: function data() {
      this.buildTabs();
    }
  },
  // computed methods
  computed: {
    // name of active tab
    tabName: function tabName() {
      if (!this.tabs.length) return '';
      return this.tabs[this.index].name;
    }
  },
  // custom methods
  methods: {
    // reset local data
    resetData: function resetData() {
      this.slides = [];
      this.tabs = [];
    },
    // toggle tabs dropdown
    toggleDropdown: function toggleDropdown(e) {
      if (this.inline) return;
      this.visible = !this.visible;
    },
    // show tabs dropdown
    showDropdown: function showDropdown(e) {
      if (this.inline) return;
      this.visible = true;
    },
    // hide tabs dropdown
    hideDropdown: function hideDropdown(e) {
      if (this.inline) return;
      this.visible = false;
    },
    // set active tab
    activateTab: function activateTab(index) {
      this.index = typeof index === 'number' ? parseInt(index) : this.index;

      for (var i = 0; i < this.slides.length; ++i) {
        this.slides[i].classList.remove('active');
      }

      this.slides[this.index].classList.add('active');
      this.hideDropdown();
      this.buildTabs();
    },
    // calculate total tabs width inline
    calculateWidth: function calculateWidth() {
      var div = document.createElement('div');
      div.style.position = 'absolute';
      div.style.left = '-1000px';
      div.style.padding = '0 1em 0 0';
      document.body.appendChild(div);
      this.width = 0;

      for (var i = 0; i < this.tabs.length; ++i) {
        div.innerHTML = this.tabs[i].name;
        this.width += div.clientWidth || 0;
      }

      document.body.removeChild(div);
    },
    // resolse tabs display type (inline, dropdown)
    resolveTabs: function resolveTabs() {
      var boxWidth = this.$refs.container.offsetWidth || 0;
      this.inline = window.innerWidth > 720 && this.width < boxWidth;
    },
    // build tabs from slides
    buildSlides: function buildSlides() {
      var slots = this.$slots["default"].filter(function (e) {
        return e.elm instanceof Element;
      });
      var index = 0;
      var slides = [];

      for (var i = 0; i < slots.length; ++i) {
        var slide = slots[i].elm;
        if (slide.hasAttribute('active')) this.index = i;
        slide.setAttribute('class', 'tabs-slide fx fx-fade-in');
        slides.push(slide);
      }

      this.slides = slides;
    },
    // create list of tabs from loaded slides (sections)
    buildTabs: function buildTabs() {
      var tabs = [];

      for (var i = 0; i < this.slides.length; ++i) {
        var slide = this.slides[i];
        var styles = slide.getAttribute('btn-class') || '';
        var name = slide.getAttribute('btn-name') || 'Tab ' + (i + 1);
        var active = i === this.index ? true : false;
        tabs.push({
          styles: styles,
          name: name,
          active: active
        });
      }

      this.tabs = tabs;
    }
  },
  // on mounted
  mounted: function mounted() {
    this.buildSlides();
    this.activateTab();
    this.calculateWidth();
    this.resolveTabs();
    window.addEventListener('resize', this.resolveTabs);
  },
  // on destroyed
  destroyed: function destroyed() {
    this.resetData();
    window.removeEventListener('resize', this.resolveTabs);
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Toggle.vue?vue&type=script&lang=js&":
/*!***********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Toggle.vue?vue&type=script&lang=js& ***!
  \***********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
//
//
//
//
//
//
//
//
// component
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  // component props
  props: {
    value: {
      type: Boolean,
      "default": false
    },
    text: {
      type: String,
      "default": '...'
    }
  },
  // custom mounted
  methods: {
    onClick: function onClick(e) {
      this.$emit('click', e);
    },
    onChange: function onChange(e) {
      this.$emit('input', !this.value);
      this.$emit('change', e);
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/TokenIcon.vue?vue&type=script&lang=js&":
/*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/TokenIcon.vue?vue&type=script&lang=js& ***!
  \**************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
//
//
//
//
//
//
// component
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  // component props
  props: {
    image: {
      type: String,
      "default": '',
      required: true
    },
    alt: {
      type: String,
      "default": 'ICON'
    }
  },
  // custom mounted
  methods: {
    // handler for token images that don't exist
    imageError: function imageError(e) {
      e.target.classList.add('default');
    }
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/TokenList.vue?vue&type=script&lang=js&":
/*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/TokenList.vue?vue&type=script&lang=js& ***!
  \**************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Spinner_vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Spinner.vue */ "./src/market/components/Spinner.vue");
/* harmony import */ var _Search_vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Search.vue */ "./src/market/components/Search.vue");
/* harmony import */ var _TokenIcon_vue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TokenIcon.vue */ "./src/market/components/TokenIcon.vue");
/* harmony import */ var _Dropdown_vue__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Dropdown.vue */ "./src/market/components/Dropdown.vue");
/* harmony import */ var _Toggle_vue__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Toggle.vue */ "./src/market/components/Toggle.vue");
/* harmony import */ var _LineChart_vue__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./LineChart.vue */ "./src/market/components/LineChart.vue");
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//





 // component

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  // component list
  components: {
    Spinner: _Spinner_vue__WEBPACK_IMPORTED_MODULE_0__["default"],
    Search: _Search_vue__WEBPACK_IMPORTED_MODULE_1__["default"],
    TokenIcon: _TokenIcon_vue__WEBPACK_IMPORTED_MODULE_2__["default"],
    Dropdown: _Dropdown_vue__WEBPACK_IMPORTED_MODULE_3__["default"],
    Toggle: _Toggle_vue__WEBPACK_IMPORTED_MODULE_4__["default"],
    LineChart: _LineChart_vue__WEBPACK_IMPORTED_MODULE_5__["default"]
  },
  // component props
  props: {
    header: {
      type: Object,
      "default": function _default() {
        return {};
      }
    },
    options: {
      type: Object,
      "default": function _default() {
        return {};
      },
      required: true
    },
    sortData: {
      type: Object,
      "default": function _default() {
        return {};
      },
      required: true
    },
    priceData: {
      type: Array,
      "default": function _default() {
        return [];
      },
      required: true
    },
    marketsData: {
      type: Object,
      "default": function _default() {
        return {};
      },
      required: true
    },
    tickerStatus: {
      type: Number,
      "default": 0
    }
  },
  // comonent data
  data: function data() {
    return {
      searchStr: '',
      listCount: 0,
      listLeft: 0
    };
  },
  // watch methods
  watch: {
    priceData: function priceData() {
      this.updateSpinner();
    },
    tickerStatus: function tickerStatus() {
      this.updateSpinner();
    }
  },
  // computed methods
  computed: {
    // get filtered and sorted ticker list for display
    tickerList: function tickerList() {
      var market = this.options.prices.market;
      var _this$sortData$ticker = this.sortData.ticker,
          column = _this$sortData$ticker.column,
          order = _this$sortData$ticker.order;
      var limit = parseInt(this.options.prices.limit) | 0;
      var search = String(this.searchStr).replace(/[^A-Z0-9]+/gi, '');
      var regex = search.length > 1 ? new RegExp(search, 'i') : null;
      var count = this.priceData.length;
      var list = []; // filter the list

      while (count--) {
        var p = this.priceData[count];
        if (market && p.market !== market) continue;
        if (regex && !(regex.test(p.token) || regex.test(p.name))) continue;
        list.push(p);
      } // sort the list


      list = this.$utils.sort(list, column, order); // update paging totals

      var total = list.length;
      this.listCount = total;
      this.listLeft = 0; // trim the list

      if (total && limit && limit < total) {
        list = list.slice(0, limit);
        this.listLeft = total - list.length;
      }

      return list;
    },
    // sort-by label for buttons, etc
    sortByLabel: function sortByLabel() {
      var column = this.sortData.ticker.column;

      switch (column) {
        case 'token':
          return 'Token';

        case 'percent':
          return 'Percent';

        case 'close':
          return 'Price';

        case 'volatility':
          return 'Volatility';

        case 'danger':
          return 'Danger';

        case 'change':
          return 'Change';

        case 'marketVolume':
          return 'Volume';

        case 'tokenVolume':
          return 'Volume';

        case 'trades':
          return 'Trades';

        default:
          return 'Default';
      }
    },
    // text to show in limit filter controls
    limitCountLabel: function limitCountLabel() {
      var limit = parseInt(this.options.prices.limit) | 0;
      if (limit && limit < this.listCount) return limit + '/' + this.listCount;
      return 'All ' + this.listCount;
    },
    // text about hidden list pair
    listLeftText: function listLeftText() {
      var total = this.listCount;
      var remain = this.listLeft;
      var market = this.options.prices.market;
      var limit = this.options.prices.limit;
      var count = this.$utils.noun(total, market + ' token pair', market + ' token pairs');
      if (remain) return 'Showing ' + limit + ' of ' + count;
      return 'Showing all ' + count;
    }
  },
  // custom mounted
  methods: {
    // check if key is active sort option
    activeSort: function activeSort(column) {
      return this.sortData.ticker.column === column;
    },
    // check if num is active list limit option
    activeLimit: function activeLimit(limit) {
      return this.options.prices.limit === limit;
    },
    // check if market is active selected market
    activeMarket: function activeMarket(market) {
      return this.options.prices.market === market;
    },
    // apply options
    saveOptions: function saveOptions() {
      this.$opts.saveOptions(this.options);
    },
    // set app url route
    setRoute: function setRoute(route) {
      this.$router.setRoute(route);
    },

    /*Link() {
      let { token, market } = this.modalData;
      //this.$bus.emit( 'handleClick', '/user/trade/'+ token +'_'+ market +'/', '_blank' );
        if (window.location.href.indexOf("practice") > -1) {
            window.open("/user/practice/" + token, "_self")
        } else {
            window.open("/user/trade/" + token, "_self")
        }
    },*/
    // set list limit value
    limitList: function limitList(num) {
      this.options.prices.limit = parseInt(num) | 0;
      this.saveOptions();
    },
    // filter by asset
    toggleMarket: function toggleMarket(market) {
      this.options.prices.market = String(market || 'USDT');
      this.saveOptions();
    },
    // update page spinner
    updateSpinner: function updateSpinner() {
      if (!this.$refs.spinner) return;
      if (this.tickerList.length) return this.$refs.spinner.hide();
      if (this.tickerStatus === 0) return this.$refs.spinner.error('Socket API not connected');
      if (this.tickerStatus === 1) return this.$refs.spinner.show('Waiting for price data');
    }
  },
  // on component mounted
  mounted: function mounted() {
    this.updateSpinner();
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/TokenPage.vue?vue&type=script&lang=js&":
/*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/TokenPage.vue?vue&type=script&lang=js& ***!
  \**************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Spinner_vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Spinner.vue */ "./src/market/components/Spinner.vue");
/* harmony import */ var _Tabs_vue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tabs.vue */ "./src/market/components/Tabs.vue");
/* harmony import */ var _TokenIcon_vue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TokenIcon.vue */ "./src/market/components/TokenIcon.vue");
/* harmony import */ var _LineChart_vue__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./LineChart.vue */ "./src/market/components/LineChart.vue");
/* harmony import */ var _AlarmsList_vue__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./AlarmsList.vue */ "./src/market/components/AlarmsList.vue");
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//




 // import NewsList from './NewsList.vue';
// component

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  // component list
  components: {
    Spinner: _Spinner_vue__WEBPACK_IMPORTED_MODULE_0__["default"],
    Tabs: _Tabs_vue__WEBPACK_IMPORTED_MODULE_1__["default"],
    TokenIcon: _TokenIcon_vue__WEBPACK_IMPORTED_MODULE_2__["default"],
    LineChart: _LineChart_vue__WEBPACK_IMPORTED_MODULE_3__["default"],
    AlarmsList: _AlarmsList_vue__WEBPACK_IMPORTED_MODULE_4__["default"] // NewsList,

  },
  // component props
  props: {
    modalData: {
      type: Object,
      "default": function _default() {
        return {};
      },
      required: true
    },
    // pair data
    alarmsData: {
      type: Array,
      "default": function _default() {
        return [];
      }
    },
    newsEntries: {
      type: Array,
      "default": function _default() {
        return [];
      }
    }
  },
  // comonent data
  data: function data() {
    return {
      coinRank: this.modalData.rank,
      marketCap: this.modalData.capusd,
      totalSupply: this.modalData.supply,
      totalVolume: this.modalData.marketVolume,
      curPrice: this.modalData.close,
      usdPrice: 0,
      alarmsCount: 0,
      newsCount: 0,
      // line chart
      chartWidth: 800,
      chartHeight: 120,
      chartData: []
    };
  },
  // watch methods
  watch: {
    // update title as token data changes
    modalData: function modalData() {
      var p = this.modalData;
      this.$bus.emit('setTitle', p.pair + ' ' + p.arrow + ' ' + p.sign + p.percent);
    }
  },
  // component methods
  methods: {
    Link: function Link() {
      var _this$modalData = this.modalData,
          token = _this$modalData.token,
          market = _this$modalData.market; //this.$bus.emit( 'handleClick', '/user/trade/'+ token +'_'+ market +'/', '_blank' );

      if (window.location.href.indexOf("practice") > -1) {
        window.open("/user/practice/" + token + '/' + market, "_self");
      } else if (window.location.href.indexOf("trade") > -1) {
        window.open("/user/trade/" + token + '/' + market, "_self");
      } else {
        window.open("/user/exchange/" + token + '/' + market, "_self");
      }
    },
    // update alarms count for this token
    onAlarmsCount: function onAlarmsCount(count) {
      this.alarmsCount = count;
    },
    // update events count for this token
    onNewsCount: function onNewsCount(count) {
      this.newsCount = count;
    },
    // spinner helper
    spinner: function spinner(name, method, message) {
      if (!this.$refs[name] || !method) return;
      this.$refs[name][method](message);
    },
    // fetch token data from api
    fetchGlobalData: function fetchGlobalData() {
      var _this = this;

      this.$coincap.fetchCoin(this.modalData.id, function (data) {
        var rank = data.rank,
            marketCapUsd = data.marketCapUsd,
            supply = data.supply,
            volumeUsd24Hr = data.volumeUsd24Hr,
            priceUsd = data.priceUsd;
        _this.coinRank = rank || _this.coinRank;
        _this.marketCap = marketCapUsd || _this.marketCap;
        _this.totalSupply = supply || _this.totalSupply;
        _this.totalVolume = volumeUsd24Hr || _this.totalVolume;
        _this.usdPrice = priceUsd || _this.usdPrice;
      });
    },
    // fetch last 24h candle data
    fetchChartData: function fetchChartData() {
      var _this2 = this;

      var symbol = this.modalData.symbol;
      this.spinner('chartSpinner', 'show', 'Loading chart data');
      this.$binance.fetchChartData(symbol, function (prices) {
        if (prices.length) {
          _this2.spinner('chartSpinner', 'hide');

          _this2.chartData = prices;
        } else {
          _this2.spinner('chartSpinner', 'error', 'No data for ' + symbol);
        }
      });
    }
  },
  // component mounted
  mounted: function mounted() {
    this.fetchGlobalData();
    this.fetchChartData();
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Topbar.vue?vue&type=script&lang=js&":
/*!***********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Topbar.vue?vue&type=script&lang=js& ***!
  \***********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
// component
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  // component props
  props: {
    header: {
      type: Object,
      "default": function _default() {
        return {};
      }
    },
    options: {
      type: Object,
      "default": function _default() {
        return {};
      }
    },
    priceData: {
      type: Array,
      "default": function _default() {
        return [];
      }
    },
    historyData: {
      type: Array,
      "default": function _default() {
        return [];
      }
    },
    alarmsData: {
      type: Array,
      "default": function _default() {
        return [];
      }
    },
    newsEntries: {
      type: Array,
      "default": function _default() {
        return [];
      }
    },
    tickerStatus: {
      type: Number,
      "default": 0
    },
    tickerTime: {
      type: String,
      "default": ''
    }
  },
  // component data
  data: function data() {
    return {
      watching: false,
      IsUser: true,
      IsAdmin: true
    };
  },
  // computed methods
  computed: {
    // compute number of active alarms for all tokens
    alarmsCount: function alarmsCount() {
      return this.alarmsData.filter(function (e) {
        return e.active;
      }).length | 0;
    },
    // compute number of "new" history entries
    historyCount: function historyCount() {
      return this.historyData.filter(function (e) {
        return e.isNew;
      }).length | 0;
    },
    // compute number of "new" news entries
    newsCount: function newsCount() {
      return this.newsEntries.filter(function (e) {
        return e.isNew;
      }).length | 0;
    },
    // check if alert button should be visible
    hasBubble: function hasBubble() {
      return this.historyCount || this.newsCount;
    },
    // get top 3 usdt coins based on volume
    marketPrices: function marketPrices() {
      var market = this.options.prices.market || 'USDT';
      var list = this.priceData.filter(function (p) {
        return p.market === market;
      });
      return this.$utils.sort(list, 'percent', 'desc').slice(0, 3);
    }
  },
  // custom methods
  methods: {
    // set app url route
    setRoute: function setRoute(route) {
      this.$router.setRoute(route);
      this.checkWho();
    },
    // toggle socket connection
    toggleConnection: function toggleConnection() {
      if (this.tickerStatus) {
        this.$binance.stopTickerStream();
      } else {
        this.$binance.startTickerStream(true);
      }
    },
    checkWho: function checkWho() {
      if (window.location.href.indexOf("admin") > -1) {
        this.IsAdmin = !this.IsAdmin;
      } else {
        this.IsUser = !this.IsUser;
      }
    }
  },
  // on component created
  created: function created() {
    var _this = this;

    this.$bus.on('priceWatch', function (status) {
      _this.watching = status;
    });
  }
});

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/WatchForm.vue?vue&type=script&lang=js&":
/*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/WatchForm.vue?vue&type=script&lang=js& ***!
  \**************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _configs_watchPresets__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../configs/watchPresets */ "./src/market/configs/watchPresets.js");
/* harmony import */ var _modules_watcher__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../modules/watcher */ "./src/market/modules/watcher.js");
/* harmony import */ var _SelectMenu_vue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SelectMenu.vue */ "./src/market/components/SelectMenu.vue");
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//


 // component

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  // sub components
  components: {
    SelectMenu: _SelectMenu_vue__WEBPACK_IMPORTED_MODULE_2__["default"]
  },
  // component props
  props: {
    header: {
      type: Object,
      "default": function _default() {
        return {};
      }
    },
    options: {
      type: Object,
      "default": function _default() {
        return {};
      },
      required: true
    },
    tickerStatus: {
      type: Number,
      "default": 0,
      required: true
    },
    priceData: {
      type: Array,
      "default": function _default() {
        return [];
      },
      required: true
    },
    assetsList: {
      type: Array,
      "default": function _default() {
        return [];
      },
      required: true
    },
    marketsData: {
      type: Object,
      "default": function _default() {
        return {};
      },
      required: true
    }
  },
  // comonent data
  data: function data() {
    return {
      // display
      visible: false,
      overflow: false,
      under: true,
      sto: null,
      // price watch
      watcher: new _modules_watcher__WEBPACK_IMPORTED_MODULE_1__["default"](),
      countInfo: '...',
      active: false,
      start: 0,
      elapsed: '0s',
      // watchform options
      watchPreset: '',
      // selected name
      watchPresets: _configs_watchPresets__WEBPACK_IMPORTED_MODULE_0__["default"],
      watchOptions: {
        market: 'BTC',
        // market pair
        priceType: 'change',
        // change, gain, loss
        priceChange: '2',
        // change percent
        priceCheck: 'below',
        // above, below
        price: '',
        // custom price limit
        volumeType: 'gain',
        // change, gain, loss
        volumeChange: '1',
        // change percent
        volumeCheck: 'above',
        // above, below
        volume: '',
        // custom volume limit
        changeCheck: 'above',
        // above, below
        change: '0',
        // custom 24h percent change
        volatilityCheck: 'below',
        // above, below
        volatility: '0',
        // custom volatility limit
        dangerCheck: 'below',
        // above, below
        danger: '0',
        // custom danger limit
        timeCheck: 'less',
        // more, less
        timeLimit: '10',
        // limit change by time (mins)
        filterType: 'deny',
        // deny, allow
        filterText: '' // csv tokens str

      }
    };
  },
  // watch methods
  watch: {
    // check prices when list updates, if enabled
    priceData: function priceData() {
      this.updateWatchCount();
      this.checkPrices();
    }
  },
  // computed methods
  computed: {
    // build markets select options
    marketOptions: function marketOptions() {
      var options = [];

      for (var key in this.marketsData) {
        if (!this.marketsData.hasOwnProperty(key)) continue;
        var _this$marketsData$key = this.marketsData[key],
            token = _this$marketsData$key.token,
            count = _this$marketsData$key.count;
        options.push({
          value: token,
          text: "".concat(token, " Pairs (").concat(count, ")")
        });
      }

      return options;
    },
    // get presets list
    presetsList: function presetsList() {
      var _this = this;

      return this.watchPresets.map(function (p) {
        p.active = _this.watchPreset === p.name ? true : false;
        return p;
      });
    }
  },
  // custom methods
  methods: {
    // toggle open/close
    toggle: function toggle(e) {
      if (this.visible) {
        this.close(e);
      } else {
        this.open(e);
      }
    },
    // open from container
    open: function open(e) {
      var _this2 = this;

      if (!this.$refs.watchform || this.visible) return; // start open animation

      this.visible = true;
      this.overflow = false;
      this.under = false;
      var box = this.$refs.watchform.firstChild.getBoundingClientRect();
      this.$refs.watchform.style.maxHeight = box.height + 'px'; // allow overflowing once it's open

      if (this.sto) clearTimeout(this.sto);
      this.sto = setTimeout(function () {
        _this2.overflow = true;
      }, 400);
    },
    // close from container
    close: function close(e) {
      var _this3 = this;

      if (!this.$refs.watchform || !this.visible) return; // start closing animation

      this.visible = false;
      this.overflow = false;
      this.$refs.watchform.style.maxHeight = '0px'; // send to back once hidden

      if (this.sto) clearTimeout(this.sto);
      this.sto = setTimeout(function () {
        _this3.under = true;
      }, 400);
    },
    // only allow numbers for some form inputs
    numInput: function numInput(e) {
      this.watchOptions.price = String(this.watchOptions.price).replace(/[^\d\.\-]+/g, '');
      this.watchOptions.volume = String(this.watchOptions.volume).replace(/[^\d\.\-]+/g, '');
    },
    // add a preset
    addPreset: function addPreset(name, options) {
      if (!name || this.watchPresets.filter(function (p) {
        return p.name === name;
      }).length) return;
      options = Object.assign({}, this.watchOptions, options);
      this.watchPresets.push({
        name: name,
        options: options
      });
    },
    // remove preset
    removePreset: function removePreset(name) {
      if (!name) return;
      this.watchPresets = this.watchPresets.filter(function (p) {
        return p.name !== name;
      });
    },
    // apply a preset
    applyPreset: function applyPreset(name) {
      var preset = name ? this.watchPresets.filter(function (p) {
        return p.name === name;
      }).shift() : null;

      if (preset) {
        this.watchPreset = preset.name;
        this.watchOptions = Object.assign(this.watchOptions, preset.options);
        this.buildSnapshot();
        this.$notify.flush();
      }
    },
    // reset some things when the form is changed while runnig
    formChange: function formChange(e) {
      this.watchPreset = '';
      this.buildSnapshot();
      this.$notify.flush();
    },
    // start price watch
    startWatch: function startWatch() {
      if (this.active || this.tickerStatus !== 2) return;
      this.active = true;
      this.elapsed = '0s';
      this.buildSnapshot();
      this.$bus.emit('priceWatch', this.active);
      this.$bus.emit('showNotice', 'Price watch is now active.', 'success');
    },
    // stop price watch
    stopWatch: function stopWatch() {
      if (!this.active) return;
      this.active = false;
      this.$notify.flush();
      this.$bus.emit('priceWatch', this.active);
      this.$bus.emit('showNotice', 'Price watch has stopped.', 'warning');
    },
    // toggle price watch
    toggleWatch: function toggleWatch(e) {
      e && e.preventDefault();

      if (this.active) {
        this.stopWatch();
      } else {
        this.startWatch();
      }
    },
    // control watchform component
    toggleWatchform: function toggleWatchform(action) {
      switch (action) {
        case 'open':
          return this.open();

        case 'close':
          return this.close();

        case 'toggle':
          return this.toggle();

        case 'start':
          return this.startWatch();

        case 'stop':
          return this.stopWatch();
      }
    },
    // make a copy of current prices to start comparing against
    buildSnapshot: function buildSnapshot() {
      this.start = Date.now();
      this.watcher.setOptions(this.watchOptions);
      this.watcher.updateSnapshot(this.priceData);
    },
    // count total pairs for select option
    updateWatchCount: function updateWatchCount() {
      if (!this.visible) return;
      var market = String(this.watchOptions.market || '');
      var count = this.watcher.watchCount(this.priceData);
      this.countInfo = this.$utils.noun(count, market + ' pair', market + ' pairs');
      this.elapsed = this.$utils.elapsed((Date.now() - this.start) / 1000) || '0s';
    },
    // check current prices against snapshot based on options
    checkPrices: function checkPrices() {
      var _this4 = this;

      if (!this.active) return;
      this.watcher.check(this.priceData, function (p, pc, vc, t) {
        var pricePerc = pc.sign + Number(pc.percent).toFixed(2) + '%';
        var volPerc = vc.sign + Number(vc.percent).toFixed(2) + '%';
        var curPrice = 'Price ' + pc.arrow + ' ' + pricePerc + ' (' + Number(p.close).toFixed(8) + ' ' + p.market + ')';
        var curVol = 'Volume ' + vc.arrow + ' ' + volPerc + ' (' + _this4.$utils.money(p.assetVolume, 0) + ' ' + p.market + ')';
        var curVolat = 'Volatility ● ' + Number(p.volatility).toFixed(1) + '% 24h';

        var elapsed = 'Last ● ' + _this4.$utils.elapsed(t);

        var title = [p.name, '(' + p.pair + ')', p.sign + Number(p.percent).toFixed(2) + '%'].join(' ');
        var info = [curPrice, curVol, curVolat, elapsed].join('\n');

        var icon = _this4.$utils.fullUrl(p.image);

        _this4.$notify.add(title, info, icon, function (e) {
          _this4.$bus.emit('setRoute', p.route);
        });

        _this4.$messenger.add(title, info, icon);

        _this4.$history.add(title, info, icon);
      });
    }
  },
  // on component created
  created: function created() {
    this.$bus.on('toggleWatchform', this.toggleWatchform);
    window.addEventListener('resize', this.close);
  },
  // on component mounted
  mounted: function mounted() {
    this.buildSnapshot();
  },
  // on component destroyed
  destroyed: function destroyed() {
    window.removeEventListener('resize', this.close);
  }
});

/***/ }),

/***/ "./src/market/configs/defaultOptions.js":
/*!**********************************************!*\
  !*** ./src/market/configs/defaultOptions.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Application options object
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  // cors proxy for outgoing http requests
  proxy: 'https://binance-watch-wrapper.herokuapp.com/',
  // custom proxy list
  proxylist: ['https://binance-watch-wrapper.herokuapp.com/', 'https://cors-anywhere.herokuapp.com/'],
  // notification options
  notify: {
    enabled: true,
    duration: 10
  },
  // notification audio
  audio: {
    enabled: true,
    volume: 0.5,
    file: '../../../market/audio/audio_2.mp3'
  },
  // search options
  search: {
    fullword: false,
    // must type full search words
    fullcase: false // must type correct word upper/lower case letters

  },
  // live price options
  prices: {
    header: true,
    // show top coins in header
    chart: true,
    // show live price chart in list
    market: 'USDT',
    // default selected market token
    sort: 'marketVolume',
    // price data to sort by
    order: 'desc',
    // price sort direction
    limit: 20 // how many entries to show

  },
  // news related options
  news: {
    enabled: true,
    // enable fetching on a timer
    notify: false,
    // show push notifications for news
    send: false,
    // include news in outgoing notifications (email/telegram)
    interval: 5,
    // how often to try fetching from each source (secs)
    delay: 500,
    // how long to wait before fetching again from each source (secs)
    tweets: 1,
    // how many tweets to fetch at once from each source
    total: 100,
    // how many total tweets to store
    max: 30,
    // max number of news entries to show
    days: 1 // only show entries posted within this number of days

  },
  // binance api config
  binance: {
    enabled: false,
    // status
    apikey: '',
    // api key
    apisecret: '' // api secret

  },
  // mailgun api config
  mailgun: {
    enabled: false,
    // status
    domain: '',
    // account domain
    apikey: '',
    // api key
    email: '' // recipient email

  },
  // telegram bot api config
  telegram: {
    enabled: false,
    // status
    botkey: '',
    // telegram bot id
    userid: '' // recipient chat id

  }
});

/***/ }),

/***/ "./src/market/configs/watchPresets.js":
/*!********************************************!*\
  !*** ./src/market/configs/watchPresets.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Watchform presets
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ([{
  name: 'Top Coins',
  info: 'Coins with recent high trading volume.',
  options: {
    market: 'USDT',
    priceType: 'change',
    priceChange: '2',
    priceCheck: 'below',
    price: '',
    volumeType: 'gain',
    volumeChange: '2',
    volumeCheck: 'above',
    volume: '1000',
    volatilityCheck: 'above',
    volatility: '0',
    dangerCheck: 'below',
    danger: '0',
    timeCheck: 'less',
    timeLimit: '60'
  }
}, {
  name: 'Big Change',
  info: 'Big price change within a short time period.',
  options: {
    market: 'USDT',
    priceType: 'change',
    priceChange: '3',
    priceCheck: 'above',
    price: '0.00000100',
    volumeType: 'gain',
    volumeChange: '2',
    volumeCheck: 'above',
    volume: '',
    volatilityCheck: 'above',
    volatility: '5',
    dangerCheck: 'above',
    danger: '0',
    timeCheck: 'less',
    timeLimit: '30'
  }
}, {
  name: 'Slow Market',
  info: 'Small price change with low volume.',
  options: {
    market: 'USDT',
    priceType: 'change',
    priceChange: '1.5',
    priceCheck: 'above',
    price: '0.00000100',
    volumeType: 'gain',
    volumeChange: '0.5',
    volumeCheck: 'above',
    volume: '',
    volatilityCheck: 'above',
    volatility: '0',
    dangerCheck: 'below',
    danger: '0',
    timeCheck: 'less',
    timeLimit: '60'
  }
}]);

/***/ }),

/***/ "./src/market/modules/ajax.js":
/*!************************************!*\
  !*** ./src/market/modules/ajax.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Ajax)
/* harmony export */ });
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./store */ "./src/market/modules/store.js");
/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logger */ "./src/market/modules/logger.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ "./src/market/modules/utils.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_utils__WEBPACK_IMPORTED_MODULE_2__);
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

/**
 * Basic XHR ajax request module
 */


 // ajax class

var Ajax = /*#__PURE__*/function () {
  /**
   * Constructor
   * @param {object}  options  Initial options
   */
  function Ajax(options) {
    _classCallCheck(this, Ajax);

    this._url = null;
    this._options = {
      // save response data to local store cache
      cache: false,
      // key prefix for local store cache
      prefix: 'ajax_data_',
      // proxy url to preppend to outgoing requests
      proxy: ''
    };
    this.setOptions(options);
  }
  /**
   * Merge options
   * @param {object}  options  Options object
   */


  _createClass(Ajax, [{
    key: "setOptions",
    value: function setOptions(options) {
      Object.assign(this._options, options);
    }
    /**
     * Convert object into a query string
     * @param {object}  data  Key/Val data pairs
     */

  }, {
    key: "serializeData",
    value: function serializeData(data) {
      var q = [];

      if (_typeof(data) === 'object') {
        Object.keys(data).forEach(function (k) {
          q.push(encodeURIComponent(k) + '=' + encodeURIComponent(data[k]));
        });
      }

      return q.join('&');
    }
    /**
     * GET request alias
     */

  }, {
    key: "get",
    value: function get(address, options) {
      this.request('GET', address, options);
    }
    /**
     * POST request alias
     */

  }, {
    key: "post",
    value: function post(address, options) {
      this.request('POST', address, options);
    }
    /**
     * PUT request alias
     */

  }, {
    key: "put",
    value: function put(address, options) {
      this.request('PUT', address, options);
    }
    /**
     * DELETE request alias
     */

  }, {
    key: "delete",
    value: function _delete(address, options) {
      this.request('DELETE', address, options);
    }
    /**
     * AJAX request method
     * @param {string}  method   Request method verb
     * @param {string}  address  Endpoint URL
     * @param {object}  options  Request options
     */

  }, {
    key: "request",
    value: function request(method, address, options) {
      var _this = this;

      method = String(method || '').toUpperCase();
      address = String(address || '').trim();
      options = Object.assign({}, this._options, options); // setup options

      var isDone = false;
      var type = String(options.type || 'text');
      var proxy = String(options.proxy || '').trim();
      var timeout = parseInt(options.timeout) || 0;
      var headers = Object.assign({}, options.headers);
      var cacheTime = parseInt(options.cache) || 0; // seconds to be cached

      var cacheKey = options.prefix + _utils__WEBPACK_IMPORTED_MODULE_2___default().unique(method + '|' + address);
      var xhr = new XMLHttpRequest(); // setup callbacks

      var onError = typeof options.error === 'function' ? options.error : function () {};
      var onSuccess = typeof options.success === 'function' ? options.success : function () {};
      var onDone = typeof options.done === 'function' ? options.done : function () {}; // check params

      if (!method) return onError(xhr, 0, 'Must specify a request method to make a new request.');
      if (!address) return onError(xhr, 0, 'Must specify a request url address to make a new request.'); // check cache

      if (cacheTime) {
        var cacheData = _store__WEBPACK_IMPORTED_MODULE_0__["default"].getData(cacheKey);

        if (cacheData) {
          onSuccess(xhr, 200, cacheData);
          onDone(xhr, 200, cacheData);
          isDone = true;
          return;
        }
      } // resolve full request url


      var fullUrl = _utils__WEBPACK_IMPORTED_MODULE_2___default().fullUrl(address);

      try {
        this._url = new URL(fullUrl);
      } catch (err) {} // encode data for get requests


      if (method === 'GET' && _typeof(options.data) === 'object') {
        headers['Content-type'] = 'application/x-www-form-urlencoded';
        fullUrl += '?' + this.serializeData(options.data);
        options.data = null;
      } // init request handler


      xhr.open(method, proxy + fullUrl, true);
      xhr.responseType = type; // set timeout

      if (timeout) {
        xhr.timeout = timeout < 1000 ? 1000 * timeout : timeout;
      } // default headers


      xhr.setRequestHeader('Accept', 'application/json, text/plain, text/html, */*'); // send ajax header unless stated not to

      if (!options.notAjax) {
        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
      } // check for basic auth data and set header


      if (options.auth && _typeof(options.auth) === 'object') {
        var username = String(options.auth.username || '').trim();
        var password = String(options.auth.password || '').trim();
        xhr.setRequestHeader('Authorization', 'Basic ' + btoa(username + ':' + password));
      } // custom headers


      Object.keys(headers).forEach(function (name) {
        xhr.setRequestHeader(name, headers[name]);
      }); // data load handler

      xhr.addEventListener('load', function (e) {
        var _this$_responseParams = _this._responseParams('load', xhr, type),
            status = _this$_responseParams.status,
            response = _this$_responseParams.response,
            error = _this$_responseParams.error;

        (0,_logger__WEBPACK_IMPORTED_MODULE_1__["default"])(status, method, fullUrl);
        (0,_logger__WEBPACK_IMPORTED_MODULE_1__["default"])(response);

        if (status && status < 400) {
          if (cacheTime) _store__WEBPACK_IMPORTED_MODULE_0__["default"].setData(cacheKey, response, cacheTime);
          onSuccess(xhr, status, response);
        } else {
          onError(xhr, status, error);
        }

        if (!isDone) onDone(xhr, status, response);
        isDone = true;
      }); // request error handler

      xhr.addEventListener('error', function (e) {
        var _this$_responseParams2 = _this._responseParams('error', xhr, type),
            status = _this$_responseParams2.status,
            response = _this$_responseParams2.response,
            error = _this$_responseParams2.error;

        onError(xhr, status, error);
        if (!isDone) onDone(xhr, status, response);
        isDone = true;
      }); // request abort handler

      xhr.addEventListener('abort', function (e) {
        var _this$_responseParams3 = _this._responseParams('abort', xhr, type),
            status = _this$_responseParams3.status,
            response = _this$_responseParams3.response,
            error = _this$_responseParams3.error;

        onError(xhr, status, error);
        if (!isDone) onDone(xhr, status, response);
        isDone = true;
      }); // request timeout handler

      xhr.addEventListener('timeout', function (e) {
        var _this$_responseParams4 = _this._responseParams('timeout', xhr, type),
            status = _this$_responseParams4.status,
            response = _this$_responseParams4.response,
            error = _this$_responseParams4.error;

        onError(xhr, status, error);
        if (!isDone) onDone(xhr, status, response);
        isDone = true;
      }); // send the request

      xhr.send(options.data || null);
    }
    /**
     * Parse information about the response
     * @param {string}  evt   Event type
     * @param {object}  xhr   XMLHttpRequest object
     * @param {string}  type  Expected response type
     */

  }, {
    key: "_responseParams",
    value: function _responseParams(evt, xhr, type) {
      var hostname = this._url.hostname || 'nohost';
      var status = xhr.status | 0;
      var response = type === 'text' ? xhr.responseText : xhr.response;
      var error = '';

      if (evt === 'load' && status >= 400 && response) {
        error = "".concat(hostname, "(").concat(status, "): ") + this._dataReduce(response);
      }

      if (evt === 'error') {
        error = "".concat(hostname, "(").concat(status, "): The request has been aborted due to a network related problem.");
      }

      if (evt === 'abort') {
        error = "".concat(hostname, "(").concat(status, "): The request has been aborted by the client before completing.");
      }

      if (evt === 'timeout') {
        error = "".concat(hostname, "(").concat(status, "): The request has been aborted due to the server not responding.");
      }

      if ((status <= 0 || status >= 400) && !error) {
        error = "".concat(hostname, "(").concat(status, "): The request was rejected by the server and no error message was given.");
      }

      return {
        status: status,
        response: response,
        error: error
      };
    }
    /**
     * Reduce data object into a single string line.
     * @param {object}  data     Object or string to be scanned
     * @param {array}   output   Output array
     */

  }, {
    key: "_dataReduce",
    value: function _dataReduce(data, output) {
      var _this2 = this;

      output = output || [];

      if (data && typeof data === 'string') {
        output.push(data);
      } else if (data && _typeof(data) === 'object') {
        Object.keys(data).forEach(function (key) {
          _this2._dataReduce(data[key], output);
        });
      }

      return output.join(' | ').replace(/[\t\r\n\s]+/g, ' ').trim();
    }
  }]);

  return Ajax;
}();



/***/ }),

/***/ "./src/market/modules/alarms.js":
/*!**************************************!*\
  !*** ./src/market/modules/alarms.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Alarms)
/* harmony export */ });
/* harmony import */ var _bus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bus */ "./src/market/modules/bus.js");
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./store */ "./src/market/modules/store.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ "./src/market/modules/utils.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_utils__WEBPACK_IMPORTED_MODULE_2__);
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/**
 * Price alarms helper class
 */




var Alarms = /*#__PURE__*/function (_Bus) {
  _inherits(Alarms, _Bus);

  var _super = _createSuper(Alarms);

  /**
   * Constructor
   */
  function Alarms(options) {
    var _this;

    _classCallCheck(this, Alarms);

    _this = _super.call(this);
    _this._alarms = [];
    _this._options = Object.assign({
      // key used for storage
      key: 'alarms_data' // ...

    }, options);
    return _this;
  }
  /**
   * Save current alarms data to store and emit list
   */


  _createClass(Alarms, [{
    key: "saveData",
    value: function saveData() {
      this.emit('update', this._alarms);
      _store__WEBPACK_IMPORTED_MODULE_1__["default"].setData(this._options.key, this._alarms);
    }
    /**
     * Load saved history data from store
     */

  }, {
    key: "loadData",
    value: function loadData() {
      var data = _store__WEBPACK_IMPORTED_MODULE_1__["default"].getData(this._options.key);
      if (!data || !Array.isArray(data)) return;
      this._alarms = data;
      this.emit('update', this._alarms);
    }
    /**
     * Get count of active alarms for a symbol
     * @param {string}  symbol  Pair symbol string
     */

  }, {
    key: "getCount",
    value: function getCount(symbol) {
      return this._alarms.filter(function (a) {
        return a.symbol === symbol && a.active;
      }).length;
    }
    /**
     * Adds an alarm for a pair
     * @param {object}  pairData  Pair data object from binance socket class
     * @param {number}  price     Alarm price
     */

  }, {
    key: "add",
    value: function add(pairData, price) {
      if (!pairData || !pairData.symbol || !pairData.close) return false;
      var symbol = pairData.symbol,
          token = pairData.token,
          asset = pairData.asset,
          pair = pairData.pair,
          image = pairData.image,
          close = pairData.close;
      close = parseFloat(close) || 0; // current price

      price = parseFloat(price) || 0; // alarm price

      if (!close || !price || close === price) return false;
      if (this.find(symbol, price).length) return false;
      var id = _utils__WEBPACK_IMPORTED_MODULE_2___default().randString(20);
      var time = Date.now();
      var active = true;
      var arrow = price > close ? '▲' : '▼';
      var sign = price > close ? '≥' : '≤';
      var check = price > close ? 'gain' : 'loss';
      var alarm = {
        id: id,
        time: time,
        active: active,
        arrow: arrow,
        sign: sign,
        check: check,
        symbol: symbol,
        token: token,
        asset: asset,
        pair: pair,
        image: image,
        close: close,
        price: price
      };

      this._alarms.push(alarm);

      this.saveData();
      return true;
    }
    /**
     * Find existing alarms for a symbol and price
     * @param {string}  symbol  Pair symbol string
     * @param {number}  price   Alarm price
     */

  }, {
    key: "find",
    value: function find(symbol, price) {
      price = parseFloat(price) || 0;
      return this._alarms.filter(function (a) {
        return a.symbol === symbol && a.price === price;
      });
    }
    /**
     * Remove an alarm from the list by ID
     * @param {string}  id  Unique alarm ID
     */

  }, {
    key: "remove",
    value: function remove(id) {
      if (!id || typeof id !== 'string') return;
      this._alarms = this._alarms.filter(function (a) {
        return a.id !== id;
      });
      this.saveData();
    }
    /**
     * Toggle status for an alarm by ID
     * @param {string}   id      Unique alarm ID
     * @param {boolean}  active  Alarm active status
     */

  }, {
    key: "toggle",
    value: function toggle(id, active) {
      if (!id || typeof id !== 'string') return;
      if (typeof active !== 'boolean') return;

      this._alarms.forEach(function (a) {
        if (a.id !== id) return;
        a.active = active;
      });

      this.saveData();
    }
    /**
     * Flush all alarms
     */

  }, {
    key: "flush",
    value: function flush() {
      this._alarms = [];
      this.saveData();
    }
    /**
     * Check price of a symbol against all saved alarms
     * @param {string}   symbol    Pair symbol string
     * @param {number}   close     Current pair close price
     * @param {function} callback  Callback handler
     */

  }, {
    key: "check",
    value: function check(symbol, close, callback) {
      var count = 0;

      for (var i = 0; i < this._alarms.length; ++i) {
        var a = this._alarms[i];
        var price = Number(a.price || 0);
        if (a.symbol !== symbol || !a.active) continue;
        if (a.check === 'loss' && close > price) continue;
        if (a.check === 'gain' && close < price) continue;
        var diff = 'equal to';
        if (close > price) diff = 'more than';
        if (close < price) diff = 'less than';
        var closeFixed = Number(close).toFixed(8);
        var priceFixed = Number(price).toFixed(8);
        var title = "".concat(a.symbol, " price ").concat(a.arrow, " ").concat(closeFixed, " ").concat(a.asset);
        var info = "".concat(a.symbol, " is now ").concat(diff, " your alarm price of ").concat(priceFixed, " ").concat(a.asset, ".");
        callback(title, info, a);
        a.active = false;
        count++;
      } // save alarms data if alarms were triggered


      if (count) this.saveData();
    }
  }]);

  return Alarms;
}(_bus__WEBPACK_IMPORTED_MODULE_0__["default"]);



/***/ }),

/***/ "./src/market/modules/binance.js":
/*!***************************************!*\
  !*** ./src/market/modules/binance.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Binance)
/* harmony export */ });
/* harmony import */ var _bus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bus */ "./src/market/modules/bus.js");
/* harmony import */ var _symbol__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./symbol */ "./src/market/modules/symbol.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ "./src/market/modules/utils.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_utils__WEBPACK_IMPORTED_MODULE_2__);
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/**
 * Binance socket api wrapper class
 */




var Binance = /*#__PURE__*/function (_Bus) {
  _inherits(Binance, _Bus);

  var _super = _createSuper(Binance);

  /**
   * Constructor
   */
  function Binance() {
    var _this;

    _classCallCheck(this, Binance);

    _this = _super.call(this);
    _this._ajax = null;
    _this._apiurl = 'https://api.binance.com/api';
    _this._wssurl = 'wss://stream.binance.com:9443';
    _this._apikey = ''; // binance API key

    _this._apisecret = ''; // binance API secret

    _this._listenkey = ''; // user stream listen key

    _this._wait = 10000; // reconnect wait (mils)

    _this._coindata = {}; // data about each token

    _this._symbols = {}; // unique symbols data cache

    _this._markets = {}; // available markets and total assets

    _this._reconnect = {};
    _this._timers = {};
    _this._socks = {};
    return _this;
  }
  /**
   * Set ajax module reference to use for requests
   */


  _createClass(Binance, [{
    key: "useAjax",
    value: function useAjax(ajax) {
      this._ajax = ajax;
    }
    /**
     * Set API key
     */

  }, {
    key: "setApiKey",
    value: function setApiKey() {
      var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      this._apikey = String(key || '').trim();
    }
    /**
     * Set API secret
     */

  }, {
    key: "setApiSecret",
    value: function setApiSecret() {
      var secret = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      this._apisecret = String(secret || '').trim();
    }
    /**
     * Set coins data fetched from somewhere else
     */

  }, {
    key: "setCoinData",
    value: function setCoinData() {
      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      this._coindata = Object.assign(this._coindata, data);
    }
    /**
     * Set socket reconnect boolean for an id
     */

  }, {
    key: "setReconnect",
    value: function setReconnect(id, toggle) {
      this._reconnect[id] = toggle ? true : false;
    }
    /**
     * Check reconnect toggle for an id and call a handler function
     */

  }, {
    key: "checkReconnect",
    value: function checkReconnect(id, callback) {
      if (!this._reconnect[id]) return;
      setTimeout(callback, this._wait);
    }
    /**
     * Get public api endpoint url
     */

  }, {
    key: "getPublicUrl",
    value: function getPublicUrl(endpoint, params) {
      var qstr = this._ajax.serializeData(Object.assign({}, params));

      return this._apiurl + endpoint + '?' + qstr;
    }
    /**
     * Get user signed api endpoint url
     */

  }, {
    key: "getSignedUrl",
    value: function getSignedUrl(endpoint, params) {
      var crypto = window.CryptoJS || null;
      var recvWindow = 100000;
      var timestamp = Date.now() - recvWindow / 2;

      var qstr = this._ajax.serializeData(Object.assign({
        recvWindow: recvWindow,
        timestamp: timestamp
      }, params));

      var signature = crypto ? crypto.HmacSHA256(qstr, this._apisecret).toString(crypto.enc.Hex) : '';
      return this._apiurl + endpoint + '?' + qstr + '&signature=' + signature;
    }
    /**
     * Fetch data about available markets form exchange
     */

  }, {
    key: "fetchMarketsData",
    value: function fetchMarketsData() {
      var _this2 = this;

      if (!this._ajax) return;
      var remote = "".concat(this._apiurl, "/v3/exchangeInfo");
      var local = "../../../market/json/exchangeInfo.json"; // build markets data and emit it out

      var handleResponse = function handleResponse(res) {
        if (res && Array.isArray(res.symbols)) {
          var _iterator = _createForOfIteratorHelper(res.symbols),
              _step;

          try {
            var _loop = function _loop() {
              var symb = _step.value;
              var token = symb.quoteAsset; // market

              var count = res.symbols.filter(function (s) {
                return s.quoteAsset === token && s.baseAsset !== token && s.status === 'TRADING';
              }).length;
              _this2._markets[token] = {
                token: token,
                count: count
              };
            };

            for (_iterator.s(); !(_step = _iterator.n()).done;) {
              _loop();
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }

          _this2.emit('markets_data', _this2._markets);
        }
      }; // try remote, then local if it fails


      this._ajax.get(remote, {
        type: 'json',
        success: function success(xhr, status, res) {
          return handleResponse(res);
        },
        error: function error(xhr, status, err) {
          _this2._ajax.get(local, {
            type: 'json',
            proxy: false,
            success: function success(xhr, status, res) {
              return handleResponse(res);
            }
          });
        }
      });
    }
    /**
     * Fetch last 24h candle data
     */

  }, {
    key: "fetchChartData",
    value: function fetchChartData(symbol, cb) {
      var _this3 = this;

      if (!this._ajax || !symbol) return;
      var endpoint = "".concat(this._apiurl, "/v3/klines?symbol=").concat(symbol, "&interval=1h&limit=168");
      var prices = [];

      this._ajax.get(endpoint, {
        type: 'json',
        // cache: 600,
        success: function success(xhr, status, res) {
          if (res && Array.isArray(res)) {
            for (var i = 0; i < res.length; ++i) {
              prices.push(parseFloat(res[i][4])); // close price
            }
          }

          if (typeof cb === 'function') cb(prices);

          _this3.emit('chart_data', {
            symbol: symbol,
            prices: prices
          });
        },
        error: function error(xhr, status, err) {
          if (typeof cb === 'function') cb(prices);
          console.warn(err);
        }
      });
    }
    /**
     * Parse user balances data
     */

  }, {
    key: "parseUserBalances",
    value: function parseUserBalances(data) {
      var _this4 = this;

      var balances = [];
      if (Array.isArray(data)) balances = data; // as-is

      if (Array.isArray(data.balances)) balances = data.balances; // http

      if (Array.isArray(data.B)) balances = data.B; // websocket

      balances = balances.map(function (t) {
        var asset = String(t.a || t.asset || '');
        var pair = asset === 'BTC' ? 'USDT' : 'BTC';
        var route = '/symbol/' + asset + pair;
        var name = _this4._names[asset] || asset;
        var free = parseFloat(t.f || t.free) || 0;
        var locked = parseFloat(t.l || t.locked) || 0;
        var total = free + locked;
        return {
          asset: asset,
          name: name,
          route: route,
          free: free,
          locked: locked,
          total: total
        };
      });
      return balances.filter(function (t) {
        return t.total > 0;
      });
    }
    /**
     * Parse order data from an API/Socket response and combine it with symbol data
     * @param {object}  data  Order data response
     */

  }, {
    key: "parseOrderData",
    value: function parseOrderData(data) {
      var now = Date.now();
      var time = Number(data.T || data.transactTime || now); // transaction time

      var id = String(data.i || data.orderId || ''); // order id

      var symbol = String(data.s || data.symbol || ''); // trade pair symbol

      var side = String(data.S || data.side || ''); // book side (BUY, SELL)

      var type = String(data.o || data.type || ''); // order type (LIMIT, MARKET, etc)

      var status = String(data.X || data.status || ''); // order status (NEW, CANCELED, FILLED, etc)

      var price = Number(data.p || data.price || 0); // order book price

      var quantity = Number(data.q || data.origQty || 0); // original trade quantity

      var filled = Number(data.z || data.executedQty || 0); // filled trade quantity

      var total = Number(data.Z || data.cummulativeQuoteQty || 0); // total trade asset cost

      var feeAsset = String(data.N || ''); // fee asset used for commission (BNB, etc)

      var feeAmount = Number(data.n || 0); // fee commission amount

      var percent = Number(filled / quantity * 100); // filled percent
      // resolve available amount after token fee has been deducted

      var smb = this._symbols[symbol] || new _symbol__WEBPACK_IMPORTED_MODULE_1__["default"](symbol);
      var amount = feeAsset === smb.token ? quantity - feeAmount : quantity;
      var unique = _utils__WEBPACK_IMPORTED_MODULE_2___default().unique(symbol + '|' + Math.floor(amount));
      status = status === 'NEW' ? 'OPEN' : status;

      if (!price && total) {
        price = total / quantity;
      }

      if (!total && price) {
        total = price * quantity;
      }

      return smb.getData({
        id: id,
        unique: unique,
        side: side,
        time: time,
        type: type,
        status: status,
        price: price,
        quantity: quantity,
        filled: filled,
        amount: amount,
        total: total,
        feeAsset: feeAsset,
        feeAmount: feeAmount,
        percent: percent
      });
    }
    /**
     * Build fake order data
     * @param {string}  symbol    Full trading symbol
     * @param {string}  type      Order type (LIMIT, MARKET)
     * @param {string}  side      Book side (BUY, SELL)
     * @param {number}  price     Book price
     * @param {number}  quantity  Order quantity
     */

  }, {
    key: "fakeOrderData",
    value: function fakeOrderData(symbol, type, side, price, quantity, status) {
      var time = Date.now();
      var id = _utils__WEBPACK_IMPORTED_MODULE_2___default().randString(20);
      var priceStr = Number(price).toFixed(8);
      var quantityStr = Number(quantity).toFixed(0);
      var totalStr = Number(price * quantity).toFixed(8);
      return this.parseOrderData({
        symbol: symbol,
        orderId: id,
        transactTime: time,
        price: priceStr,
        origQty: quantityStr,
        executedQty: quantityStr,
        cummulativeQuoteQty: totalStr,
        status: status,
        type: type,
        side: side
      });
    }
    /**
     * Simulate an order with fake API request
     * @param {string}  symbol    Full trading symbol
     * @param {string}  type      Order type (LIMIT, MARKET)
     * @param {string}  side      Book side (BUY, SELL)
     * @param {number}  price     Book price
     * @param {number}  quantity  Order quantity
     */

  }, {
    key: "placeFakeOrder",
    value: function placeFakeOrder(symbol, type, side, price, quantity) {
      var _this5 = this;

      var secs = Math.floor(1000 + Math.random() * 4000); // 1-5 secs

      var orderOpen = this.fakeOrderData(symbol, type, side, price, quantity, 'OPEN');
      var orderFilled = this.fakeOrderData(symbol, type, side, price, quantity, 'FILLED');
      var orderCanceled = this.fakeOrderData(symbol, type, side, price, quantity, 'CANCELED');
      var orderResult = secs < 4900 ? orderFilled : orderCanceled;
      setTimeout(function () {
        _this5.emit('book_create', orderOpen);
      }, 300); // added to book

      setTimeout(function () {
        _this5.emit('user_order', orderResult);
      }, secs); // filled or canceled
    }
    /**
     * Place new order in book
     * @param {string}  symbol    Full trading symbol
     * @param {string}  type      Order type (LIMIT, MARKET)
     * @param {string}  side      Book side (BUY, SELL)
     * @param {number}  price     Book price
     * @param {number}  quantity  Order quantity
     * @param {string}  inforce   Time inforce type (GTC, IOC, FOK)
     */

  }, {
    key: "placeOrder",
    value: function placeOrder(symbol, type, side, price, quantity, inforce) {
      var _this6 = this;

      if (!this._apikey || !this._ajax) return;
      if (!symbol || !type || !side || !quantity || quantity <= 0) return;
      price = Number(price).toFixed(8);
      quantity = Number(quantity).toFixed(0);
      inforce = String(inforce || 'FOK');
      var params = {
        symbol: symbol,
        side: side,
        type: type,
        quantity: quantity
      };
      if (type === 'LIMIT') Object.assign(params, {
        price: price,
        timeInForce: inforce
      });
      Object.assign(params, {
        newOrderRespType: 'RESULT'
      });

      this._ajax.post(this.getSignedUrl('/v3/order', params), {
        type: 'json',
        headers: {
          'X-MBX-APIKEY': this._apikey
        },
        success: function success(xhr, status, response) {
          var order = _this6.parseOrderData(response);

          _this6.emit('book_create', order);
        },
        error: function error(xhr, status, _error) {
          var order = _this6.fakeOrderData(symbol, type, side, price, quantity, 'REJECTED');

          _this6.emit('book_fail', order, _error);
        }
      });
    }
    /**
     * Cancel order from book
     * @param {string}  symbol    Full trading symbol
     * @param {number}  orderId   Order ID number
     * @param {number}  quantity  Order quantity
     */

  }, {
    key: "cancelOrder",
    value: function cancelOrder(symbol, orderId, quantity) {
      var _this7 = this;

      if (!this._apikey || !this._ajax) return;
      if (!symbol || !orderId) return;

      this._ajax["delete"](this.getSignedUrl('/v3/order', {
        symbol: symbol,
        orderId: orderId
      }), {
        type: 'json',
        headers: {
          'X-MBX-APIKEY': this._apikey
        },
        success: function success(xhr, status, response) {
          var order = _this7.fakeOrderData(symbol, 'MARKET', 'CANCEL', 1, quantity, 'COMPLETE');

          _this7.emit('book_cancel', order);
        },
        error: function error(xhr, status, _error2) {
          var order = _this7.fakeOrderData(symbol, 'MARKET', 'CANCEL', 1, quantity, 'FAILED');

          _this7.emit('book_fail', order, _error2);
        }
      });
    }
    /**
     * Get user account data over ajax
     */

  }, {
    key: "fetchUserAccount",
    value: function fetchUserAccount() {
      var _this8 = this;

      if (!this._apikey || !this._ajax) return;

      this._ajax.get(this.getSignedUrl('/v3/account'), {
        type: 'json',
        headers: {
          'X-MBX-APIKEY': this._apikey
        },
        success: function success(xhr, status, response) {
          var balances = _this8.parseUserBalances(response);

          _this8.emit('user_balances', balances);

          _this8.emit('user_data', true);
        },
        error: function error(xhr, status, _error3) {
          _this8.emit('user_fail', _error3);

          _this8.stopUserStream();
        }
      });
    }
    /**
     * Fetch current open orders
     */

  }, {
    key: "fetchOpenOrders",
    value: function fetchOpenOrders() {
      var _this9 = this;

      if (!this._apikey || !this._ajax) return;

      this._ajax.get(this.getSignedUrl('/v3/openOrders'), {
        type: 'json',
        headers: {
          'X-MBX-APIKEY': this._apikey
        },
        success: function success(xhr, status, response) {
          response.forEach(function (o) {
            return _this9.emit('user_order', _this9.parseOrderData(o));
          });

          _this9.emit('user_data', true);
        },
        error: function error(xhr, status, _error4) {
          _this9.emit('user_fail', _error4);
        }
      });
    }
    /**
     * Attempt to start a new user stream
     */

  }, {
    key: "initUserStream",
    value: function initUserStream(reconnect) {
      var _this10 = this;

      if (!this._apikey || !this._ajax) return;
      this.emit('user_init', Date.now());
      this.stopUserStream();

      this._ajax.post(this.getPublicUrl('/v1/userDataStream'), {
        type: 'json',
        headers: {
          'X-MBX-APIKEY': this._apikey
        },
        success: function success(xhr, status, response) {
          var time = 1000 * 60 * 20; // 20 mins

          var func = _this10.extendStreamKey.bind(_this10);

          _this10._listenkey = String(response.listenKey || '').trim();

          _this10.emit('user_listenkey', _this10._listenkey);

          _this10.startUserStream(_this10._listenkey, reconnect);

          _this10.startTimer('user', time, func, false);
        },
        error: function error(xhr, status, _error5) {
          _this10.emit('user_fail', _error5);
        }
      });
    }
    /**
     * Extend user stream listen key
     */

  }, {
    key: "extendStreamKey",
    value: function extendStreamKey() {
      var _this11 = this;

      if (!this._apikey || !this._ajax) return;
      if (!this._listenkey) return;

      this._ajax.put(this.getPublicUrl('/v1/userDataStream', {
        listenKey: this._listenkey
      }), {
        type: 'json',
        headers: {
          'X-MBX-APIKEY': this._apikey
        },
        success: function success(xhr, status, response) {
          _this11.emit('user_listenkey', _this11._listenkey);
        }
      });
    }
    /**
     * Connect to a live user account data stream
     */

  }, {
    key: "startUserStream",
    value: function startUserStream(listenKey, reconnect) {
      var _this12 = this;

      this.setReconnect('user', reconnect || false);
      this.emit('user_init', Date.now());
      var ws = this.sockConnect('user', this._wssurl + '/ws/' + listenKey);
      if (!ws) return this.emit('user_fail', 'Could not connect to user stream API endpoint.');
      ws.addEventListener('open', function (e) {
        _this12.emit('user_open', e);

        _this12.fetchUserAccount();

        _this12.fetchOpenOrders();
      });
      ws.addEventListener('error', function (e) {
        _this12.emit('user_error', e);

        _this12.stopTimer('user');
      });
      ws.addEventListener('close', function (e) {
        _this12.emit('user_close', e);

        _this12.stopTimer('user');

        _this12.checkReconnect('user', function () {
          return _this12.startUserStream(listenKey, reconnect);
        });
      });
      ws.addEventListener('message', function (e) {
        _this12.emit('user_data', true);

        var data = JSON.parse(e.data || '{}') || {};

        if (data.e === 'outboundAccountInfo') {
          var balances = _this12.parseUserBalances(data);

          return _this12.emit('user_balances', balances);
        }

        if (data.e === 'executionReport') {
          var order = _this12.parseOrderData(data);

          return _this12.emit('user_order', order);
        }
      });
    }
    /**
     * Stop user stream
     */

  }, {
    key: "stopUserStream",
    value: function stopUserStream() {
      this.setReconnect('user', false);
      this.stopTimer('user');
      this.sockClose('user');
    }
    /**
     * Connect to live ticker prices socket endpoint
     */

  }, {
    key: "startTickerStream",
    value: function startTickerStream(reconnect) {
      var _this13 = this;

      this.setReconnect('ticker', reconnect || false);
      this.emit('ticker_init', Date.now());
      var ws = this.sockConnect('ticker', this._wssurl + '/ws/!ticker@arr');
      if (!ws) return this.emit('ticker_fail', 'Could not connect to live ticker stream API endpoint.');
      ws.addEventListener('open', function (e) {
        _this13.emit('ticker_open', e);

        _this13.startTickerTimer();
      });
      ws.addEventListener('error', function (e) {
        _this13.emit('ticker_error', e);

        _this13.stopTimer('ticker');
      });
      ws.addEventListener('close', function (e) {
        _this13.emit('ticker_close', e);

        _this13.stopTimer('ticker');

        _this13.checkReconnect('ticker', function () {
          return _this13.startTickerStream(reconnect);
        });
      });
      ws.addEventListener('message', function (e) {
        _this13.emit('ticker_data', true);

        var list = JSON.parse(e.data || '[]') || [];
        var markets = Object.keys(_this13._markets);
        var count = list.length; // wait for markets data to be available before creating symbols

        if (!markets.length || !count) return;

        while (count--) {
          var ticker = list[count];
          var pair = ticker.s; // trading pair symbol str

          var symbol = _this13._symbols[pair] || new _symbol__WEBPACK_IMPORTED_MODULE_1__["default"](pair); // cached

          symbol.splitSymbol(markets); // split pair symbol into token / market

          symbol.setCoinData(_this13._coindata[symbol.token]); // data from coincap.io

          symbol.setTickerData(ticker); // update symbol ticker data

          symbol.resolveImage(); // find an icon for this token

          _this13._symbols[pair] = symbol; // update cache
        }
      });
    }
    /**
     * Start ticker data timer
     */

  }, {
    key: "startTickerTimer",
    value: function startTickerTimer() {
      var _this14 = this;

      this.stopTimer('ticker');
      this.startTimer('ticker', 1000, function () {
        var keys = Object.keys(_this14._symbols);
        var count = keys.length;
        var prices = [];

        while (count--) {
          prices.push(_this14._symbols[keys[count]]);
        }

        _this14.emit('ticker_prices', prices);
      }, true);
    }
    /**
     * Stop price ticker
     */

  }, {
    key: "stopTickerStream",
    value: function stopTickerStream() {
      this.setReconnect('ticker', false);
      this.stopTimer('ticker');
      this.sockClose('ticker');
    }
    /**
     * Start custom timer
     * @param {string}    id        Timer id name
     * @param {number}    time      Interval mils
     * @param {function}  callback  Callback function
     * @param {boolean}   init      Init callback
     */

  }, {
    key: "startTimer",
    value: function startTimer(id, time, callback, init) {
      this.stopTimer(id);
      this._timers[id] = setInterval(callback, time);
      if (init) callback();
    }
    /**
     * Stop custom timer
     * @param {string}  id  Timer id name
     */

  }, {
    key: "stopTimer",
    value: function stopTimer(id) {
      if (!id || !this._timers.hasOwnProperty(id)) return;
      clearInterval(this._timers[id]);
      delete this._timers[id];
    }
    /**
     * Create a WebSocket connection
     * @param {string}  id      Ref id name
     * @param {string}  endpoint  Socket endpoint url
     */

  }, {
    key: "sockConnect",
    value: function sockConnect(id, endpoint) {
      if (!id || !endpoint) return;
      this.emit('sock_init', endpoint);
      this.sockClose(id);

      if (!('WebSocket' in window)) {
        this.emit('sock_fail', 'This web browser does not have WebSocket support.');
        return false;
      }

      try {
        var ws = new WebSocket(endpoint);
        this._socks[id] = ws;
        return ws;
      } catch (err) {
        var message = String(err.message || 'WebSocket endpoint connection failed for (' + endpoint + ').');
        this.emit('sock_fail', message);
        return false;
      }
    }
    /**
     * Close socket connection and remove it from the list
     * @param {string}  id  Socket id name
     */

  }, {
    key: "sockClose",
    value: function sockClose(id) {
      if (!id || !this._socks.hasOwnProperty(id)) return;
      this.emit('sock_close', id);

      this._socks[id].close();

      delete this._socks[id];
    }
    /**
     * Close all active socket connections
     */

  }, {
    key: "sockCloseAll",
    value: function sockCloseAll() {
      var _this15 = this;

      Object.keys(this._socks).forEach(function (id) {
        return _this15.sockClose(id);
      });
    }
  }]);

  return Binance;
}(_bus__WEBPACK_IMPORTED_MODULE_0__["default"]);



/***/ }),

/***/ "./src/market/modules/bus.js":
/*!***********************************!*\
  !*** ./src/market/modules/bus.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Bus)
/* harmony export */ });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

/**
 * Basic event bus class
 */
var Bus = /*#__PURE__*/function () {
  /**
   * Constructor
   */
  function Bus() {
    _classCallCheck(this, Bus);

    this._events = {};
  }
  /**
   * Register an event handler
   * @param {string}    name      Event name
   * @param {function}  callback  Event callback function
   */


  _createClass(Bus, [{
    key: "on",
    value: function on(name, callback) {
      if (!name || typeof name !== 'string') return;
      if (typeof callback !== 'function') return;
      if (!this._events.hasOwnProperty(name)) this._events[name] = [];

      this._events[name].push(callback);
    }
    /**
     * Emit an event by name (first arg) with rest of args passed to it
     */

  }, {
    key: "emit",
    value: function emit() {
      var args = Array.from(arguments);
      var name = args.length ? args.shift() : '';

      if (this._events.hasOwnProperty(name)) {
        for (var i = 0; i < this._events[name].length; ++i) {
          var cb = this._events[name][i];
          cb.apply(cb, args);
        }
      }

      args = undefined; // gc
    }
  }]);

  return Bus;
}();



/***/ }),

/***/ "./src/market/modules/coincap.js":
/*!***************************************!*\
  !*** ./src/market/modules/coincap.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Coincap)
/* harmony export */ });
/* harmony import */ var _bus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bus */ "./src/market/modules/bus.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/**
 * Handle talking to coincap.io to get coin related data
 * https://docs.coincap.io/
 */


var Coincap = /*#__PURE__*/function (_Bus) {
  _inherits(Coincap, _Bus);

  var _super = _createSuper(Coincap);

  /**
   * Constructor
   */
  function Coincap() {
    var _this;

    _classCallCheck(this, Coincap);

    _this = _super.call(this);
    _this._ajax = null;
    _this._coins = {};
    return _this;
  }
  /**
   * Set ajax module reference to use for requests
   */


  _createClass(Coincap, [{
    key: "useAjax",
    value: function useAjax(ajax) {
      this._ajax = ajax;
    }
    /**
     * Get tokens data object
     */

  }, {
    key: "getData",
    value: function getData() {
      return this._coins;
    }
    /**
     * fetch list of all tokens and their names from API
     */

  }, {
    key: "fetchAll",
    value: function fetchAll() {
      var _this2 = this;

      if (!this._ajax) return;

      this._ajax.get("https://api.coincap.io/v2/assets?limit=2000", {
        type: 'json',
        beforeSend: function beforeSend(xhr) {
          xhr.setRequestHeader('Authorization', 'Bearer t-7618a141-3c2f-425d-af06-46690c5f5539');
        },
        cache: 600,
        proxy: false,
        success: function success(xhr, status, res) {
          if (!res || !Array.isArray(res.data)) return;

          var _iterator = _createForOfIteratorHelper(res.data),
              _step;

          try {
            for (_iterator.s(); !(_step = _iterator.n()).done;) {
              var c = _step.value;
              _this2._coins[c.symbol] = c;
            }
          } catch (err) {
            _iterator.e(err);
          } finally {
            _iterator.f();
          }

          _this2.emit('allcoins', _this2._coins);
        }
      });
    }
    /**
     * Fetch market cap data for a token
     */

  }, {
    key: "fetchCoin",
    value: function fetchCoin(id, cb) {
      var _this3 = this;

      if (!this._ajax || !id) return;

      this._ajax.get("https://api.coincap.io/v2/assets/".concat(id), {
        type: 'json',
        beforeSend: function beforeSend(xhr) {
          xhr.setRequestHeader('Authorization', 'Bearer t-7618a141-3c2f-425d-af06-46690c5f5539');
        },
        cache: 300,
        proxy: false,
        success: function success(xhr, status, res) {
          if (!res || !res.data) return;
          if (typeof cb === 'function') cb(res.data);

          _this3.emit('coindata', res.data);
        }
      });
    }
  }]);

  return Coincap;
}(_bus__WEBPACK_IMPORTED_MODULE_0__["default"]);



/***/ }),

/***/ "./src/market/modules/history.js":
/*!***************************************!*\
  !*** ./src/market/modules/history.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ History)
/* harmony export */ });
/* harmony import */ var _bus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bus */ "./src/market/modules/bus.js");
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./store */ "./src/market/modules/store.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ "./src/market/modules/utils.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_utils__WEBPACK_IMPORTED_MODULE_2__);
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/**
 * Handles saving data to a history list
 */




var History = /*#__PURE__*/function (_Bus) {
  _inherits(History, _Bus);

  var _super = _createSuper(History);

  /**
   * Constructor
   */
  function History(options) {
    var _this;

    _classCallCheck(this, History);

    _this = _super.call(this);
    _this._alarms = [];
    _this._sto = null;
    _this._options = Object.assign({
      // key used for storage
      key: 'history_data',
      // auto remove entries past this value (secs)
      expire: 1800,
      // total number of entries to keep in list
      total: 20 // ...

    }, options);
    return _this;
  }
  /**
   * Save current history data to store and emit list
   */


  _createClass(History, [{
    key: "saveData",
    value: function saveData() {
      this._autoClean();

      this.emit('update', this._alarms);
      _store__WEBPACK_IMPORTED_MODULE_1__["default"].setData(this._options.key, this._alarms);
      if (this._sto) clearTimeout(this._sto);
      this._sto = setTimeout(this.saveData.bind(this), 30000);
    }
    /**
     * Load saved history data from store
     */

  }, {
    key: "loadData",
    value: function loadData() {
      var data = _store__WEBPACK_IMPORTED_MODULE_1__["default"].getData(this._options.key);
      if (!data || !Array.isArray(data)) return;
      this._alarms = data;
      this.saveData();
    }
    /**
     * Add data to history
     * @param {string}  title  Title string
     * @param {string}  info   Info string
     * @param {string}  icon   Icon image URL
     */

  }, {
    key: "add",
    value: function add(title, info, icon) {
      if (!title || !info) return;
      var id = _utils__WEBPACK_IMPORTED_MODULE_2___default().randString(20);
      var time = Date.now();
      var isNew = true;

      this._alarms.unshift({
        id: id,
        time: time,
        isNew: isNew,
        title: title,
        info: info,
        icon: icon
      });

      this.saveData();
    }
    /**
     * Remove an entry from the list by ID
     * @param {string}  id  Unique entry ID
     */

  }, {
    key: "remove",
    value: function remove(id) {
      if (!id || typeof id !== 'string') return;
      this._alarms = this._alarms.filter(function (e) {
        return e.id !== id;
      });
      this.saveData();
    }
    /**
     * Reset new entry indicators
     */

  }, {
    key: "reset",
    value: function reset() {
      this._alarms.forEach(function (e) {
        e.isNew = false;
      });

      this.saveData();
    }
    /**
     * Remove all entries from the list
     */

  }, {
    key: "flush",
    value: function flush() {
      this._alarms = [];
      this.saveData();
    }
    /**
     * Cleanup the list and emit changes
     */

  }, {
    key: "_autoClean",
    value: function _autoClean() {
      var time = Date.now();
      var expire = parseInt(this._options.expire) | 0;
      var total = parseInt(this._options.total) | 0;
      if (expire) this._alarms = this._alarms.filter(function (e) {
        return (time - e.time) / 1000 < expire;
      });
      if (total) this._alarms = this._alarms.slice(0, total);
    }
  }]);

  return History;
}(_bus__WEBPACK_IMPORTED_MODULE_0__["default"]);



/***/ }),

/***/ "./src/market/modules/logger.js":
/*!**************************************!*\
  !*** ./src/market/modules/logger.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

/**
 * Console log wrapper
 */
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var w = __webpack_require__.g || window || null;
  if (!w || !w.DEBUG || !w.console) return;

  for (var i = 0; i < arguments.length; ++i) {
    if (_typeof(arguments[i]) === 'object') {
      arguments[i] = JSON.stringify(arguments[i], null, 2);
    }
  }

  console.log('-'.repeat(100));
  console.log.apply(console, arguments);
}

/***/ }),

/***/ "./src/market/modules/messenger.js":
/*!*****************************************!*\
  !*** ./src/market/modules/messenger.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Messenger)
/* harmony export */ });
/* harmony import */ var _bus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bus */ "./src/market/modules/bus.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/**
 * Binance socket api wrapper class
 */


var Messenger = /*#__PURE__*/function (_Bus) {
  _inherits(Messenger, _Bus);

  var _super = _createSuper(Messenger);

  // constructor
  function Messenger(options) {
    var _this;

    _classCallCheck(this, Messenger);

    _this = _super.call(this);
    _this._ajax = null;
    _this._sto = null;
    _this._queue = [];
    _this._options = Object.assign({
      // how often to check the queue
      seconds: 60,
      // API options for mailgun
      mailgun: {
        enabled: false,
        apikey: '',
        email: '',
        domain: ''
      },
      // API options for telegram
      telegram: {
        enabled: false,
        botkey: '',
        userid: ''
      } // ...

    }, options);
    return _this;
  }
  /**
   * Merge options
   * @param {object}  options  Options object
   */


  _createClass(Messenger, [{
    key: "setOptions",
    value: function setOptions(options) {
      Object.assign(this._options, options);
    }
    /**
     * Set ajax module reference to use for requests
     * @param {object}  ajax  Ajax class instance
     */

  }, {
    key: "useAjax",
    value: function useAjax(ajax) {
      this._ajax = ajax;
    }
    /**
     * Push message data to queue
     * @param {string}  title     Message title
     * @param {string}  message   Message text
     * @param {string}  image     Message image/icon
     * @param {*}       data      Optional data
     */

  }, {
    key: "add",
    value: function add(title, message, image, data) {
      title = String(title || '');
      message = String(message || '');
      image = String(image || '');
      if (!title || !message) return;

      this._queue.push({
        title: title,
        message: message,
        image: image,
        data: data
      });
    }
    /**
     * Flush queue data
     */

  }, {
    key: "flush",
    value: function flush() {
      this._queue = [];
    }
    /**
     * Start the timer
     */

  }, {
    key: "start",
    value: function start() {
      this.stop();

      this._checkQueue();
    }
    /**
     * Stop the timer
     */

  }, {
    key: "stop",
    value: function stop() {
      if (this._sto) clearTimeout(this._sto);
    }
    /**
     * Queue checker
     */

  }, {
    key: "_checkQueue",
    value: function _checkQueue() {
      var secs = parseInt(this._options.seconds) || 0;
      this._sto = setTimeout(this._checkQueue.bind(this), 1000 * secs);
      if (!secs || !this._queue.length) return;
      this.emit('queue', this._queue);

      this._mailgunSend();

      this._telegramSend();

      this._queue = [];
    }
    /**
     * Send queue messages using Mailgun API
     */

  }, {
    key: "_mailgunSend",
    value: function _mailgunSend() {
      var _this2 = this;

      var _this$_options$mailgu = this._options.mailgun,
          enabled = _this$_options$mailgu.enabled,
          apikey = _this$_options$mailgu.apikey,
          email = _this$_options$mailgu.email,
          domain = _this$_options$mailgu.domain;
      if (!enabled || !apikey || !email || !domain || !this._ajax) return;
      var content = '';

      this._queue.forEach(function (q) {
        var title = q.title,
            message = q.message,
            image = q.image;
        message = String(message).replace(/\n+/g, ' <br />');
        content += "\n      <div style=\"border-top: 1px dashed rgba( 0,0,0,0.1 ); margin: 0 0 1em 0;\">\n        <table width=\"100%\" border=\"0\">\n          <tr>\n            <td><img src=\"".concat(image, "\" alt=\"image\" style=\"width: 42px; height: auto; margin: 0 .5em 0 0;\" /></td>\n            <td width=\"100%\"><b>").concat(title, "</b> <br /> ").concat(message, "</td>\n          </tr>\n        </table>\n      </div>");
      });

      var html = "\n    <!DOCTYPE html>\n    <html lang=\"en-US\">\n      <body style=\"margin: 0; padding: 0;\">\n        <div style=\"font-family: monospace; font-size: 10px; padding: 1em;\">\n          ".concat(content, "\n        </div>\n      </body>\n    </html>");
      var fdata = new FormData();
      fdata.append('from', 'Binance Watch App <noreply@' + domain + '>');
      fdata.append('to', 'E-mail Recipient <' + email + '>');
      fdata.append('subject', 'Binance Watch E-mail Notifications (' + this._queue.length + ')');
      fdata.append('html', String(html).trim());

      this._ajax.post('https://api.mailgun.net/v3/' + domain + '/messages', {
        type: 'json',
        data: fdata,
        auth: {
          username: 'api',
          password: apikey
        },
        done: function done(xhr, status, response) {
          if (!response || !response.id) return console.warn('Mailgun-API', status, response);

          _this2.emit('sent', 'E-mail notifications sent to (' + email + ').');
        }
      });
    }
    /**
     * Send queue messages using Telegram API
     */

  }, {
    key: "_telegramSend",
    value: function _telegramSend() {
      var _this3 = this;

      var _this$_options$telegr = this._options.telegram,
          enabled = _this$_options$telegr.enabled,
          botkey = _this$_options$telegr.botkey,
          userid = _this$_options$telegr.userid;
      if (!enabled || !botkey || !userid || !this._ajax) return;
      var content = '';

      this._queue.forEach(function (q) {
        var title = q.title,
            message = q.message;
        content += "<b>".concat(title, "</b> \n");
        content += "".concat(message, " \n");
        content += "\n";
      });

      var fdata = new FormData();
      fdata.append('chat_id', userid);
      fdata.append('text', String(content).trim());
      fdata.append('parse_mode', 'html');

      this._ajax.post('https://api.telegram.org/bot' + botkey + '/sendMessage', {
        type: 'json',
        data: fdata,
        done: function done(xhr, status, response) {
          if (!response || !response.ok) return console.warn('Telegram-API', status, response);

          _this3.emit('sent', 'Telegram notifications sent to (' + userid + ').');
        }
      });
    }
  }]);

  return Messenger;
}(_bus__WEBPACK_IMPORTED_MODULE_0__["default"]);



/***/ }),

/***/ "./src/market/modules/news.js":
/*!************************************!*\
  !*** ./src/market/modules/news.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ News)
/* harmony export */ });
/* harmony import */ var _bus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bus */ "./src/market/modules/bus.js");
/* harmony import */ var _twitter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./twitter */ "./src/market/modules/twitter.js");
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./store */ "./src/market/modules/store.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/**
 * Twitter news handler class
 */




var News = /*#__PURE__*/function (_Bus) {
  _inherits(News, _Bus);

  var _super = _createSuper(News);

  /**
   * Constructor
   */
  function News() {
    var _this;

    _classCallCheck(this, News);

    _this = _super.call(this);
    _this._ajax = null;
    _this._accountsKey = 'news_accounts_data';
    _this._tweetsKey = 'news_tweets_data';
    _this._handlers = [];
    _this._tweets = [];
    _this._blacklist = [];
    _this._counter = 0;
    _this._interval = null;
    _this._options = {
      enabled: true,
      // aut re-fetch news on a timer
      interval: 5,
      // how often to try fetching from each source (secs)
      delay: 300,
      // how long to wait before fetching again from each source (secs)
      days: 1,
      // only show entries posted within this number of days
      tweets: 1,
      // how many tweets to fetch at once from each source
      total: 100 // max number of news entries to store in list

    };
    _this.tweetsHandler = _this.tweetsHandler.bind(_assertThisInitialized(_this));

    _this.setupTimer();

    return _this;
  }
  /**
   * Set ajax module reference to use for requests
   * @param {object}  ajax  Ajax class instance
   */


  _createClass(News, [{
    key: "useAjax",
    value: function useAjax(ajax) {
      this._ajax = ajax;
    }
    /**
     * Update options
     * @param {object}  options  Options object
     */

  }, {
    key: "setOptions",
    value: function setOptions(options) {
      Object.assign(this._options, options);
      this.setupTimer();
      this.updateHandlers();
      this.filterTweets();
    }
    /**
     * Load saved accounts list from store
     */

  }, {
    key: "loadAccounts",
    value: function loadAccounts() {
      var accounts = _store__WEBPACK_IMPORTED_MODULE_2__["default"].getData(this._accountsKey);
      if (!Array.isArray(accounts) || !accounts.length) return;
      this.importAccounts(accounts, true);
    }
    /**
     * Save accounts list to store
     */

  }, {
    key: "saveAccounts",
    value: function saveAccounts() {
      var accounts = this._handlers.map(function (tw) {
        return tw.handle;
      });

      _store__WEBPACK_IMPORTED_MODULE_2__["default"].setData(this._accountsKey, accounts);
      this.emit('handlers', this._handlers);
    }
    /**
     * Load list of twitter handles
     * @param {array}    accounts  List of twitter handle string names
     * @param {boolean}  reset     Reset current list of loaded handlers
     * @param {boolean}  save      Save list of account after importing
     */

  }, {
    key: "importAccounts",
    value: function importAccounts(accounts, reset, save) {
      accounts = Array.isArray(accounts) ? accounts : [];
      var count = 0; // reset current list, if a new list is available

      if (reset && accounts.length) this._handlers = []; // import new accounts list

      var _iterator = _createForOfIteratorHelper(accounts),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var handle = _step.value;
          this.trackAccount(handle) && count++;
        } // save accounts back to store, or just emit loaded list

      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      if (save) {
        this.saveAccounts();
      } else {
        this.emit('handlers', this._handlers);
      }

      return count;
    }
    /**
     * Checks if a handle is already being tracked
     * @param {string}  handle  Twitter handle
     */

  }, {
    key: "tracking",
    value: function tracking(handle) {
      if (!handle || typeof handle !== 'string') return false;
      return this._handlers.filter(function (tw) {
        return tw.handle === handle;
      }).length ? true : false;
    }
    /**
     * Start tracking a new twitter account
     * @param {string}   handle  Twitter handle
     * @param {boolean}  fetch   Fetch tweets after adding
     * @param {boolean}  save    Save accounts after adding
     */

  }, {
    key: "trackAccount",
    value: function trackAccount(handle, fetch, save) {
      if (!handle || typeof handle !== 'string') return false;
      if (this.tracking(handle)) return false; // create new handler, add to list and update options

      var tw = new _twitter__WEBPACK_IMPORTED_MODULE_1__["default"](handle);
      this.updateHandlers(tw);

      this._handlers.push(tw); // fetch tweets now if needed and emit event


      if (fetch) tw.fetchTweets(this._ajax, this.tweetsHandler);
      if (save) this.saveAccounts();
      return true;
    }
    /**
     * Stop tracking a twitter account
     * @param {string}  handle  Twitter handle
     */

  }, {
    key: "untrackAccount",
    value: function untrackAccount(handle) {
      if (!handle || typeof handle !== 'string') return false; // get handler that is being removed from the list, if it exists

      var tw = this._handlers.filter(function (tw) {
        return tw.handle === handle;
      }).shift();

      if (!tw) return true; // remove handler from the list and emit events

      this._handlers = this._handlers.filter(function (tw) {
        return tw.handle !== handle;
      });
      this._tweets = this._tweets.filter(function (t) {
        return t.handle !== handle;
      });
      this.saveAccounts();
      this.saveTweets();
      return true;
    }
    /**
     * Update options for each Twitter handler
     */

  }, {
    key: "updateHandlers",
    value: function updateHandlers(tw) {
      var fetchDelay = parseInt(this._options.delay) || 300;
      var limitCount = parseInt(this._options.tweets) || 1;
      if (tw instanceof _twitter__WEBPACK_IMPORTED_MODULE_1__["default"]) return tw.setOptions({
        fetchDelay: fetchDelay,
        limitCount: limitCount
      });

      this._handlers.forEach(function (tw) {
        return tw.setOptions({
          fetchDelay: fetchDelay,
          limitCount: limitCount
        });
      });
    }
    /**
     * Load cached tweets from store
     */

  }, {
    key: "loadTweets",
    value: function loadTweets() {
      var tweets = _store__WEBPACK_IMPORTED_MODULE_2__["default"].getData(this._tweetsKey);
      if (!Array.isArray(tweets) || !tweets.length) return;
      this._tweets = tweets;
      this.resetTweets();
      this.filterTweets();
      this.saveTweets();
    }
    /**
     * Save current tweets to store
     */

  }, {
    key: "saveTweets",
    value: function saveTweets() {
      _store__WEBPACK_IMPORTED_MODULE_2__["default"].setData(this._tweetsKey, this._tweets);
      this.emit('tweets', this._tweets);
    }
    /**
     * Reset new entries indicator
     */

  }, {
    key: "resetTweets",
    value: function resetTweets() {
      this._tweets.forEach(function (t) {
        t.isNew = false;
      });

      this.saveTweets();
    }
    /**
     * Flush tweets list
     */

  }, {
    key: "flushTweets",
    value: function flushTweets() {
      this._tweets = [];
      this._blacklist = [];
      this.saveTweets();
    }
    /**
     * Remove tweet from list and add ID to blacklist
     * @param {string}  id  Tweet ID
     */

  }, {
    key: "blockTweet",
    value: function blockTweet(id) {
      if (!id) return false;
      this._tweets = this._tweets.filter(function (t) {
        return t.id !== id;
      });
      this._blacklist = this._blacklist.filter(function (tid) {
        return tid !== id;
      });

      this._blacklist.push(id);

      this.saveTweets();
      return true;
    }
    /**
     * Add new tweet object to the list
     * @param {object}  tweet  Tweet object
     */

  }, {
    key: "addTweet",
    value: function addTweet(tweet) {
      if (!tweet || !('id' in tweet)) return false;
      if (this.tweetExists(tweet)) return false;
      if (this.tweetBlocked(tweet)) return false;
      if (this.tweetExpired(tweet)) return false;
      tweet.isNew = true; // for indicator

      this._tweets.push(tweet);

      return true;
    }
    /**
     * Checks if a tweet is in the list of news
     * @param {object}  tweet  Tweet object
     */

  }, {
    key: "tweetExists",
    value: function tweetExists(tweet) {
      if (!tweet || !('id' in tweet)) return false;
      return this._tweets.filter(function (t) {
        return t.id === tweet.id;
      }).length ? true : false;
    }
    /**
     * Checks if a tweet is in the blocklist
     * @param {object}  tweet  Tweet object
     */

  }, {
    key: "tweetBlocked",
    value: function tweetBlocked(tweet) {
      if (!tweet || !('id' in tweet)) return false;
      return this._blacklist.filter(function (id) {
        return id === tweet.id;
      }).length ? true : false;
    }
    /**
     * Checks if a tweet is too old, based on option
     * @param {object}  tweet  Tweet object
     */

  }, {
    key: "tweetExpired",
    value: function tweetExpired(tweet) {
      if (!tweet || !('id' in tweet)) return false;
      var days = parseInt(this._options.days) | 0;
      var secs = (Date.now() - tweet.time) / 1000;
      var age = Math.ceil(secs / 86400);
      return age > days ? true : false;
    }
    /**
     * Handles new tweets that are fetched from the Twitter class
     * @param {string}  err    Error string (empty on success)
     * @param {array}  tweets  Tweets array (empty on error)
     */

  }, {
    key: "tweetsHandler",
    value: function tweetsHandler(err, tweets) {
      if (err) return this.emit('error', err);
      if (!tweets.length) return;

      var _iterator2 = _createForOfIteratorHelper(tweets),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var tweet = _step2.value;
          // it's possible added tweets can get removed due to filtering...
          var added = this.addTweet(tweet);
          this.filterTweets(); // double check if the tweet survived and emit it

          if (added && this.tweetExists(tweet)) {
            this.emit('tweet', tweet);
          }
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }

      this.saveAccounts();
      this.saveTweets();
    }
    /**
     * Cleanup tweets list
     */

  }, {
    key: "filterTweets",
    value: function filterTweets() {
      var _this2 = this;

      var total = parseInt(this._options.total); // filter out old tweets

      this._tweets = this._tweets.filter(function (tweet) {
        return !_this2.tweetExpired(tweet);
      }); // sort tweets from new to old

      this._tweets = this._tweets.sort(function (a, b) {
        if (a.time > b.time) return -1;
        if (a.time < b.time) return 1;
        return 0;
      }); // trim tweets list

      if (total) {
        this._tweets = this._tweets.slice(0, total);
      }
    }
    /**
     * Fetch tweets for an account by handle
     * @param {string}  handle  Twitter handle
     */

  }, {
    key: "fetchByHandle",
    value: function fetchByHandle(handle) {
      if (!handle || typeof handle !== 'string') return false;

      var tw = this._handlers.filter(function (tw) {
        return tw.handle === handle;
      }).shift();

      if (tw) tw.fetchTweets(this._ajax, this.tweetsHandler);
      return true;
    }
    /**
     * Fetch tweets from next handler down the list
     */

  }, {
    key: "fetchNextHandler",
    value: function fetchNextHandler() {
      if (!this._handlers.length) return;
      var last = this._handlers.length - 1;
      var tw = this._handlers[this._counter];
      if (tw) tw.fetchTweets(this._ajax, this.tweetsHandler);
      this._counter = this._counter < last ? this._counter + 1 : 0;
    }
    /**
     * Start the tweets interval handler
     */

  }, {
    key: "setupTimer",
    value: function setupTimer() {
      var _this3 = this;

      this.stopTimer();
      var secs = parseInt(this._options.interval);
      if (!secs) return;
      this._interval = setInterval(function () {
        if (!_this3._options.enabled) return;

        _this3.fetchNextHandler();
      }, 1000 * secs);
    }
    /**
     * Stop the tweets interval handler
     */

  }, {
    key: "stopTimer",
    value: function stopTimer() {
      if (this._interval) {
        clearInterval(this._interval);
        this._interval = null;
      }
    }
  }]);

  return News;
}(_bus__WEBPACK_IMPORTED_MODULE_0__["default"]);



/***/ }),

/***/ "./src/market/modules/notify.js":
/*!**************************************!*\
  !*** ./src/market/modules/notify.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Notify)
/* harmony export */ });
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils */ "./src/market/modules/utils.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_utils__WEBPACK_IMPORTED_MODULE_0__);
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

/**
 * Push notifications and custom alarms handler class
 */


var Notify = /*#__PURE__*/function () {
  // constructor
  function Notify(options) {
    _classCallCheck(this, Notify);

    this._queue = [];
    this._notices = [];
    this._options = {
      // toggle notifications
      enabled: true,
      // notifications duration (secs)
      duration: 10,
      // toggle notification sound
      sound: true,
      // volume of notification sound ( 0 - 1 )
      volume: 1,
      // audio file to play on with notifications
      audio: '../../market/audio/audio_3.mp3',
      // default notification image file
      image: '../../market/notification.png'
    };
    this.setOptions(options);

    this._watchQueue();
  } // merge new options


  _createClass(Notify, [{
    key: "setOptions",
    value: function setOptions(options) {
      Object.assign(this._options, options);
    } // add a notification message to the queue

  }, {
    key: "add",
    value: function add(title, body, icon, link) {
      if (!title || !body) return;
      var id = _utils__WEBPACK_IMPORTED_MODULE_0___default().randString(20);
      var time = Date.now();
      icon = String(icon || this._options.image);
      this._queue = this._queue.filter(function (n) {
        return n.title !== title;
      });

      this._queue.push({
        id: id,
        time: time,
        title: title,
        body: body,
        icon: icon,
        link: link
      });
    } // flush the queue

  }, {
    key: "flush",
    value: function flush() {
      this._queue = [];
    } // check if notification is supported

  }, {
    key: "hasSupport",
    value: function hasSupport() {
      return window && 'Notification' in window;
    } // check if Notification is possible

  }, {
    key: "canNotify",
    value: function canNotify() {
      if (!this.hasSupport()) return false;
      if (Notification.permission !== 'granted') return false;
      return true;
    } // ask for browser notifications permission

  }, {
    key: "permission",
    value: function permission(callback) {
      if (!this.hasSupport()) return;
      Notification.requestPermission().then(function (response) {
        if (typeof callback === 'function') callback(response);
      });
    } // play notification sound if enabled

  }, {
    key: "playSound",
    value: function playSound() {
      if (this._options.sound) {
        _utils__WEBPACK_IMPORTED_MODULE_0___default().playAudio(this._options.audio, this._options.volume);
      }
    } // limit visible notifications to a fixed number

  }, {
    key: "_cleanupNotifications",
    value: function _cleanupNotifications() {
      var limit = 3;
      if (this._notices.length <= limit) return;

      for (var i = 0; i < this._notices.length - limit; ++i) {
        this._notices[i].close(); // trigger close event

      }
    } // create notifications from the queue on a timer

  }, {
    key: "_watchQueue",
    value: function _watchQueue() {
      var _this = this;

      this._cleanupNotifications();

      setTimeout(this._watchQueue.bind(this), 500);
      if (!this._options.enabled || !this._queue.length) return;
      if (!this.canNotify()) return; // create new notification

      var _this$_queue$shift = this._queue.shift(),
          id = _this$_queue$shift.id,
          time = _this$_queue$shift.time,
          title = _this$_queue$shift.title,
          body = _this$_queue$shift.body,
          icon = _this$_queue$shift.icon,
          link = _this$_queue$shift.link;

      var a = new Notification(title, {
        body: body,
        icon: icon,
        tag: id
      }); // auto-close on optional duration

      var ttl = parseInt(this._options.duration);
      if (ttl) setTimeout(function () {
        return a.close();
      }, 1000 * ttl); // keep track of visible notifications

      a.addEventListener('show', function (e) {
        if (!e || !e.target || !e.target.tag) return;

        _this.playSound();
      }); // remove notification from local array when it closes

      a.addEventListener('close', function (e) {
        if (!e || !e.target || !e.target.tag) return;
        _this._notices = _this._notices.filter(function (a) {
          return a.tag !== e.target.tag;
        });
      }); // convert url string to clickable link

      if (link && typeof link === 'string') {
        a.addEventListener('click', function (e) {
          e.preventDefault();
          window.open(link, '_blank');
        });
      } // custom click handler


      if (link && typeof link === 'function') {
        a.addEventListener('click', link);
      } // add to tracker


      this._notices.push(a);
    }
  }]);

  return Notify;
}();



/***/ }),

/***/ "./src/market/modules/options.js":
/*!***************************************!*\
  !*** ./src/market/modules/options.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Options)
/* harmony export */ });
/* harmony import */ var _bus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bus */ "./src/market/modules/bus.js");
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./store */ "./src/market/modules/store.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ "./src/market/modules/utils.js");
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_utils__WEBPACK_IMPORTED_MODULE_2__);
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/**
 * App Options helper class
 */




var Options = /*#__PURE__*/function (_Bus) {
  _inherits(Options, _Bus);

  var _super = _createSuper(Options);

  /**
   * Constructor
   */
  function Options(options) {
    var _this;

    _classCallCheck(this, Options);

    _this = _super.call(this);
    _this._key = 'app_options_data';
    _this._options = {};

    _this.setOptions(options);

    return _this;
  }
  /**
   * Loads and sets saved data from store
   */


  _createClass(Options, [{
    key: "loadOptions",
    value: function loadOptions() {
      var options = _store__WEBPACK_IMPORTED_MODULE_1__["default"].getData(this._key);
      this.setOptions(options);
    }
    /**
     * Set new options data and save to store
     * @param {object}  options  Options object
     */

  }, {
    key: "saveOptions",
    value: function saveOptions(options) {
      this.setOptions(options);
      _store__WEBPACK_IMPORTED_MODULE_1__["default"].setData(this._key, this._options);
    }
    /**
     * Set new options data and emit changes
     * @param {object}  options  Options object
     */

  }, {
    key: "setOptions",
    value: function setOptions(options) {
      this._options = _utils__WEBPACK_IMPORTED_MODULE_2___default().deepMerge({}, this._options, options);
      this.emit('update', this._options);
    }
    /**
     * Get options by name, or all
     * @param {string}  key  Options object key
     * @param {*}       def  Optional default value
     */

  }, {
    key: "getOptions",
    value: function getOptions(key, def) {
      if (key && typeof key === 'string') {
        if (this._options.hasOwnProperty(key)) return this._options[key];
        return def;
      }

      return this._options;
    }
  }]);

  return Options;
}(_bus__WEBPACK_IMPORTED_MODULE_0__["default"]);



/***/ }),

/***/ "./src/market/modules/router.js":
/*!**************************************!*\
  !*** ./src/market/modules/router.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Router)
/* harmony export */ });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

/**
 * Basic URL hash router
 */
var Router = /*#__PURE__*/function () {
  // constructor
  function Router() {
    _classCallCheck(this, Router);

    this._routes = {};

    this._init();
  } // get routes data


  _createClass(Router, [{
    key: "getRoutes",
    value: function getRoutes() {
      return this._routes;
    } // set a url hash route

  }, {
    key: "setRoute",
    value: function setRoute(route) {
      route = this._path(route);
      window.location.hash = route;
    } // add custom route and callback to list

  }, {
    key: "on",
    value: function on(route, callback) {
      route = this._path(route);
      if (!route || typeof callback !== 'function') return;
      this._routes[route] = callback;
    } // delete route handler

  }, {
    key: "off",
    value: function off(route) {
      route = this._path(route);

      if (this._routes.hasOwnProperty(route)) {
        delete this._routes[route];
      }
    } // trigger saved handler for a path

  }, {
    key: "trigger",
    value: function trigger(path) {
      var _this = this;

      path = this._path(path);
      if (!path) return;
      Object.keys(this._routes).forEach(function (route) {
        var cb = _this._routes[route]; // path matches route, call handler as is

        if (path === route) return cb(); // use regexp to test route

        var reg = new RegExp('^' + route + '$');
        var matches = reg.exec(path); // found something, pass regexp matches as arguments to handler

        if (matches) {
          matches = Array.from(matches);
          matches.shift();
          cb.apply(cb, matches);
        }
      });
    } // clean path

  }, {
    key: "_path",
    value: function _path(path) {
      return '/' + String(path || '').replace(/^[\#\/]+|[\/]+$/g, '').trim();
    } // start watching for hash changes

  }, {
    key: "_init",
    value: function _init() {
      var _this2 = this;

      var _w = window;

      _w.addEventListener('hashchange', function (e) {
        _this2.trigger(_w.location.hash);
      });

      _w.addEventListener('load', function (e) {
        _this2.trigger(_w.location.hash);
      });
    }
  }]);

  return Router;
}();



/***/ }),

/***/ "./src/market/modules/scroller.js":
/*!****************************************!*\
  !*** ./src/market/modules/scroller.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Scroller)
/* harmony export */ });
/* harmony import */ var _bus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bus */ "./src/market/modules/bus.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/**
 * Scroller Class.
 * For calling custom function based on scroll position, or to auto-scroll.
 */


var Scroller = /*#__PURE__*/function (_Bus) {
  _inherits(Scroller, _Bus);

  var _super = _createSuper(Scroller);

  /**
   * Constructor
   */
  function Scroller(target) {
    var _this;

    _classCallCheck(this, Scroller);

    _this = _super.call(this);
    _this._tdef = document.scrollingElement || document.documentElement || window;
    _this._target = target instanceof Element ? target : _this._tdef;
    _this._scrolling = false;
    _this._pos = 0;
    _this._to = 0;
    _this._min = 0;
    _this._max = 0;
    _this._ease = 10;
    _this._triggers = [];
    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));

    _this.addTrigger('up');

    _this.addTrigger('down');

    window.addEventListener('scroll', _this._onScroll);
    window.addEventListener('resize', _this._onScroll);
    return _this;
  }
  /**
   * Add custom scroll trigger
   * @param {string}    name   Trigger name
   * @param {number}    pos    Trigger scroll position
   * @param {function}  cb     Optional callback handler
   * @param {object}    data
   */


  _createClass(Scroller, [{
    key: "addTrigger",
    value: function addTrigger(name, pos, cb, data) {
      var trigger = String(name || '').trim().toLowerCase();
      var position = parseFloat(pos) || 0;
      var callback = typeof cb === 'function' ? cb : function () {};
      var called = false;
      if (!trigger) return;

      this._triggers.push(Object.assign({
        trigger: trigger,
        position: position,
        called: called
      }, data));

      this.on(trigger, callback);
    }
    /**
     * Reset triggers called state to false
     */

  }, {
    key: "resetTriggers",
    value: function resetTriggers() {
      this._triggers.forEach(function (t) {
        called = false;
      });
    }
    /**
     * When elements enter and leave the viewport area
     * @param {*}         targets   CSS selector, or array list of target elements
     * @param {function}  callback  Callback function
     */

  }, {
    key: "onVisible",
    value: function onVisible(targets, callback) {
      var elms = this._getElmList(targets);

      var emap = new Array(elms.length).fill(false);
      this.addTrigger('reveal', 0, callback, {
        elms: elms,
        emap: emap
      });
    }
    /**
     * Auto scroll page to a target destination
     * @param {*}  dest      String selector, number or element
     * @param {*}  callback  Callback function
     */

  }, {
    key: "jumpTo",
    value: function jumpTo(dest, callback) {
      var scrollHeight = Math.max(0, Math.floor(this._target.scrollHeight || 0));
      var clientHeight = Math.max(0, Math.floor(this._target.clientHeight || 0));
      this._max = Math.floor(scrollHeight - clientHeight);
      this._pos = this._target.scrollTop || 0;
      this._to = this._pos;

      if (typeof dest === 'number') {
        this._to = dest;
      } else if (_typeof(dest) === 'object' && dest instanceof Element) {
        this._to = this._pos + dest.getBoundingClientRect().top || this._pos;
      } else if (typeof dest === 'string') {
        if (/^(up|top)$/i.test(dest)) {
          this._to = this._min;
        } else if (/^(middle|center)$/i.test(dest)) {
          this._to = this._max / 2;
        } else if (/^(down|bottom)$/i.test(dest)) {
          this._to = this._max;
        } else if (/^([0-9]+)$/.test(dest)) {
          this._to = parseInt(dest);
        } else {
          var node = document.querySelector(dest);
          this._to = node ? this._pos + node.getBoundingClientRect().top : this._pos;
        }
      }

      this._to = Math.max(this._min, Math.min(this._to, this._max));

      this._jumpLoop(callback);
    }
    /**
     * Autoscroll animation loop
     */

  }, {
    key: "_jumpLoop",
    value: function _jumpLoop(cb) {
      var _this2 = this;

      if (Math.abs(this._to - this._pos) < 1) {
        this._scrolling = false;
        this._target.scrollTop = this._to;

        this._onScrollTick();

        if (typeof cb === 'function') cb(this._to);
        return;
      }

      this._scrolling = true;
      this._pos += (this._to - this._pos) / this._ease;
      this._target.scrollTop = this._pos;
      window.requestAnimationFrame(function () {
        _this2._jumpLoop(cb);
      });
    } // check scroll behavior

  }, {
    key: "_onScrollTick",
    value: function _onScrollTick() {
      var sp = this._target.scrollTop | 0;
      this.emit('scroll', sp);

      for (var i = 0; i < this._triggers.length; ++i) {
        var t = this._triggers[i];

        if (t.trigger === 'up') {
          var check = sp < this._pos;
          if (!t.called && check) this.emit(t.trigger, sp);
          t.called = check;
        }

        if (t.trigger === 'down') {
          var _check = sp > this._pos;

          if (!t.called && _check) this.emit(t.trigger, sp);
          t.called = _check;
        }

        if (t.trigger === 'more') {
          var _check2 = sp > t.position;

          if (!t.called && _check2) this.emit(t.trigger, sp);
          t.called = _check2;
        }

        if (t.trigger === 'less') {
          var _check3 = sp < t.position;

          if (!t.called && _check3) this.emit(t.trigger, sp);
          t.called = _check3;
        }

        if (t.trigger === 'reveal' && t.elms) {
          for (var _i = 0; _i < t.elms.length; ++_i) {
            var e = t.elms[_i];
            var c = t.emap[_i];

            var v = this._checkVisible(e);

            if (!c && v) this.emit('show', e, sp); // entering

            if (c && !v) this.emit('hide', e, sp); // leaving

            t.emap[_i] = v;
          }
        }
      }

      this._pos = sp;
    }
    /**
     * Checks if an element is visible within the height of the scroll window
     * @param {element} elm  Element object
     */

  }, {
    key: "_checkVisible",
    value: function _checkVisible(elm) {
      var height = this._target.clientHeight | 0;
      var box = elm.getBoundingClientRect();
      var yPos = box.top + box.height / 2; // elm middle

      return yPos >= 0 && yPos <= height;
    }
    /**
     * Handler for native scroll event
     * @param {object}  e  Event object
     */

  }, {
    key: "_onScroll",
    value: function _onScroll(e) {
      var _this3 = this;

      if (this._scrolling) return;
      this._scrolling = true;
      window.requestAnimationFrame(function () {
        _this3._onScrollTick();

        _this3._scrolling = false;
      });
    }
    /**
     * Resolve list of elements from an arg
     * @param {*}  elms  String selector, nodelist or array
     */

  }, {
    key: "_getElmList",
    value: function _getElmList(elms) {
      if (typeof elms === 'string') return document.querySelectorAll(elms);
      if (Array.isArray(elms) || elms instanceof NodeList) return elms;
      if (elms instanceof Element) return [elms];
      return [];
    }
  }]);

  return Scroller;
}(_bus__WEBPACK_IMPORTED_MODULE_0__["default"]);



/***/ }),

/***/ "./src/market/modules/sentiment.js":
/*!*****************************************!*\
  !*** ./src/market/modules/sentiment.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

/**
 * Basic sentiment analysis module
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  // score list data
  _afinn: {},
  // words that negate the score of a following word
  _negators: ["cant", "can't", "dont", "don't", "doesnt", "doesn't", "not", "non", "wont", "won't", "isnt", "isn't", "wouldnt", "wouldn't", "couldnt", "couldn't", "didnt", "didn't", "wasnt", "wasn't", "havent", "haven't", "ain't", "aint", "werent", "weren't"],
  // build afinn wordlist
  merge: function merge(list) {
    this._afinn = Object.assign(this._afinn, list);
  },
  // analyse sentiment for text
  analyze: function analyze(text) {
    var score = 0;
    var negative = 0;
    var positive = 0;
    var comparative = 0;

    var list = this._splitWords(text);

    var total = list.length;
    var i = total; // loop filtered input words

    while (i--) {
      if (!this._afinn.hasOwnProperty(list[i])) continue; // not found

      var w = list[i]; // current word

      var p = i > 0 ? list[i - 1] : ''; // previous word

      var s = parseFloat(this._afinn[w]) | 0; // word score

      if (!p || !s) continue; // no score

      if (this._negators.indexOf(p) >= 0) s *= -1; // flip score

      if (s > 0) positive += s;
      if (s < 0) negative += s;
      score += s;
    } // sentiment string params


    var params = ['', 'Neutral', 'icon-help iconLeft text-info']; // positive

    if (score === 1) params = ['+', 'Ok', 'icon-help iconLeft text-success'];
    if (score > 1) params = ['+', 'Positive', 'icon-like iconLeft text-success'];
    if (score > 10) params = ['+', 'Positive', 'icon-like iconLeft text-gain']; // negative

    if (score === -1) params = ['-', 'Ok', 'icon-help iconLeft text-danger'];
    if (score < -1) params = ['-', 'Negative', 'icon-dislike iconLeft text-danger'];
    if (score < -10) params = ['-', 'Negative', 'icon-dislike iconLeft text-loss']; // build sentiment info

    var _params = params,
        _params2 = _slicedToArray(_params, 3),
        sign = _params2[0],
        word = _params2[1],
        styles = _params2[2];

    var sentiment = [word, sign + Math.abs(score)].join(' '); // build final data

    comparative = total ? score / total : 0;
    return {
      score: score,
      positive: positive,
      negative: negative,
      comparative: comparative,
      sign: sign,
      word: word,
      styles: styles,
      sentiment: sentiment
    };
  },
  // filter input text into word list
  _splitWords: function _splitWords(input) {
    var div = document.createElement('div');
    div.innerHTML = String(input || ''); // strip html

    var output = String(div.textContent || div.innerText || '').toLowerCase().trim(); // clean string

    output = output.replace(/([\`\'\’]+)/g, "'") // normalize apostrophes
    .replace(/([\“\”\“\”\"]+)/g, '"') // normalize quotes
    .replace(/([\-]+)/g, '-') // normalize dashes
    .replace(/([^a-z\'\-]+)/g, ' ') // only allow these
    .replace(/[\t\r\n\s\uFEFF\xA0]+/g, ' ') // remove whitespace
    .trim(); // split

    return output.split(/\s+/g);
  }
});

/***/ }),

/***/ "./src/market/modules/sorter.js":
/*!**************************************!*\
  !*** ./src/market/modules/sorter.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Sorter)
/* harmony export */ });
/* harmony import */ var _bus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bus */ "./src/market/modules/bus.js");
/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./store */ "./src/market/modules/store.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

/**
 * Helper module for sorting lists
 */



var Sorter = /*#__PURE__*/function (_Bus) {
  _inherits(Sorter, _Bus);

  var _super = _createSuper(Sorter);

  /**
   * Constructor
   */
  function Sorter(target) {
    var _this;

    _classCallCheck(this, Sorter);

    _this = _super.call(this);
    _this._key = 'list_sort_data';
    _this._lists = {};
    return _this;
  }
  /**
   * Save sort data to store
   */


  _createClass(Sorter, [{
    key: "saveData",
    value: function saveData() {
      _store__WEBPACK_IMPORTED_MODULE_1__["default"].setData(this._key, this._lists);
      this.emit('save', this._lists);
    }
    /**
     * Load sort data from store
     */

  }, {
    key: "loadData",
    value: function loadData() {
      var data = _store__WEBPACK_IMPORTED_MODULE_1__["default"].getData(this._key);
      this._lists = data || this._lists;
      this.emit('load', this._lists);
    }
    /**
     *  Get all sort data
     */

  }, {
    key: "getData",
    value: function getData() {
      return this._lists;
    }
    /**
     * Set sort data for a key
     */

  }, {
    key: "setKey",
    value: function setKey(key, column, order, search) {
      column = String(column || 'id');
      order = String(order || 'asc');
      search = String(search || '');
      this._lists[key] = {
        column: column,
        order: order,
        search: search
      };
      return this._lists[key];
    }
    /**
     * Get sort data for a key
     */

  }, {
    key: "getKey",
    value: function getKey(key) {
      return this._lists[key] || null;
    }
    /**
     * Set new sort order for a key
     */

  }, {
    key: "sortOrder",
    value: function sortOrder(key, column, order) {
      var d = this._lists[key] || null;

      if (d) {
        if (column !== d.column) {
          d.order = order || 'asc';
        } else {
          d.order = d.order === 'asc' ? 'desc' : 'asc';
        }

        d.column = column;
      }

      this.emit('change', this._lists);
      this.saveData();
      return d;
    }
    /**
     * Apply search text for a key
     */

  }, {
    key: "setSearch",
    value: function setSearch(key, text) {
      var d = this._lists[key] || null;
      if (d) d.search = String(text || '').trim();
      this.emit('change', this._lists);
      return d;
    }
    /**
     * Check if sort column is active for a key
     */

  }, {
    key: "checkActive",
    value: function checkActive(key, column) {
      var d = this._lists[key] || null;
      if (d) return d.column === column;
      return false;
    }
    /**
     * Get css icon style for a key
     */

  }, {
    key: "getStyles",
    value: function getStyles(key, column) {
      var d = this._lists[key] || null;
      var c = column || d.column;
      if (d && c === d.column && d.order === 'asc') return 'icon-up';
      if (d && c === d.column && d.order === 'desc') return 'icon-down';
      return 'hidden';
    }
  }]);

  return Sorter;
}(_bus__WEBPACK_IMPORTED_MODULE_0__["default"]);



/***/ }),

/***/ "./src/market/modules/store.js":
/*!*************************************!*\
  !*** ./src/market/modules/store.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Web cache handler
 */
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  // local props
  _api: 'localStorage',
  _prefix: 'webcache_',
  _ttl: 0,
  // save data to cache
  setData: function setData(key, data, time) {
    return this._save(key, data, time);
  },
  // get saved data for a key as is
  getData: function getData(key) {
    this._clean();

    return this._fetch(key);
  },
  // delete saved data for key
  deleteData: function deleteData(key) {
    return this._delete(key);
  },
  // santizer for keys
  _key: function _key(key) {
    return this._prefix + String(key || '').replace(/[^\w]+/g, '_');
  },
  // error handler
  _error: function _error(e) {
    var _code = e.code | 0;

    var _name = e.name || 'UnknownError';

    var _info = e.message || 'Problem with ' + this._api + ' browser API.';

    console.error('StorageError (' + _code + '):', _info, '(' + _name + ').');
    return false;
  },
  // try saving the data and handle any errors
  _save: function _save(key, data, ttl) {
    try {
      var _store = window[this._api];

      var _key = this._key(key);

      var _time = Date.now();

      var _ttl = parseInt(ttl) || this._ttl;

      var _string = JSON.stringify({
        _time: _time,
        _ttl: _ttl,
        data: data
      });

      _store.setItem(_key, _string);

      return true;
    } catch (e) {
      return this._error(e);
    }
  },
  // try fetching data for key
  _fetch: function _fetch(key) {
    try {
      var _store = window[this._api];

      var _key = this._key(key);

      var _parsed = JSON.parse(_store.getItem(_key) || '{}');

      return _parsed && _parsed.data ? _parsed.data : null;
    } catch (e) {
      return this._error(e);
    }
  },
  // try deleting data by key
  _delete: function _delete(key) {
    try {
      var _store = window[this._api];

      var _key = this._key(key);

      _store.removeItem(_key);

      return true;
    } catch (e) {
      return this._error(e);
    }
  },
  // clean all expired items from storage
  _clean: function _clean() {
    try {
      var _store = window[this._api];

      var _time = Date.now(); // loop keys


      for (var i = 0; i < _store.length; i++) {
        // make sure it's a key managed by this object
        var _key = _store.key(i);

        if (_key.indexOf(this._prefix) < 0) continue; // get data for key

        var _data = JSON.parse(_store.getItem(_key) || '{}');

        if (!_data._time || !_data._ttl) continue; // need these
        // check if enough time has passed and delete key

        var _secs = (_time - _data._time) / 1000;

        if (_secs < _data._ttl) continue; // still fresh

        _store.removeItem(_key);
      }

      return true;
    } catch (e) {
      return this._error(e);
    }
  }
});

/***/ }),

/***/ "./src/market/modules/symbol.js":
/*!**************************************!*\
  !*** ./src/market/modules/symbol.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _Symbol)
/* harmony export */ });
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

/**
 * Ticker symbol class
 */
var _Symbol = /*#__PURE__*/function () {
  // constructor
  function _Symbol() {
    var symbol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';

    _classCallCheck(this, _Symbol);

    this.symbol = String(symbol || '').toUpperCase();
    this.id = ''; // custom unique token id

    this.token = ''; // base asset token

    this.market = ''; // quote asset token (market)

    this.name = ''; // name of token

    this.pair = ''; // token/market

    this.route = '/symbol/' + this.symbol;
    this.image = '../../assets/images/cryptoCurrency/default_.png';
    this.imageLoaded = false;
    this.open = 0;
    this.high = 0;
    this.low = 0;
    this.close = 0;
    this.change = 0;
    this.percent = 0;
    this.trades = 0;
    this.tokenVolume = 0;
    this.marketVolume = 0;
    this.volatility = 0;
    this.danger = 0;
    this.time = 0;
    this.rank = 0;
    this.supply = 0;
    this.capusd = 0;
    this.history = [];
    this.candles = [];
    this.sign = '';
    this.arrow = '';
    this.style = '';
  }
  /**
   * Split full symbol (BTCUSD) into token and asset symbols (BTC, USD)
   */


  _createClass(_Symbol, [{
    key: "splitSymbol",
    value: function splitSymbol() {
      var markets = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      if (this.token || this.market || !markets.length) return;
      var quotes = markets.join('|');
      var regexp = new RegExp("^([A-Z0-9]+)(".concat(quotes, ")$"));
      this.token = this.symbol.replace(regexp, '$1') || this.token;
      this.market = this.symbol.replace(regexp, '$2') || this.market;
      this.name = this.token;
      this.pair = this.token + '/' + this.market;
    }
    /**
     * Set coin data fetched from coincap API
     * https://docs.coincap.io/
     */

  }, {
    key: "setCoinData",
    value: function setCoinData(data) {
      if (_typeof(data) !== 'object') return;
      this.id = String(data.id || this.id).trim();
      this.name = String(data.name || this.token).trim();
      this.rank = Number(data.rank || 0);
      this.supply = Number(data.supply || 0);
      this.capusd = Number(data.marketCapUsd || 0);
    }
    /**
     * Set latest ticker values from binance socket API
     * https://binance-docs.github.io/apidocs/spot/en/#individual-symbol-mini-ticker-stream
     */

  }, {
    key: "setTickerData",
    value: function setTickerData(data) {
      this.open = Number(data.o || data.openPrice || 0);
      this.high = Number(data.h || data.highPrice || 0);
      this.low = Number(data.l || data.lowPrice || 0);
      this.close = Number(data.c || data.lastPrice || 0);
      this.change = Number(data.p || data.priceChange || 0);
      this.percent = Number(data.P || data.priceChangePercent || 0);
      this.trades = Number(data.n || data.count || 0);
      this.tokenVolume = Number(data.v || data.volume || 0);
      this.marketVolume = Number(data.q || data.quoteVolume || 0);
      this.sign = this.percent > 0 ? '+' : '';
      this.arrow = this.percent > 0 ? '▲' : '▼';
      this.calcVolatility();
      this.calcDanger();
      this.calcHistory();
      this.calcStyle();
    }
    /**
     * Resolve token icon image
     */

  }, {
    key: "resolveImage",
    value: function resolveImage() {
      //if ( !this.token || this.imageLoaded ) return;
      //let img = new Image();
      //img.addEventListener( 'load',  e => { this.imageLoaded = true; this.image = img.src; } );
      //img.addEventListener( 'error', e => { this.imageLoaded = true; } );
      //img.src = '../../assets/images/cryptoCurrency/'+ String( this.token ).toLowerCase() +'_.png';
      this.imageLoaded = !0, this.image = "../../assets/images/cryptoCurrency/" + String(this.token).toLowerCase() + ".png";
    }
    /**
     * Get symbol data with merged data
     * @param {object}  merge  Optional object
     */

  }, {
    key: "getData",
    value: function getData(merge) {
      var volume = this.marketVolume;
      var id = this.id,
          symbol = this.symbol,
          token = this.token,
          market = this.market,
          name = this.name,
          pair = this.pair,
          route = this.route,
          image = this.image,
          close = this.close,
          capusd = this.capusd,
          supply = this.supply;
      return Object.assign({
        id: id,
        symbol: symbol,
        token: token,
        market: market,
        name: name,
        pair: pair,
        route: route,
        image: image,
        close: close,
        capusd: capusd,
        supply: supply,
        volume: volume
      }, merge);
    }
    /**
     * Cleanup stored price data
     */

  }, {
    key: "flushData",
    value: function flushData() {
      this.history = [];
      this.candles = [];
    }
    /**
     * Calculate style class based on percent
     */

  }, {
    key: "calcStyle",
    value: function calcStyle() {
      this.style = '';
      if (this.percent > 0) this.style = 'gain';
      if (this.percent < 0) this.style = 'loss';
    }
    /**
     * Calculate 24h high/low volatility score
     */

  }, {
    key: "calcVolatility",
    value: function calcVolatility() {
      var change = this.high - this.low;
      this.volatility = this.high ? change / this.high * 100.0 : 0.0;
    }
    /**
     * Calculate possible pump/dump danger score based on cached price action from recent few hours
     */

  }, {
    key: "calcDanger",
    value: function calcDanger() {
      var now = Date.now();
      var wait = 300; // secs to wait

      var hrs = 3; // hours to store prices

      var secs = (now - this.time) / 1000;
      var total = 60 * 60 * hrs / wait;
      if (secs < wait) return;
      this.candles.push(this.close);
      this.candles.splice(0, this.candles.length - total);
      var idx = this.candles.length;
      var min = this.candles[0];
      var max = this.candles[0];

      while (idx--) {
        var price = this.candles[idx];
        min = price < min ? price : min;
        max = price > max ? price : max;
      }

      var change = max - min;
      this.danger = max ? change / max * 100.0 : 0.0;
      this.time = now;
    }
    /**
     * Manages a history list with the latest close price
     */

  }, {
    key: "calcHistory",
    value: function calcHistory() {
      if (!this.history.length) this.fakeHistory();
      this.history.push(this.close);
      this.history.splice(0, this.history.length - 30);
    }
    /**
     * Come up with some fake history prices to fill in the initial line chart
     */

  }, {
    key: "fakeHistory",
    value: function fakeHistory() {
      var num = this.close * 0.0002;
      var min = -Math.abs(num);
      var max = Math.abs(num);
      this.history = [];

      for (var i = 0; i < 30; ++i) {
        var rand = Math.random() * (max - min) + min;
        this.history.push(this.close + rand);
      }
    }
  }]);

  return _Symbol;
}();



/***/ }),

/***/ "./src/market/modules/tooltip.js":
/*!***************************************!*\
  !*** ./src/market/modules/tooltip.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Tooltip)
/* harmony export */ });
/* harmony import */ var _viewport__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./viewport */ "./src/market/modules/viewport.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

/**
 * Tooltips Class.
 * Adds custom tooltips to elements on the page.
 */


var Tooltip = /*#__PURE__*/function () {
  // class constructor
  function Tooltip(options) {
    _classCallCheck(this, Tooltip);

    this._options = Object.assign({
      // class to apply to tooltip element
      tipClass: 'tooltip-wrap',
      // class to apply when tooltip is placed on the left
      leftClass: 'tooltip-left',
      // class to apply when tooltip is placed on the right
      rightClass: 'tooltip-right',
      // class to apply when tooltip is placed on the top
      topClass: 'tooltip-top',
      // class to apply when tooltip is placed on the bottom
      bottomClass: 'tooltip-bottom',
      // delay to show the tooltip
      showDelay: 100,
      // auto hide delay
      hideDelay: 3000 // ...

    }, options);
    this._tooltip = null;
    this._hovItem = null;
    this._timeout = null;
    this._autohide = null;
    this._visible = false;
    this._elements = [];
    this._onScroll = this._onScroll.bind(this);

    this._init();
  } // set target elements


  _createClass(Tooltip, [{
    key: "select",
    value: function select(selector) {
      if (typeof selector === 'string') {
        this._elements = document.querySelectorAll(selector) || [];
      } else if (_typeof(selector) === 'object' && selector instanceof Element) {
        this._elements.push(selector);
      }

      for (var i = 0; i < this._elements.length; ++i) {
        this._setupItem(this._elements[i]);
      }

      this._hideTooltip();
    } // remove element from the list

  }, {
    key: "unselect",
    value: function unselect(element) {
      if (_typeof(element) === 'object' && element instanceof Element) {
        for (var i = 0, t = this._elements.length; i < t; ++i) {
          if (this._elements[i] === element) {
            this._resetItem(this._elements[i]);

            this._elements.splice(i, 1);

            break;
          }
        }

        this._hideTooltip();
      }
    } // cleanup this instance

  }, {
    key: "destroy",
    value: function destroy() {
      for (var i = 0; i < this._elements.length; ++i) {
        this._resetItem(this._elements[i]);
      }

      if (document.body.contains(this._tooltip)) {
        document.body.removeChild(this._tooltip);
      }

      window.removeEventListener('scroll', this._onScroll);
      window.removeEventListener('touchmove', this._onScroll);
      this._elements = [];
      this._tooltip = null;
    } // initlaize elements

  }, {
    key: "_init",
    value: function _init() {
      this._tooltip = document.createElement('div');
      this._tooltip.className = this._options.tipClass;
      this._tooltip.style['display'] = 'block';
      this._tooltip.style['position'] = 'absolute';
      this._tooltip.style['pointer-events'] = 'none';

      this._hideTooltip();

      document.body.appendChild(this._tooltip);
      window.addEventListener('scroll', this._onScroll);
      window.addEventListener('touchmove', this._onScroll);
    } // set an element to have tooltip, if not alredy setup

  }, {
    key: "_setupItem",
    value: function _setupItem(item) {
      var _this = this;

      if (item && item instanceof Element) {
        if (item.hasAttribute('title')) {
          var _passive = {
            passive: true
          };
          item.setAttribute('data-tip', item.getAttribute('title') || '');
          item.removeAttribute('title');
          item.addEventListener('mouseenter', function (e) {
            _this._onEnter(e);
          }, _passive);
          item.addEventListener('touchstart', function (e) {
            _this._onEnter(e);
          }, _passive);
          item.addEventListener('mouseleave', function (e) {
            _this._onLeave(e);
          }, _passive);
          item.addEventListener('touchend', function (e) {
            _this._onLeave(e);
          }, _passive);
        }
      }
    } // remove tooltip events from element, if needed

  }, {
    key: "_resetItem",
    value: function _resetItem(item) {
      var _this2 = this;

      if (item && item instanceof Element) {
        if (item.hasAttribute('data-tip')) {
          item.setAttribute('title', item.getAttribute('data-tip') || '');
          item.removeAttribute('data-tip');
          item.removeEventListener('mouseenter', function (e) {
            _this2._onEnter(e);
          });
          item.removeEventListener('touchstart', function (e) {
            _this2._onEnter(e);
          });
          item.removeEventListener('mouseleave', function (e) {
            _this2._onLeave(e);
          });
          item.removeEventListener('touchend', function (e) {
            _this2._onLeave(e);
          });
        }
      }
    } // decides where to place the tooltip in relation to item and screen bounds

  }, {
    key: "_showTooltip",
    value: function _showTooltip() {
      if (this._tooltip && this._hovItem) {
        var box = this._hovItem.getBoundingClientRect();

        var centerX = box.left + (this._hovItem.offsetWidth - this._tooltip.offsetWidth) / 2;
        var centerY = box.top + (this._hovItem.offsetHeight - this._tooltip.offsetHeight) / 2;
        var leftPos = box.left - this._tooltip.offsetWidth;
        var rightPos = box.left + this._hovItem.offsetWidth;
        var topPos = box.top - this._tooltip.offsetHeight;
        var bottomPos = box.top + this._hovItem.offsetHeight;
        var tipHalf = this._tooltip.offsetWidth / 2;
        var boxCenter = box.top - this._hovItem.offsetHeight / 2;
        var halfScreen = window.innerHeight / 2;
        var isNearLeft = box.left < tipHalf;
        var isNearRight = _viewport__WEBPACK_IMPORTED_MODULE_0__["default"].clientWidth() - rightPos < tipHalf;
        var clss = this._options.topClass;
        var left = centerX;
        var top = topPos; // move to the bottom

        if (boxCenter < halfScreen) {
          clss = this._options.bottomClass;
          left = centerX;
          top = bottomPos;
        } // move to the right


        if (isNearLeft && !isNearRight) {
          clss = this._options.rightClass;
          left = rightPos;
          top = centerY;
        } // move to the left


        if (isNearRight && !isNearLeft) {
          clss = this._options.leftClass;
          left = leftPos;
          top = centerY;
        } // show tooltip


        if (left > 1 && top > 1 && this._tooltip.innerHTML) {
          this._tooltip.className = this._options.tipClass + ' ' + clss;
          this._tooltip.style['left'] = _viewport__WEBPACK_IMPORTED_MODULE_0__["default"].scrollLeft() + left + 'px';
          this._tooltip.style['top'] = _viewport__WEBPACK_IMPORTED_MODULE_0__["default"].scrollTop() + top + 'px';
          this._visible = true;
        }
      }
    } // move tooltip object off screen, reset content and class

  }, {
    key: "_hideTooltip",
    value: function _hideTooltip() {
      if (this._tooltip) {
        this._tooltip.innerHTML = '';
        this._tooltip.className = this._options.tipClass;
        this._tooltip.style['left'] = '-1000px';
        this._tooltip.style['top'] = '-1000px';
        this._visible = false;
      }
    } // when mouse enters target element

  }, {
    key: "_onEnter",
    value: function _onEnter(e) {
      var item = e.target;
      var title = item.getAttribute('data-tip');

      if (title) {
        this._hovItem = item;
        this._tooltip.innerHTML = title;
        if (this._timeout) clearTimeout(this._timeout);
        this._timeout = setTimeout(this._showTooltip.bind(this), this._options.showDelay);
        if (this._autohide) clearTimeout(this._autohide);
        this._autohide = setTimeout(this._hideTooltip.bind(this), this._options.hideDelay);
      }
    } // when mouse leaves target element

  }, {
    key: "_onLeave",
    value: function _onLeave(e) {
      if (this._timeout) {
        clearTimeout(this._timeout);
        this._timeout = null;
      }

      this._hovItem = null;

      this._hideTooltip();
    } // hide tooltip over fixed elements when scrolled

  }, {
    key: "_onScroll",
    value: function _onScroll(e) {
      if (this._visible) {
        this._hideTooltip();
      }
    }
  }]);

  return Tooltip;
}();



/***/ }),

/***/ "./src/market/modules/twitter.js":
/*!***************************************!*\
  !*** ./src/market/modules/twitter.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Twitter)
/* harmony export */ });
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

/**
 * Twitter scraper and tweets manager class.
 */
var Twitter = /*#__PURE__*/function () {
  /**
   * Constructor
   * @param {string}  handle   Twitter handle
   * @param {object}  options  Fetching options
   */
  function Twitter(handle, options) {
    _classCallCheck(this, Twitter);

    if (!handle || typeof handle !== 'string') {
      throw 'Must provide a valid twitter handle string.';
    }

    this.uid = '';
    this.handle = '';
    this.name = '';
    this.avatar = '';
    this.url = '';
    this.error = '';
    this.last = 0;
    this.fetching = false;
    this._options = {
      skipPinned: true,
      // ignore pinned tweets
      skipRetweet: true,
      // ignore re-tweets
      cleanTweets: true,
      // strip html and whitespace from tweets
      fetchDelay: 300,
      // prevent re-fetching for (secs)
      limitCount: 1 // limit number of tweets parsed

    };
    this.setOptions(options);
    this.setData({
      handle: handle,
      name: handle
    });
  }
  /**
    * Update options
    * @param {object}  options  Options object
    */


  _createClass(Twitter, [{
    key: "setOptions",
    value: function setOptions(options) {
      Object.assign(this._options, options);
    }
    /**
     * Set new acocunt data
     * @param {object} data  Twitter account data
     */

  }, {
    key: "setData",
    value: function setData(data) {
      if (_typeof(data) !== 'object') return;
      if (data.uid) this.uid = String(this.uid).replace(/[^\w\-]+/g, '');
      if (data.handle) this.handle = String(data.handle).replace(/[^\w\-]+/g, '');
      if (data.name) this.name = String(data.name).replace(/[\r\n\s\t]+/g, ' ').trim();
      if (data.avatar) this.avatar = String(data.avatar).trim();
      this.url = 'https://twitter.com/' + this.handle;
    }
    /**
     * Get account info
     */

  }, {
    key: "getData",
    value: function getData() {
      var uid = this.uid,
          handle = this.handle,
          name = this.name,
          avatar = this.avatar,
          url = this.url,
          last = this.last,
          fetching = this.fetching,
          error = this.error;
      return {
        uid: uid,
        handle: handle,
        name: name,
        avatar: avatar,
        url: url,
        last: last,
        fetching: fetching,
        error: error
      };
    }
    /**
     * Fetch remote tweets using ajax module
     * @param {object}    ajax      Ajax module instance to use for request
     * @param {function}  callback  Callback function
     */

  }, {
    key: "fetchTweets",
    value: function fetchTweets(ajax, callback) {
      var _this = this;

      if (!callback || typeof callback !== 'function') return;
      if (!ajax || _typeof(ajax) !== 'object') return callback('Must provide an ajax module reference.', []);
      if (!this._canFetch()) return callback('', []); // too soon, ignore

      this.fetching = true;
      this.error = '';
      ajax.get(this.url, {
        type: 'text',
        timeout: 30,
        notAjax: true,
        done: function done(xhr, status, response) {
          _this.fetching = false;
        },
        error: function error(xhr, status, _error) {
          _this.error = _error + ' | @' + _this.handle + '.';
          return callback(_this.error, []);
        },
        success: function success(xhr, status, response) {
          var parser = new DOMParser();

          var html = _this._cleanHtml(response);

          var doc = parser.parseFromString(html, 'text/html');

          if (doc && doc instanceof HTMLDocument) {
            _this.last = Date.now();
            callback('', _this.parseTweets(doc));
          } else {
            _this.error = 'DOMParserError: Could not parse response from ' + _this.url;
            callback(_this.error, []);
          }

          parser = null;
          html = null;
          doc = null;
        }
      });
    }
    /**
     * Parse account and tweets data from a fetched HTML response
     * @param {HTMLDocument}  doc  Twitter account page document
     */

  }, {
    key: "parseTweets",
    value: function parseTweets(doc) {
      var limit = this._options.limitCount | 0;
      var count = 0;
      var output = []; // look for profile avatar

      var avatar = doc.querySelector('img.ProfileAvatar-image');
      avatar = avatar ? avatar.src : ''; // look for items

      var items = doc.querySelectorAll('.stream-item') || []; // loop tweet list items

      for (var i = 0; i < items.length; ++i) {
        if (limit && count >= limit) break; // look for tweet data

        var item = items[i];
        var tweet = item ? item.querySelector('.js-stream-tweet') : null; // metadata tag

        var posted = item ? item.querySelector('.js-short-timestamp') : null; // date tag

        var content = item ? item.querySelector('.js-tweet-text') : null; // tweet wrapper

        var text = ''; // look for account info

        var id = tweet ? tweet.getAttribute('data-tweet-id') || '' : '';
        var uid = tweet ? tweet.getAttribute('data-user-id') || '' : '';
        var name = tweet ? tweet.getAttribute('data-name') || '' : '';
        var handle = tweet ? tweet.getAttribute('data-screen-name') || '' : '';
        var link = tweet ? 'https://twitter.com' + tweet.getAttribute('data-permalink-path') || 0 : '';
        var time = posted ? Number(posted.getAttribute('data-time-ms')) || 0 : 0; // update profile details

        this.setData({
          uid: uid,
          handle: handle,
          name: name,
          avatar: avatar
        }); // resolve tweet text

        if (content) {
          text = this._options.cleanTweets ? this._cleanTweet(content.textContent) : String(content.innerHTML || '').trim();
        } // check a few things, skip if needed


        if (!id || !uid || !name || !handle || !text || !time || time < 0) continue;
        if (this._options.skipPinned && item.classList.contains('js-pinned')) continue;
        if (this._options.skipRetweet && tweet.hasAttribute('data-retweet-id')) continue; // format time

        var d = new Date(time);
        var date = d.toDateString(); // add tweet to list and update account info

        output.push({
          id: id,
          uid: uid,
          time: time,
          date: date,
          name: name,
          handle: handle,
          avatar: avatar,
          text: text,
          link: link
        });
        count++;
      }

      items = null;
      return output;
    }
    /**
     * Check last fetch time to see if it's ok to fetch again
     */

  }, {
    key: "_canFetch",
    value: function _canFetch() {
      var now = Date.now();
      var elapsed = Math.floor((now - this.last) / 1000);
      var delay = this._options.fetchDelay | 0;
      if (this.fetching || this.last >= now) return false; // busy, wait

      if (delay && elapsed < delay) return false; // too soon, wait

      return true; // looks good
    }
    /**
     * Clean tweet text
     * @param {string}  text  Strign to clean
     */

  }, {
    key: "_cleanTweet",
    value: function _cleanTweet(text) {
      return String(text || '').replace(/([^\s]+)(https?\:|pic\.)/g, '$1 $2') // add space around links
      .replace('pic.twitter', 'https://pic.twitter') // fix some links without proto
      .replace(/([\`\'\’]+)/g, "'") // normalize apostrophes
      .replace(/([\“\”\“\”\"]+)/g, '"') // normalize quotes
      .replace(/[\…\#\$]+/g, ' ') // remove some junk chars
      .replace(/[\t\r\n\s\uFEFF\xA0]+/g, ' ').trim(); // collapse whitespace
    }
    /**
     * Clean html content
     * @param {string}  html  HTML text to clean
     */

  }, {
    key: "_cleanHtml",
    value: function _cleanHtml(html) {
      return String(html || '').replace(/<(style|script)[^>]*>(?:(?!<\/(style|script)>)[^])*<\/(style|script)>/gim, '').replace(/[\r\n\s\t]+/g, ' ').trim();
    }
  }]);

  return Twitter;
}();



/***/ }),

/***/ "./src/market/modules/utils.js":
/*!*************************************!*\
  !*** ./src/market/modules/utils.js ***!
  \*************************************/
/***/ ((module) => {

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

/**
 * Common utils
 */
module.exports = {
  // convert url string into an anchor element (parser)
  parseUrl: function parseUrl(url, prop) {
    var link = document.createElement('a');
    link.href = url;
    var data = link[prop] || '';
    link = null;
    return data;
  },
  // convert URLs into clickable links
  linkUrl: function linkUrl(text) {
    return String(text || '').replace(/(https?\:\/\/[\w\-\.\?\=\&\%\/\#]+)/gi, '<a href="$1" target="_blank">$1</a>');
  },
  // convert html tags to text content
  stripHtml: function stripHtml(text, removeUrls) {
    var div = document.createElement('div');
    div.innerHTML = String(text || '');
    var output = String(div.textContent || div.innerText || '');
    if (removeUrls) output = output.replace(/(https?\:\/\/[\w\-\.\?\=\&\%\/\#]+)/gi, '');
    return output;
  },
  // convert relative path to full url
  fullUrl: function fullUrl(relpath) {
    if (/^([\w\-]+\:)?\/\/.*$/.test(relpath)) return relpath;
    var loc = window.location;
    var path = String(loc.pathname || '').replace(/\/+$/g, '');
    var rel = String(relpath || '').replace(/^\/+/g, '');
    return loc.protocol + '//' + loc.host + path + '/' + rel;
  },
  // play audio file
  playAudio: function playAudio(file, vol) {
    if (!file || typeof file !== 'string') return; // normalize volume

    vol = parseFloat(vol) || 1;
    vol = vol > 1 ? vol / 100 : vol;
    vol = vol > 1 || vol < 0 ? 1 : vol; // load and play audio

    var audio = new Audio();
    audio.src = this.fullUrl(file);
    audio.volume = vol;
    audio.crossOrigin = 'anonymous';
    audio.addEventListener('canplaythrough', function (e) {
      try {
        audio.play();
      } catch (err) {}
    });
    audio.load();
  },
  // copy text to clipboard
  copyText: function copyText(text) {
    var elm = document.createElement('input');
    document.body.appendChild(elm);
    elm.value = String(text || '').trim();
    elm.select();
    setTimeout(function () {
      return elm.remove();
    }, 1000);
    return document.execCommand('Copy');
  },
  // clamp a number between min and max
  clamp: function clamp(num, min, max) {
    return Math.min(Math.max(num, min), max);
  },
  // cut part of a string
  limit: function limit(str, length, append) {
    str = String(str);
    length = parseInt(length) || 50;
    append = String(append || '');
    return str.length > length ? str.substring(0, length) + append : str;
  },
  // alway keep a string at a certain length
  fill: function fill(str, length, _char, append) {
    str = String(str);
    length = parseInt(length) || 20;
    _char = String(_char || ' ');
    append = String(append || '');
    if (str.length > length) return str.substring(0, length - 3) + '...';
    return str + _char.repeat(length - str.length) + append;
  },
  // get noun word for a number
  noun: function noun(num, singular, plutal, append) {
    append = String(append || '');
    return String(num + ' ' + (parseFloat(num) === 1 ? singular : plutal) + ' ' + append).trim();
  },
  // format number to money
  money: function money(num, fixed) {
    num = parseFloat(num) || 0;
    fixed = parseInt(fixed) || 0;
    var o = {
      style: 'decimal',
      minimumFractionDigits: fixed,
      maximumFractionDigits: fixed
    };
    return new Intl.NumberFormat('en-US', o).format(num);
  },
  // fixed numbers
  fixed: function fixed(num, decimals) {
    if (typeof decimals === 'number') return Number(num).toFixed(decimals);
    if (/(USD|PAX|DAI)/.test(decimals)) return this.money(num, 3);
    return Number(num).toFixed(8);
  },
  // get info about how long something has been
  elapsed: function elapsed(secs, suffix, _short) {
    secs = parseInt(secs) || 0;
    if (_short && secs < 60) return 'Just now';
    var list = [];
    var data = {
      'M': Math.floor(secs / 2419200),
      'w': Math.floor(secs / 604800 % 4),
      'd': Math.floor(secs / 86400 % 7),
      'h': Math.floor(secs / 3600 % 24),
      'm': Math.floor(secs / 60 % 60)
    };
    if (!_short) data.s = Math.floor(secs % 60);
    Object.keys(data).forEach(function (k) {
      if (data[k]) list.push(data[k] + k);
    });
    if (suffix) list.push(suffix);
    return list.join(' ');
  },
  // get data about current date and time
  dateData: function dateData(time) {
    var now = Date.now();

    if (time) {
      // timestamp or datestring, keep as is
      if (typeof time === 'number' || /^[\w\-\+\:]+$/.test(time)) {
        now = time;
      } // other string, assume timezone
      else if (typeof time === 'string') {
        now = new Date().toLocaleString('en-US', {
          time: time
        });
      }
    }

    var _p = function _p(n) {
      return n < 10 ? '0' + n : '' + n;
    };

    var date = new Date(now);
    var month = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'][date.getMonth()];
    var year = date.getFullYear();

    var day = _p(date.getDate());

    var minute = _p(date.getMinutes());

    var second = _p(date.getSeconds());

    var fullh = date.getHours();
    var ampm = fullh > 12 ? 'PM' : 'AM';
    var hour = fullh > 12 ? fullh - 12 : fullh;
    hour = _p(hour === 0 ? 12 : hour);
    return {
      month: month,
      day: day,
      year: year,
      hour: hour,
      minute: minute,
      second: second,
      ampm: ampm
    };
  },
  // get readable date
  date: function date(time, full) {
    var _this$dateData = this.dateData(time),
        month = _this$dateData.month,
        day = _this$dateData.day,
        year = _this$dateData.year,
        hour = _this$dateData.hour,
        minute = _this$dateData.minute,
        second = _this$dateData.second,
        ampm = _this$dateData.ampm;

    var out = [month + '/' + day + '/' + year];
    if (full) out.push(hour + ':' + minute + ':' + second, ampm);
    return out.join(' ');
  },
  // get current time
  time: function time(_time) {
    var _this$dateData2 = this.dateData(_time),
        hour = _this$dateData2.hour,
        minute = _this$dateData2.minute,
        second = _this$dateData2.second,
        ampm = _this$dateData2.ampm;

    return hour + ':' + minute + ':' + second + ' ' + ampm;
  },
  // calculate percent change
  percent: function percent(current, last, toNum) {
    var isnum = Boolean(last > 0);
    var isup = Boolean(current >= last);
    var change = isup ? current - last : last - current;
    var percent = isnum ? change / last * 100.0 : 0.0;
    var sign = isup ? '+' : '-';
    var arrow = isup ? '▲' : '▼';
    var color = isup ? 'green' : 'red';
    if (toNum === true) return +Number(sign + percent).toFixed(3);
    return {
      change: change,
      percent: percent,
      sign: sign,
      arrow: arrow,
      color: color
    };
  },
  // calc chart points for given dimensions and values
  points: function points(width, height, values) {
    width = parseFloat(width) || 0;
    height = parseFloat(height) || 0;
    values = Array.isArray(values) ? values : [];
    values = values.map(function (n) {
      return parseFloat(n) || 0;
    });
    var min = values.reduce(function (min, val) {
      return val < min ? val : min;
    }, values[0]);
    var max = values.reduce(function (max, val) {
      return val > max ? val : max;
    }, values[0]);
    var len = values.length;
    var half = height / 2;
    var range = max > min ? max - min : height;
    var gap = len > 1 ? width / (len - 1) : 1;
    var out = [];

    for (var i = 0; i < len; ++i) {
      var d = values[i];
      var val = 2 * ((d - min) / range - 0.5);
      var x = i * gap;
      var y = -val * half * 0.8 + half;
      out.push({
        x: x,
        y: y
      });
    }

    return out;
  },
  // compute placement for an absolute box on the screen
  boxPosition: function boxPosition(triggerElm) {
    var top = true,
        right = false,
        bottom = false,
        left = true;

    if (triggerElm instanceof HTMLElement) {
      var box = triggerElm.getBoundingClientRect();
      var posx = box.left + triggerElm.offsetWidth / 2;
      var posy = box.top + triggerElm.offsetHeight / 2;
      var centerx = window.innerWidth / 2;
      var centery = window.innerHeight / 2;
      top = posy < centery ? true : false;
      right = posx > centerx ? true : false;
      bottom = posy > centery ? true : false;
      left = posx < centerx ? true : false;
      return {
        top: top,
        right: right,
        bottom: bottom,
        left: left
      };
    }
  },
  // check a key-press event for some common keys being pressed
  keyboard: function keyboard(e) {
    var code = e.keyCode || e.key || 0;
    var up = code === 38;
    var down = code === 40;
    var left = code === 37;
    var right = code === 39;
    var back = code === 8;
    var escape = code === 27;
    var space = code === 32;
    var enter = code === 13;
    return {
      up: up,
      down: down,
      left: left,
      right: right,
      back: back,
      escape: escape,
      space: space,
      enter: enter
    };
  },
  // shuffle an array
  shuffle: function shuffle(o) {
    for (var j, x, i = o.length; i; j = parseInt(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x) {
      ;
    }

    return o;
  },
  // deep merge obj arguments
  deepMerge: function deepMerge() {
    for (var i = 1; i < arguments.length; i++) {
      for (var key in arguments[i]) {
        if (arguments[i].hasOwnProperty(key)) {
          if (_typeof(arguments[0][key]) === 'object' && _typeof(arguments[i][key]) === 'object') {
            this.deepMerge(arguments[0][key], arguments[i][key]);
          } else {
            arguments[0][key] = arguments[i][key];
          }
        }
      }
    }

    return arguments[0];
  },
  // search objects in a list by key and search text
  search: function search(list, key, text, fullword, fullcase) {
    text = String(text || '').replace(/[^\w\s\|]+/g, '');

    if (text.length > 1) {
      var search = fullword ? '\\b' + text.replace(/[\|]+/g, '\\b|\\b') + '\\b' : text;
      var options = fullcase ? 'g' : 'gi';
      var regex = new RegExp(search, options);
      var count = list.length;
      var output = [];

      while (count--) {
        if (String(list[count][key] || '').search(regex) < 0) continue;
        output.push(list[count]);
      }

      return output;
    }

    return list;
  },
  // sort objects in an array by a key
  sort: function sort(list, key, order, ignore) {
    return list.sort(function (a, b) {
      if (a.hasOwnProperty(key)) {
        var _a = a[key];
        var _b = b[key];

        if (ignore) {
          // sort strings using same case
          _a = typeof _a === 'string' ? _a.toUpperCase() : _a;
          _b = typeof _b === 'string' ? _b.toUpperCase() : _b;
        }

        if (order === 'asc') {
          if (_a < _b) return -1;
          if (_a > _b) return 1;
        }

        if (order === 'desc') {
          if (_a > _b) return -1;
          if (_a < _b) return 1;
        }
      }

      return 0;
    });
  },
  // remove items from the start of a list
  trimLeft: function trimLeft(list, max) {
    return list.length > max ? list.slice(list.length - max) : list;
  },
  // remove items from the end of a list
  trimRight: function trimRight(list, max) {
    return list.length > max ? list.slice(0, max) : list;
  },
  // create unique hash from a string
  unique: function unique(str) {
    str = String(str || '').replace(/[\r\n\t\s]+/g, ' ').trim();
    var hash = 5381,
        i = str.length;

    while (--i) {
      hash = hash * 33 ^ str.charCodeAt(i);
    }

    return 'unq_' + (hash >>> 0);
  },
  // random string for a given length
  randString: function randString(length) {
    var chars = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
    var total = parseInt(length) || 10;
    var output = '';

    while (total) {
      output += chars.charAt(Math.floor(Math.random() * chars.length));
      total--;
    }

    return output;
  },
  // get a unique ID string that uses the current timestamp and a random value
  idString: function idString() {
    return (Date.now().toString(36) + Math.random().toString(36).substr(2, 5)).toUpperCase();
  }
};

/***/ }),

/***/ "./src/market/modules/viewport.js":
/*!****************************************!*\
  !*** ./src/market/modules/viewport.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/**
 * Viewport Object.
 * Helper for working with viewport data.
 */
var _w = window || {};

var _s = window.screen || {};

var _d = document.documentElement || {};

var _b = document.body || {};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  screenWidth: function screenWidth() {
    return Math.max(0, _s.width || _s.availWidth || 0);
  },
  screenHeight: function screenHeight() {
    return Math.max(0, _s.height || _s.availHeight || 0);
  },
  clientWidth: function clientWidth() {
    return Math.max(0, _w.innerWidth || _d.clientWidth || _b.clientWidth || 0);
  },
  clientHeight: function clientHeight() {
    return Math.max(0, _w.innerHeight || _d.clientHeight || _b.clientHeight || 0);
  },
  pageWidth: function pageWidth() {
    return Math.max(0, _b.scrollWidth || 0, _b.offsetWidth || 0, _d.clientWidth || 0, _d.offsetWidth || 0, _d.scrollWidth || 0);
  },
  pageHeight: function pageHeight() {
    return Math.max(0, _b.scrollHeight || 0, _b.offsetHeight || 0, _d.clientHeight || 0, _d.offsetHeight || 0, _d.scrollHeight || 0);
  },
  pageLeft: function pageLeft() {
    return Math.max(0, _d.clientLeft || _b.clientLeft || 0);
  },
  pageTop: function pageTop() {
    return Math.max(0, _d.clientTop || _b.clientTop || 0);
  },
  scrollLeft: function scrollLeft() {
    return Math.max(0, _w.pageXOffset || _d.scrollLeft || _b.scrollLeft || 0) - this.pageLeft();
  },
  scrollTop: function scrollTop() {
    return Math.max(0, _w.pageYOffset || _d.scrollTop || _b.scrollTop || 0) - this.pageTop();
  },
  scrollRight: function scrollRight() {
    // max right
    return Math.max(0, Math.floor(this.pageWidth() - this.clientWidth()));
  },
  scrollBottom: function scrollBottom() {
    // max bottom
    return Math.max(0, Math.floor(this.pageHeight() - this.clientHeight()));
  },
  mouseLeft: function mouseLeft(e) {
    var t = e && e.changedTouches ? e.changedTouches[0] : {};
    return e ? Math.max(0, t.pageX || e.pageX || e.clientX || 0) : 0;
  },
  mouseTop: function mouseTop(e) {
    var t = e && e.changedTouches ? e.changedTouches[0] : {};
    return e ? Math.max(0, t.pageY || e.pageY || e.clientY || 0) : 0;
  },
  centerX: function centerX(e) {
    // pointer axis from center
    return this.mouseLeft(e) - this.clientWidth() / 2;
  },
  centerY: function centerY(e) {
    // pointer axis from center
    return this.mouseTop(e) - this.clientHeight() / 2;
  },
  elementWidth: function elementWidth(e) {
    // border-box
    return e ? Math.max(0, e.offsetWidth || 0) : 0;
  },
  elementHeight: function elementHeight(e) {
    // border-box
    return e ? Math.max(0, e.offsetHeight || 0) : 0;
  },
  elementLeft: function elementLeft(e) {
    // from window
    return e ? e.getBoundingClientRect().left : 0;
  },
  elementTop: function elementTop(e) {
    // from window
    return e ? e.getBoundingClientRect().top : 0;
  },
  clampValue: function clampValue(value, min, max) {
    return Math.max(min, Math.min(value, max));
  }
});

/***/ }),

/***/ "./src/market/modules/watcher.js":
/*!***************************************!*\
  !*** ./src/market/modules/watcher.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Watcher)
/* harmony export */ });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

/**
 * Class for watching price changes in ticker list
 */
var Watcher = /*#__PURE__*/function () {
  /**
   * Constructor
   */
  function Watcher() {
    _classCallCheck(this, Watcher);

    this._reg = null;
    this._snapshot = {};
    this._options = {
      // pair
      token: '',
      // token symbol
      market: 'BTC',
      // trading market symbol
      // price
      priceType: 'change',
      // change, gain, loss
      priceChange: '2',
      // change percent
      priceCheck: 'below',
      // above, below
      price: '',
      // custom price limit
      // volume
      volumeType: 'gain',
      // change, gain, loss
      volumeChange: '1',
      // change percent
      volumeCheck: 'above',
      // above, below
      volume: '',
      // custom volume limit
      // percent 24h
      changeCheck: 'above',
      // above, below
      change: '0',
      // custom 24h percent change
      // volatility
      volatilityCheck: 'below',
      // above, below
      volatility: '0',
      // custom volatility limit
      // danger
      dangerCheck: 'below',
      // above, below
      danger: '0',
      // custom danger limit
      // time
      timeCheck: 'less',
      // more, less
      timeLimit: '10',
      // limit change by time (mins)
      // filter
      filterType: 'deny',
      // deny, allow
      filterTokens: '' // csv tokens str

    };
  }
  /**
   * Set watch options
   * @param {object}  options  New options
   */


  _createClass(Watcher, [{
    key: "setOptions",
    value: function setOptions(options) {
      Object.assign(this._options, options);
      var search = String(this._options.filterTokens || '').trim().split(/[^a-zA-Z]+/g).join('|').toUpperCase();
      this._reg = search ? new RegExp('^(' + search + ')$') : null;
    }
    /**
     * Update snapshot price data
     * @param {array}  tickerlist  Array list of Symbol objects
     */

  }, {
    key: "updateSnapshot",
    value: function updateSnapshot(tickerlist) {
      var checked = Date.now();
      var tokenCheck = String(this._options.token || '');
      var assetCheck = String(this._options.market || '');
      this._snapshot = {};

      for (var i = 0; i < tickerlist.length; ++i) {
        var _tickerlist$i = tickerlist[i],
            symbol = _tickerlist$i.symbol,
            token = _tickerlist$i.token,
            market = _tickerlist$i.market,
            close = _tickerlist$i.close,
            marketVolume = _tickerlist$i.marketVolume;
        if (tokenCheck && token !== tokenCheck) continue;
        if (assetCheck && market !== assetCheck) continue;
        this._snapshot[symbol] = {
          symbol: symbol,
          token: token,
          market: market,
          close: close,
          marketVolume: marketVolume,
          checked: checked
        };
      }
    }
    /**
     * Update snapshot price/volume for a symbol
     * @param {array}   tickerlist  Array list of Symbol objects
     * @param {string}  symbol      Symbol string
     */

  }, {
    key: "updateSymbolSnapshot",
    value: function updateSymbolSnapshot(tickerlist, symbol) {
      if (!this._snapshot.hasOwnProperty(symbol)) return;
      var pair = tickerlist.filter(function (p) {
        return p.symbol === symbol;
      }).shift();
      if (!pair) return;
      this._snapshot[symbol].close = pair.close;
      this._snapshot[symbol].marketVolume = pair.marketVolume;
      this._snapshot[symbol].checked = Date.now();
    }
    /**
     * Check if a pair passes the filter options
     * @param {object}  p  Symbol object pair data
     */

  }, {
    key: "pairCheck",
    value: function pairCheck(p) {
      var token = String(this._options.token || '');
      var market = String(this._options.market || '');
      var priceCheck = String(this._options.priceCheck || '');
      var price = Number(this._options.price || 0);
      var volumeCheck = String(this._options.volumeCheck || '');
      var volume = Number(this._options.volume || 0);
      var changeCheck = String(this._options.changeCheck || '');
      var change = Number(this._options.change || 0);
      var volatilityCheck = String(this._options.volatilityCheck || '');
      var volatility = Number(this._options.volatility || 0);
      var dangerCheck = String(this._options.dangerCheck || '');
      var danger = Number(this._options.danger || 0);
      var filterType = String(this._options.filterType || '');
      if (token && p.token !== token) return false;
      if (market && p.market !== market) return false;
      if (this._reg && filterType === 'allow' && !this._reg.test(p.token)) return false;
      if (this._reg && filterType === 'deny' && this._reg.test(p.token)) return false;
      if (price && priceCheck === 'above' && p.close < price) return false;
      if (price && priceCheck === 'below' && p.close > price) return false;
      if (volume && volumeCheck === 'above' && p.marketVolume < volume) return false;
      if (volume && volumeCheck === 'below' && p.marketVolume > volume) return false;
      if (change && changeCheck === 'above' && p.percent < change) return false;
      if (change && changeCheck === 'below' && p.percent > change) return false;
      if (volatility && volatilityCheck === 'above' && p.volatility < volatility) return false;
      if (volatility && volatilityCheck === 'below' && p.volatility > volatility) return false;
      if (danger && dangerCheck === 'above' && p.danger < danger) return false;
      if (danger && dangerCheck === 'below' && p.danger > danger) return false;
      return true;
    }
    /**
     * Check how many tokens are affected by the watch options
     * @param {array}  tickerlist  Array list of Symbol objects
     */

  }, {
    key: "watchCount",
    value: function watchCount(tickerlist) {
      var count = 0;

      for (var i = 0; i < tickerlist.length; ++i) {
        if (this.pairCheck(tickerlist[i])) count++;
      }

      return count;
    }
    /**
     * Check list of prices against options
     * @param {array}     tickerlist  Array list of Symbol objects
     * @param {function}  callback    Callback handler
     */

  }, {
    key: "check",
    value: function check(tickerlist, callback) {
      var now = Date.now();
      var priceType = String(this._options.priceType || '');
      var priceChange = Number(this._options.priceChange || 0);
      var volumeType = String(this._options.volumeType || '');
      var volumeChange = Number(this._options.volumeChange || 0);
      var timeCheck = String(this._options.timeCheck || 'less');
      var timeLimit = Number(this._options.timeLimit || 0) * 60; // secs

      var count = tickerlist.length; // need something to check

      if (!priceChange && !volumeChange) return; // scan price list...

      while (count--) {
        // price and snapshot data
        var p = tickerlist[count];
        var s = this._snapshot[p.symbol] || null; // initial filter checks

        if (!s || !this.pairCheck(p)) continue; // calculate price and volume change

        var pc = this._calcPercent(p.close, s.close);

        var vc = this._calcPercent(p.marketVolume, s.marketVolume);

        var t = (now - s.checked) / 1000; // check price change

        if (priceChange) {
          if (priceType === 'gain' && pc.sign === '-') continue;
          if (priceType === 'loss' && pc.sign === '+') continue;
          if (pc.percent < priceChange) continue;
        } // check volume change


        if (volumeChange) {
          if (volumeType === 'gain' && vc.sign === '-') continue;
          if (volumeType === 'loss' && vc.sign === '+') continue;
          if (vc.percent < volumeChange) continue;
        } // update snapshot data


        this._snapshot[p.symbol].close = p.close;
        this._snapshot[p.symbol].marketVolume = p.marketVolume;
        this._snapshot[p.symbol].checked = now; // check time options

        if (timeCheck && timeLimit) {
          if (timeCheck === 'less' && t > timeLimit) continue;
          if (timeCheck === 'more' && t < timeLimit) continue;
        } // we have a hit


        callback(p, pc, vc, t);
      }
    }
    /**
     * Calculate percent change
     * @param {number}  current  Current value
     * @param {number}  last     Last value
     */

  }, {
    key: "_calcPercent",
    value: function _calcPercent(current, last) {
      var isnum = last > 0;
      var isup = current >= last;
      var change = isup ? current - last : last - current;
      var percent = isnum ? change / last * 100.0 : 0.0;
      var sign = isup ? '+' : '-';
      var arrow = isup ? '▲' : '▼';
      return {
        change: change,
        percent: percent,
        sign: sign,
        arrow: arrow
      };
    }
  }]);

  return Watcher;
}();



/***/ }),

/***/ "./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/App.vue?vue&type=style&index=0&lang=scss&":
/*!************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/App.vue?vue&type=style&index=0&lang=scss& ***!
  \************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/laravel-mix/node_modules/css-loader/dist/runtime/cssWithMappingToString.js */ "./node_modules/laravel-mix/node_modules/css-loader/dist/runtime/cssWithMappingToString.js");
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/laravel-mix/node_modules/css-loader/dist/runtime/api.js */ "./node_modules/laravel-mix/node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, "@charset \"UTF-8\";\n/**\n * Global resets and documet setup.\n */\n*, *:before, *:after {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline: none;\n  background-color: transparent;\n  text-transform: none;\n  text-shadow: none;\n  box-shadow: none;\n  box-sizing: border-box;\n  -webkit-appearance: none;\n     -moz-appearance: none;\n          appearance: none;\n  -webkit-overflow-scrolling: touch;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  transform-style: flat;\n  transition: border-color 300ms cubic-bezier(0.215, 0.61, 0.355, 1), background-color 300ms cubic-bezier(0.215, 0.61, 0.355, 1), opacity 300ms cubic-bezier(0.215, 0.61, 0.355, 1), transform 300ms cubic-bezier(0.215, 0.61, 0.355, 1);\n}\nhtml .navbar-sticky .app-content {\n  padding: 62px 0 0 0 !important;\n}\n@media (max-width: 767.98px) {\nhtml body.navbar-sticky .app-content {\n    padding: 62px 0 0 0 !important;\n}\n}\n.clickable, [clickable] {\n  cursor: pointer;\n}\n.hidden, [hidden] {\n  display: none;\n}\n.disabled, [disabled] {\n  pointer-events: none;\n  opacity: 0.5;\n}\n.cloaked, [cloaked], [v-cloak] {\n  pointer-events: none;\n  opacity: 0;\n}\n.transparent {\n  opacity: 0;\n}\n.bgtest {\n  background-color: rgba(255, 192, 203, 0.1) !important;\n}\n.app-wrap .color {\n  color: lightslategray;\n}\n.app-wrap polyline {\n  stroke: lightslategray;\n}\n.app-wrap circle {\n  fill: lightslategray;\n}\n.app-wrap .gain .color {\n  color: #7ba428;\n}\n.app-wrap .gain polyline {\n  stroke: #7ba428;\n}\n.app-wrap .gain circle {\n  fill: #7ba428;\n}\n.app-wrap .loss .color {\n  color: #d92626;\n}\n.app-wrap .loss polyline {\n  stroke: #d92626;\n}\n.app-wrap .loss circle {\n  fill: #d92626;\n}\n.app-wrap .pos-abs {\n  position: absolute;\n}\n.app-wrap .pos-rel {\n  position: relative;\n}\n.well {\n  position: relative;\n  padding: 0.4em 0.8em;\n  background-image: radial-gradient(ellipse at top left, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0.01) 100%);\n  border-radius: 6px;\n}\n.navlinks {\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  margin: 0 0 1em 0;\n  padding: 0.5em 1em;\n  line-height: 2em;\n}\n.page-wrap {\n  position: relative;\n}\n.page-wrap .page-topbar {\n  position: relative;\n  padding: 10px 0 10px 0;\n  width: 100%;\n  background-color: rgba(25, 32, 41, 0);\n  z-index: 99;\n}\n.page-wrap.collapsed .page-topbar {\n  top: 62px;\n  position: -webkit-sticky;\n  position: sticky;\n}\n.page-wrap.opaque .page-topbar {\n  background-color: rgba(0, 0, 0, 0.85);\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.4);\n}\n.pagelist-wrap {\n  position: relative;\n}\n.pagelist-wrap .pagelist-item {\n  margin: 0 0 0.4em 0;\n  padding: 0.6em 1em;\n  background: rgba(255, 255, 255, 0.06);\n  border-radius: 6px;\n}\n.pagelist-wrap .pagelist-item:hover {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n.tablelist-wrap {\n  position: relative;\n  min-width: 300px;\n}\n.tablelist-wrap .tablelist-header {\n  padding: 1em;\n}\n.tablelist-wrap .tablelist-content {\n  overflow: hidden;\n  overflow-y: auto;\n  max-height: 300px;\n  border-top: 2px solid rgba(255, 255, 255, 0.02);\n  border-bottom: 2px solid rgba(255, 255, 255, 0.02);\n}\n.tablelist-wrap .tablelist-content > .tablelist-row {\n  padding: 0.5em 1.6em;\n  background-color: rgba(0, 0, 0, 0);\n  line-height: 1.2rem;\n}\n.tablelist-wrap .tablelist-content > .tablelist-row + .tablelist-row {\n  margin-top: 2px;\n}\n.tablelist-wrap .tablelist-content > .tablelist-row:hover {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.tablelist-wrap .tablelist-content > .tablelist-row.active {\n  background-color: rgba(0, 0, 0, 0.2);\n  color: #f2a10d;\n}\n.tablelist-wrap .tablelist-10 {\n  flex: 10%;\n  width: 10%;\n}\n.tablelist-wrap .tablelist-20 {\n  flex: 20%;\n  width: 20%;\n}\n.tablelist-wrap .tablelist-30 {\n  flex: 30%;\n  width: 30%;\n}\n.tablelist-wrap .tablelist-40 {\n  flex: 40%;\n  width: 40%;\n}\n.tablelist-wrap .tablelist-50 {\n  flex: 50%;\n  width: 50%;\n}\n.tablelist-wrap .tablelist-60 {\n  flex: 60%;\n  width: 60%;\n}\n.tablelist-wrap .tablelist-70 {\n  flex: 70%;\n  width: 70%;\n}\n.tablelist-wrap .tablelist-80 {\n  flex: 80%;\n  width: 80%;\n}\n.tablelist-wrap .tablelist-90 {\n  flex: 90%;\n  width: 90%;\n}\n.tablelist-wrap .tablelist-100 {\n  flex: 100%;\n  width: 100%;\n}\n.percent-bar {\n  display: block;\n  overflow: hidden;\n  height: 5px;\n  background-color: rgba(78, 90, 101, 0.25);\n  border-radius: 6px;\n}\n.percent-bar > :first-child {\n  display: block;\n  height: 5px;\n  border-radius: 6px;\n}\n.img-round {\n  display: block;\n  overflow: hidden;\n  background-color: lightslategray;\n  text-align: center;\n  line-height: 100%;\n  border-radius: 100px;\n  color: #192029;\n}\n.alert-bubble {\n  position: relative;\n}\n.alert-bubble:before {\n  content: \"\";\n  display: block;\n  position: absolute;\n  pointer-events: none;\n  right: -0.3em;\n  top: 0;\n  width: 1em;\n  height: 1em;\n  background-color: #bc3232;\n  border-radius: 50%;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.5);\n  -webkit-animation: pulseFade 1s linear infinite;\n          animation: pulseFade 1s linear infinite;\n  z-index: 10;\n}\n.alarm-bubble {\n  position: relative;\n}\n.alarm-bubble:before {\n  content: \"\\f101\";\n  color: #ff9f43 !important;\n  font-family: \"bootstrap-icons\";\n  display: block;\n  position: absolute;\n  pointer-events: none;\n  font-size: 120%;\n  right: -0.2em;\n  top: -0.2em;\n  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.5);\n  -webkit-animation: pulseFade 1s linear infinite;\n          animation: pulseFade 1s linear infinite;\n  z-index: 10;\n}\n.border-top {\n  border-top: 2px solid rgba(255, 255, 255, 0.02);\n}\n.border-right {\n  border-right: 2px solid rgba(255, 255, 255, 0.02);\n}\n.border-bottom {\n  border-bottom: 2px solid rgba(255, 255, 255, 0.02);\n}\n.border-left {\n  border-left: 2px solid rgba(255, 255, 255, 0.02);\n}\n.if-small {\n  display: none;\n}\n@media only screen and (min-width : 420px) {\n.if-small {\n    display: initial;\n}\n}\n.if-medium {\n  display: none;\n}\n@media only screen and (min-width : 720px) {\n.if-medium {\n    display: initial;\n}\n}\n.if-large {\n  display: none;\n}\n@media only screen and (min-width : 1280px) {\n.if-large {\n    display: initial;\n}\n}\n.fx {\n  position: relative;\n  -webkit-animation-direction: normal;\n          animation-direction: normal;\n  -webkit-animation-duration: 300ms;\n          animation-duration: 300ms;\n  -webkit-animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n          animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n  -webkit-animation-iteration-count: 1;\n          animation-iteration-count: 1;\n  -webkit-animation-fill-mode: forwards;\n          animation-fill-mode: forwards;\n}\n.fx-notx {\n  transition: none !important;\n}\n.fx-ibk {\n  display: inline-block !important;\n}\n.fx-delay-1 {\n  -webkit-animation-delay: calc( calc( 300ms / 3 ) * 1 );\n          animation-delay: calc( calc( 300ms / 3 ) * 1 );\n}\n.fx-delay-2 {\n  -webkit-animation-delay: calc( calc( 300ms / 3 ) * 2 );\n          animation-delay: calc( calc( 300ms / 3 ) * 2 );\n}\n.fx-delay-3 {\n  -webkit-animation-delay: calc( calc( 300ms / 3 ) * 3 );\n          animation-delay: calc( calc( 300ms / 3 ) * 3 );\n}\n.fx-delay-4 {\n  -webkit-animation-delay: calc( calc( 300ms / 3 ) * 4 );\n          animation-delay: calc( calc( 300ms / 3 ) * 4 );\n}\n.fx-delay-5 {\n  -webkit-animation-delay: calc( calc( 300ms / 3 ) * 5 );\n          animation-delay: calc( calc( 300ms / 3 ) * 5 );\n}\n.fx-delay-6 {\n  -webkit-animation-delay: calc( calc( 300ms / 3 ) * 6 );\n          animation-delay: calc( calc( 300ms / 3 ) * 6 );\n}\n.fx-delay-7 {\n  -webkit-animation-delay: calc( calc( 300ms / 3 ) * 7 );\n          animation-delay: calc( calc( 300ms / 3 ) * 7 );\n}\n.fx-delay-8 {\n  -webkit-animation-delay: calc( calc( 300ms / 3 ) * 8 );\n          animation-delay: calc( calc( 300ms / 3 ) * 8 );\n}\n@-webkit-keyframes spinRight {\n0% {\n    transform: rotate(0deg);\n}\n100% {\n    transform: rotate(359deg);\n}\n}\n@keyframes spinRight {\n0% {\n    transform: rotate(0deg);\n}\n100% {\n    transform: rotate(359deg);\n}\n}\n.fx-spin-right {\n  -webkit-animation-name: spinRight;\n          animation-name: spinRight;\n  -webkit-animation-duration: 1s;\n          animation-duration: 1s;\n  -webkit-animation-timing-function: linear;\n          animation-timing-function: linear;\n  -webkit-animation-iteration-count: infinite;\n          animation-iteration-count: infinite;\n}\n@-webkit-keyframes spinLeft {\n0% {\n    transform: rotate(359deg);\n}\n100% {\n    transform: rotate(0deg);\n}\n}\n@keyframes spinLeft {\n0% {\n    transform: rotate(359deg);\n}\n100% {\n    transform: rotate(0deg);\n}\n}\n.fx-spin-left {\n  -webkit-animation-name: spinLeft;\n          animation-name: spinLeft;\n  -webkit-animation-duration: 1s;\n          animation-duration: 1s;\n  -webkit-animation-timing-function: linear;\n          animation-timing-function: linear;\n  -webkit-animation-iteration-count: infinite;\n          animation-iteration-count: infinite;\n}\n@-webkit-keyframes fadeIn {\n0% {\n    opacity: 0;\n}\n100% {\n    opacity: 1;\n}\n}\n@keyframes fadeIn {\n0% {\n    opacity: 0;\n}\n100% {\n    opacity: 1;\n}\n}\n.fx-fade-in {\n  opacity: 0;\n  -webkit-animation-name: fadeIn;\n          animation-name: fadeIn;\n}\n@-webkit-keyframes fadeOut {\n0% {\n    opacity: 1;\n}\n100% {\n    opacity: 0;\n}\n}\n@keyframes fadeOut {\n0% {\n    opacity: 1;\n}\n100% {\n    opacity: 0;\n}\n}\n.fx-fade-out {\n  opacity: 1;\n  -webkit-animation-name: fadeOut;\n          animation-name: fadeOut;\n}\n@-webkit-keyframes dropIn {\n0% {\n    opacity: 0;\n    transform: scale(1.4);\n}\n100% {\n    opacity: 1;\n    transform: scale(1);\n}\n}\n@keyframes dropIn {\n0% {\n    opacity: 0;\n    transform: scale(1.4);\n}\n100% {\n    opacity: 1;\n    transform: scale(1);\n}\n}\n.fx-drop-in {\n  opacity: 0;\n  transform: scale(1.4);\n  -webkit-animation-name: dropIn;\n          animation-name: dropIn;\n}\n@-webkit-keyframes zoomIn {\n0% {\n    opacity: 0;\n    transform: scale(0.4);\n}\n100% {\n    opacity: 1;\n    transform: scale(1);\n}\n}\n@keyframes zoomIn {\n0% {\n    opacity: 0;\n    transform: scale(0.4);\n}\n100% {\n    opacity: 1;\n    transform: scale(1);\n}\n}\n.fx-zoom-in {\n  opacity: 0;\n  transform: scale(0.4);\n  -webkit-animation-name: zoomIn;\n          animation-name: zoomIn;\n}\n@-webkit-keyframes zoomOut {\n0% {\n    opacity: 1;\n    transform: scale(1);\n}\n100% {\n    opacity: 0;\n    transform: scale(0.4);\n}\n}\n@keyframes zoomOut {\n0% {\n    opacity: 1;\n    transform: scale(1);\n}\n100% {\n    opacity: 0;\n    transform: scale(0.4);\n}\n}\n.fx-zoom-out {\n  opacity: 1;\n  transform: scale(1);\n  -webkit-animation-name: zoomOut;\n          animation-name: zoomOut;\n}\n@-webkit-keyframes slideLeft {\n0% {\n    opacity: 0;\n    transform: translateX(20px);\n}\n100% {\n    opacity: 1;\n    transform: translateX(0);\n}\n}\n@keyframes slideLeft {\n0% {\n    opacity: 0;\n    transform: translateX(20px);\n}\n100% {\n    opacity: 1;\n    transform: translateX(0);\n}\n}\n.fx-slide-left {\n  opacity: 0;\n  transform: translateX(20px);\n  -webkit-animation-name: slideLeft;\n          animation-name: slideLeft;\n}\n@-webkit-keyframes slideRight {\n0% {\n    opacity: 0;\n    transform: translateX(calc( -20px ));\n}\n100% {\n    opacity: 1;\n    transform: translateX(0);\n}\n}\n@keyframes slideRight {\n0% {\n    opacity: 0;\n    transform: translateX(calc( -20px ));\n}\n100% {\n    opacity: 1;\n    transform: translateX(0);\n}\n}\n.fx-slide-right {\n  opacity: 0;\n  transform: translateX(calc( -20px ));\n  -webkit-animation-name: slideRight;\n          animation-name: slideRight;\n}\n@-webkit-keyframes slideUp {\n0% {\n    opacity: 0;\n    transform: translateY(20px);\n}\n100% {\n    opacity: 1;\n    transform: translateY(0);\n}\n}\n@keyframes slideUp {\n0% {\n    opacity: 0;\n    transform: translateY(20px);\n}\n100% {\n    opacity: 1;\n    transform: translateY(0);\n}\n}\n.fx-slide-up {\n  opacity: 0;\n  transform: translateY(20px);\n  -webkit-animation-name: slideUp;\n          animation-name: slideUp;\n}\n@-webkit-keyframes slideDown {\n0% {\n    opacity: 0;\n    transform: translateY(calc( -20px ));\n}\n100% {\n    opacity: 1;\n    transform: translateY(0);\n}\n}\n@keyframes slideDown {\n0% {\n    opacity: 0;\n    transform: translateY(calc( -20px ));\n}\n100% {\n    opacity: 1;\n    transform: translateY(0);\n}\n}\n.fx-slide-down {\n  opacity: 0;\n  transform: translateY(calc( -20px ));\n  -webkit-animation-name: slideDown;\n          animation-name: slideDown;\n}\n@-webkit-keyframes pulseFade {\n0% {\n    opacity: 0.7;\n}\n50% {\n    opacity: 1;\n}\n100% {\n    opacity: 0.7;\n}\n}\n@keyframes pulseFade {\n0% {\n    opacity: 0.7;\n}\n50% {\n    opacity: 1;\n}\n100% {\n    opacity: 0.7;\n}\n}\n.fx-pulse {\n  opacity: 0.7;\n  -webkit-animation-name: pulseFade;\n          animation-name: pulseFade;\n  -webkit-animation-duration: 1s;\n          animation-duration: 1s;\n  -webkit-animation-timing-function: linear;\n          animation-timing-function: linear;\n  -webkit-animation-iteration-count: infinite;\n          animation-iteration-count: infinite;\n}\n\n/**\n * Align children vertically (column)\n */\n.flex-column {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n}\n\n/**\n * Align children horizontally (row)\n */\n.flex-row {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n}\n\n/**\n * Flex items alignment and space distribution\n */\n.flex-wrap {\n  flex-wrap: wrap;\n}\n.flex-left {\n  justify-content: flex-start;\n}\n.flex-center {\n  justify-content: center;\n}\n.flex-right {\n  justify-content: flex-end;\n}\n.flex-space {\n  justify-content: space-between;\n}\n.flex-around {\n  justify-content: space-around;\n}\n.flex-top {\n  align-items: flex-start;\n}\n.flex-middle {\n  align-items: center;\n}\n.flex-bottom {\n  align-items: flex-end;\n}\n\n/**\n * Flex items sizing\n */\n.flex-a {\n  flex: auto;\n}\n.flex-1 {\n  flex: 1;\n}\n.flex-2 {\n  flex: 2;\n}\n.flex-3 {\n  flex: 3;\n}\n.flex-4 {\n  flex: 4;\n}\n.flex-5 {\n  flex: 5;\n}\n.flex-10 {\n  flex: 10%;\n  width: 10%;\n}\n.flex-20 {\n  flex: 20%;\n  width: 20%;\n}\n.flex-30 {\n  flex: 30%;\n  width: 30%;\n}\n.flex-40 {\n  flex: 40%;\n  width: 40%;\n}\n.flex-50 {\n  flex: 50%;\n  width: 50%;\n}\n.flex-60 {\n  flex: 60%;\n  width: 60%;\n}\n.flex-70 {\n  flex: 70%;\n  width: 70%;\n}\n.flex-80 {\n  flex: 80%;\n  width: 80%;\n}\n.flex-90 {\n  flex: 90%;\n  width: 90%;\n}\n.flex-100 {\n  flex: 100%;\n  width: 100%;\n}\n\n/**\n * Fixed with labels\n */\n.flex-label {\n  width: 100px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n\n/**\n * Table-like lists\n */\n.flex-list {\n  display: block;\n  position: relative;\n}\n.flex-list > .flex-header, .flex-list > .flex-item {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  align-items: center;\n  justify-content: stretch;\n  margin: 0 0 4px 0;\n  padding: 0.5em;\n  border-radius: 6px;\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.flex-list > .flex-item:hover {\n  background-color: rgba(0, 0, 0, 0.3);\n}\n\n/**\n * Basic grid\n */\n.flex-grid {\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));\n}\n.flex-grid.flex-grid-sm {\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n}\n.flex-grid.flex-grid-md {\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n}\n.flex-grid.flex-grid-lg {\n  grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\n}\n\n/**\n * Emoji classes\n */\n[class^=e-]:before,\n[class*=\" e-\"]:before {\n  display: inline-block;\n  margin: 0;\n  padding: 0;\n  width: 1em;\n  line-height: 1em;\n  vertical-align: baseline;\n  font-style: normal;\n  font-weight: normal;\n  font-variant: normal;\n  text-align: center;\n  text-decoration: none;\n  text-transform: none;\n  text-shadow: none;\n  font-weight: normal;\n  outline: none;\n  transition: none;\n  transform: scale(1.25);\n}\n.eLeft:before {\n  margin-right: 0.6em;\n}\n.e-100:before {\n  content: \"💯\";\n}\n.e-fire:before {\n  content: \"🔥\";\n}\n.e-explode:before {\n  content: \"💥\";\n}\n.e-like:before {\n  content: \"👍\";\n}\n.e-dislike:before {\n  content: \"👎\";\n}\n.e-shocked:before {\n  content: \"😱\";\n}\n.e-confused:before {\n  content: \"🤔\";\n}\n.e-hyped:before {\n  content: \"🤪\";\n}\n.e-love:before {\n  content: \"😍\";\n}\n.e-hate:before {\n  content: \"🤬\";\n}\n.e-happy:before {\n  content: \"😀\";\n}\n.e-sad:before {\n  content: \"☹️\";\n}\n.e-sick:before {\n  content: \"😷\";\n}\n.e-dead:before {\n  content: \"😵\";\n}\n.e-chart:before {\n  content: \"📊\";\n}\n.e-gain:before {\n  content: \"📈\";\n}\n.e-loss:before {\n  content: \"📉\";\n}\n.e-up:before {\n  content: \"▲\";\n}\n.e-down:before {\n  content: \"▼\";\n}\n.e-clock:before {\n  content: \"⌚️\";\n}\n.e-time:before {\n  content: \"⏳\";\n}\n.e-lock:before {\n  content: \"🔓\";\n}\n.e-key:before {\n  content: \"🔑\";\n}\n.e-sound:before {\n  content: \"🔊\";\n}\n.e-bell:before {\n  content: \"🔔\";\n}\n.e-siren:before {\n  content: \"🚨\";\n}\n.e-alarm:before {\n  content: \"⏰\";\n}\n.e-alert:before {\n  content: \"⚠️\";\n}\n.e-heart:before {\n  content: \"❤️\";\n}\n.e-rocket:before {\n  content: \"🚀\";\n}\n.e-commet:before {\n  content: \"💬\";\n}\n.e-moon:before {\n  content: \"🌕\";\n}\n.e-star:before {\n  content: \"⭐️\";\n}\n.e-sun:before {\n  content: \"☀️\";\n}\n.e-globe:before {\n  content: \"🌎\";\n}\n.e-money:before {\n  content: \"💰\";\n}\n.e-comment:before {\n  content: \"☄️\";\n}\n.e-note:before {\n  content: \"📝\";\n}\n.e-mail:before {\n  content: \"📩\";\n}\n.e-chain:before {\n  content: \"🔗\";\n}\n.e-sos:before {\n  content: \"🆘\";\n}\n.e-denied:before {\n  content: \"🚫\";\n}\n.e-avoid:before {\n  content: \"⛔️\";\n}\n.e-connection:before {\n  content: \"📡\";\n}\n.e-battery:before {\n  content: \"🔋\";\n}\n.e-disk:before {\n  content: \"💽\";\n}\n.e-calendar:before {\n  content: \"📆\";\n}\n.e-bag:before {\n  content: \"👛\";\n}\n.e-users:before {\n  content: \"👥\";\n}\n.e-user:before {\n  content: \"👤\";\n}\n.e-check:before {\n  content: \"✔️\";\n}\n.e-close:before {\n  content: \"✖️\";\n}\n.e-pin:before {\n  content: \"📌\";\n}\n.e-location:before {\n  content: \"📍\";\n}\n.e-search:before {\n  content: \"🔎\";\n}\n.e-config:before {\n  content: \"⚙️\";\n}\n.e-gift:before {\n  content: \"🎁\";\n}\na {\n  text-decoration: none;\n  color: aliceblue;\n  opacity: 1;\n}\na:hover {\n  opacity: 0.8;\n}\n.text-badge {\n  display: inline-block;\n  padding: 0 0.5em;\n  font-size: 90%;\n  background-color: rgba(0, 0, 0, 0.1);\n  border-radius: 100px;\n}\n.text-pill {\n  display: inline-block;\n  font-size: 78%;\n  text-transform: uppercase;\n  line-height: 1.3em;\n  padding: 1px 0.8em 2px 0.8em;\n  background: lightgray linear-gradient(180deg, transparent, rgba(0, 0, 0, 0.2));\n  color: #6d6d6d;\n  border-radius: 100px;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n}\n.text-btn {\n  display: inline-block;\n  overflow: hidden;\n  position: relative;\n  font-size: 70%;\n  text-transform: uppercase;\n  vertical-align: top;\n  line-height: 2em;\n  padding: 0 0.8em;\n  background: lightgray linear-gradient(180deg, transparent, rgba(0, 0, 0, 0.2));\n  color: #6d6d6d;\n  border-radius: 3px;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n}\n.text-reset {\n  font-family: \"Open Sans Condensed\", \"Contrail One\", Capriola, Consolas, Monaco, monospace;\n  font-size: 17px;\n  font-style: normal;\n  font-weight: normal;\n  line-height: 1.5em;\n  text-transform: none;\n}\n.text-monospace {\n  font-family: Consolas, Monaco, monospace;\n  font-weight: bold;\n  letter-spacing: -0.5px;\n}\n.text-left {\n  text-align: left;\n}\n.text-center {\n  text-align: center;\n}\n.text-justify {\n  text-align: justify;\n}\n.text-top {\n  vertical-align: top;\n}\n.text-middle {\n  vertical-align: middle;\n}\n.text-bottom {\n  vertical-align: bottom;\n}\n.text-baseline {\n  vertical-align: baseline;\n}\n.text-uppercase {\n  text-transform: uppercase;\n}\n.text-lowercase {\n  text-transform: lowercase;\n}\n.text-capitalize {\n  text-transform: capitalize;\n}\n.text-underline {\n  text-decoration: underline;\n}\n.text-striked {\n  text-decoration: line-through;\n}\n.text-italic {\n  font-style: italic;\n}\n.text-bold {\n  font-weight: bold;\n}\n.text-wrap {\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  -ms-word-break: break-all;\n  word-break: break-word;\n  -ms-hyphens: auto;\n  -webkit-hyphens: auto;\n  hyphens: auto;\n}\n.text-nowrap {\n  white-space: nowrap;\n}\n.text-clip {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n.text-noselect {\n  -webkit-touch-callout: none;\n  /* iOS Safari */\n  -webkit-user-select: none;\n  /* Safari */\n  /* Konqueror HTML */\n  -moz-user-select: none;\n  /* Firefox */\n  -ms-user-select: none;\n  /* Internet Explorer/Edge */\n  user-select: none;\n}\n.text-flip {\n  text-align: left;\n  direction: rtl;\n}\n.text-faded {\n  opacity: 0.5;\n}\n.text-big {\n  font-size: 120%;\n}\n.text-bigger {\n  font-size: 160%;\n}\n.text-huge {\n  font-size: 260%;\n}\n.text-small {\n  font-size: 90%;\n}\n.text-smaller {\n  font-size: 70%;\n}\n.text-tiny {\n  font-size: 50%;\n}\n.text-collapse {\n  line-height: 1em;\n}\n.text-label {\n  font: inherit;\n  font-size: 80%;\n  letter-spacing: 1px;\n  font-weight: normal;\n  text-transform: uppercase;\n  line-height: 1.5em;\n  color: aliceblue;\n  opacity: 0.4;\n}\nselect > option {\n  color: #192029 !important;\n}\nselect,\noption,\nbutton,\ninput[type=button],\ninput[type=reset],\ninput[type=submit],\ninput[type=range],\ninput[type=date] {\n  cursor: pointer;\n}\ninput[type=range] {\n  width: 100%;\n}\ninput[type=range]::-webkit-slider-runnable-track {\n  display: block;\n  width: 100%;\n  height: 3px;\n  background: #192029;\n  color: transparent !important;\n  border-color: transparent !important;\n  border-radius: 6px !important;\n  border: 0 !important;\n}\ninput[type=range]::-moz-range-track {\n  display: block;\n  width: 100%;\n  height: 3px;\n  background: #192029;\n  color: transparent !important;\n  border-color: transparent !important;\n  border-radius: 6px !important;\n  border: 0 !important;\n}\ninput[type=range]::-ms-track {\n  display: block;\n  width: 100%;\n  height: 3px;\n  background: #192029;\n  color: transparent !important;\n  border-color: transparent !important;\n  border-radius: 6px !important;\n  border: 0 !important;\n}\ninput[type=range]::-webkit-slider-thumb {\n  -webkit-appearance: none;\n  display: block;\n  width: 1.2em;\n  height: 1.2em;\n  margin: -0.55em 0 0 0;\n  border-radius: 50%;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n  background: #68852c;\n  color: transparent !important;\n  border-color: transparent !important;\n  border: 0 !important;\n}\ninput[type=range]::-moz-range-thumb {\n  display: block;\n  width: 1.2em;\n  height: 1.2em;\n  margin: -0.55em 0 0 0;\n  border-radius: 50%;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n  background: #68852c;\n  color: transparent !important;\n  border-color: transparent !important;\n  border: 0 !important;\n}\ninput[type=range]::-ms-thumb {\n  display: block;\n  width: 1.2em;\n  height: 1.2em;\n  margin: -0.55em 0 0 0;\n  border-radius: 50%;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n  background: #68852c;\n  color: transparent !important;\n  border-color: transparent !important;\n  border: 0 !important;\n}\n.form-row {\n  display: block;\n  margin: 0 0 0.5em 0;\n}\n.form-row:last-of-type {\n  margin: 0;\n}\n.form-label {\n  display: block;\n  text-transform: uppercase;\n  font-weight: normal;\n  font-size: 80%;\n  letter-spacing: 1px;\n  color: #f2a10d;\n}\n.form-btn {\n  display: inline-block;\n  padding: 0.5em 1em;\n  line-height: inherit;\n  border-radius: 100px;\n  background-color: #4e5a65;\n  color: #c6cdd3;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n  white-space: nowrap;\n}\n.form-btn:hover {\n  background-color: #434d57;\n}\n.form-input {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  align-items: center;\n  justify-content: stretch;\n  padding: 0.5em 1em;\n  line-height: inherit;\n  color: aliceblue;\n  background-color: #151b23;\n  border-radius: 100px;\n  box-shadow: inset 0 1px 4px rgba(0, 0, 0, 0.15);\n}\n.form-input:hover, .form-input:active, .form-input:focus {\n  background-color: #11161c;\n}\n.form-input.light {\n  background-color: #212a36;\n}\n.form-input.light:hover {\n  background-color: #252f3c;\n}\ntextarea.form-input {\n  overflow: auto;\n  min-width: 100%;\n  max-width: 100%;\n  min-height: 80px;\n}\n\n/**\n * Custom prompt box\n */\n.prompt-overlay {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  position: fixed;\n  overflow: hidden;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 10099;\n  pointer-events: none;\n  opacity: 0;\n}\n.prompt-overlay .prompt-container {\n  margin: 0 auto;\n  width: calc(100% - ( 1em * 2 ));\n  max-width: calc( 420px + ( 1em * 2 ) );\n  background-color: #27313f;\n  border-radius: 6px;\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.4);\n  transform: scale(0.5);\n}\n.prompt-overlay .prompt-container .prompt-title {\n  color: aliceblue;\n  padding: 1em;\n  border-bottom: 2px solid rgba(255, 255, 255, 0.02);\n}\n.prompt-overlay .prompt-container .prompt-message {\n  padding: 1em;\n}\n.prompt-overlay .prompt-container .prompt-input {\n  display: block;\n  overflow: hidden;\n  font-size: inherit;\n  line-height: 1.4em;\n  min-width: 100%;\n  margin: 0;\n  padding: 1em;\n  color: #d58e0b;\n  background-color: transparent;\n  box-shadow: none;\n}\n.prompt-overlay .prompt-container .prompt-input:active, .prompt-overlay .prompt-container .prompt-input:focus {\n  color: #f2a10d;\n}\n.prompt-overlay .prompt-container .prompt-buttons {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: stretch;\n  border-top: 2px solid rgba(255, 255, 255, 0.02);\n}\n.prompt-overlay .prompt-container .prompt-buttons button {\n  display: block;\n  flex: 1;\n  cursor: pointer;\n  color: #babbbc;\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 90%;\n  line-height: 1.2em;\n  margin: 0;\n  padding: 1em;\n  border-bottom: 2px solid rgba(0, 0, 0, 0.1);\n}\n.prompt-overlay .prompt-container .prompt-buttons .prompt-accept-btn {\n  background-color: rgba(0, 0, 0, 0.05);\n  color: #7ba428;\n}\n.prompt-overlay .prompt-container .prompt-buttons .prompt-accept-btn:hover, .prompt-overlay .prompt-container .prompt-buttons .prompt-accept-btn:active, .prompt-overlay .prompt-container .prompt-buttons .prompt-accept-btn:focus {\n  background-color: rgba(0, 0, 0, 0);\n}\n.prompt-overlay .prompt-container .prompt-buttons .prompt-cancel-btn {\n  background-color: rgba(0, 0, 0, 0.15);\n  color: #d92626;\n}\n.prompt-overlay .prompt-container .prompt-buttons .prompt-cancel-btn:hover, .prompt-overlay .prompt-container .prompt-buttons .prompt-cancel-btn:active, .prompt-overlay .prompt-container .prompt-buttons .prompt-cancel-btn:focus {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.prompt-overlay.prompt-visible {\n  pointer-events: auto;\n  opacity: 1;\n}\n.prompt-overlay.prompt-visible .prompt-container {\n  transform: scale(1);\n}\n\n/**\n * Tooltips\n */\n@-webkit-keyframes tooltipShowLeft {\n0% {\n    opacity: 0;\n    transform: translateX(-20px);\n}\n100% {\n    opacity: 1;\n    transform: translateX(-10px);\n}\n}\n@keyframes tooltipShowLeft {\n0% {\n    opacity: 0;\n    transform: translateX(-20px);\n}\n100% {\n    opacity: 1;\n    transform: translateX(-10px);\n}\n}\n@-webkit-keyframes tooltipShowRight {\n0% {\n    opacity: 0;\n    transform: translateX(20px);\n}\n100% {\n    opacity: 1;\n    transform: translateX(10px);\n}\n}\n@keyframes tooltipShowRight {\n0% {\n    opacity: 0;\n    transform: translateX(20px);\n}\n100% {\n    opacity: 1;\n    transform: translateX(10px);\n}\n}\n@-webkit-keyframes tooltipShowTop {\n0% {\n    opacity: 0;\n    transform: translateY(-20px);\n}\n100% {\n    opacity: 1;\n    transform: translateY(-10px);\n}\n}\n@keyframes tooltipShowTop {\n0% {\n    opacity: 0;\n    transform: translateY(-20px);\n}\n100% {\n    opacity: 1;\n    transform: translateY(-10px);\n}\n}\n@-webkit-keyframes tooltipShowBottom {\n0% {\n    opacity: 0;\n    transform: translateY(20px);\n}\n100% {\n    opacity: 1;\n    transform: translateY(10px);\n}\n}\n@keyframes tooltipShowBottom {\n0% {\n    opacity: 0;\n    transform: translateY(20px);\n}\n100% {\n    opacity: 1;\n    transform: translateY(10px);\n}\n}\n.tooltip-wrap {\n  display: block;\n  position: absolute;\n  text-align: center;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  pointer-events: none;\n  transition: none;\n  border: none;\n  border-radius: 6px;\n  max-width: 500px;\n  margin: 0;\n  padding: 0.5em 1em;\n  font-size: 80%;\n  line-height: 1.2em;\n  color: #a9b8cb;\n  background-color: #405168;\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.4);\n  left: 0;\n  top: 0;\n  z-index: 10009;\n}\n.tooltip-wrap.tooltip-left {\n  -webkit-animation: tooltipShowLeft 300ms cubic-bezier(0.64, -0.28, 0.05, 1.405) forwards;\n          animation: tooltipShowLeft 300ms cubic-bezier(0.64, -0.28, 0.05, 1.405) forwards;\n}\n.tooltip-wrap.tooltip-right {\n  -webkit-animation: tooltipShowRight 300ms cubic-bezier(0.64, -0.28, 0.05, 1.405) forwards;\n          animation: tooltipShowRight 300ms cubic-bezier(0.64, -0.28, 0.05, 1.405) forwards;\n}\n.tooltip-wrap.tooltip-top {\n  -webkit-animation: tooltipShowTop 300ms cubic-bezier(0.64, -0.28, 0.05, 1.405) forwards;\n          animation: tooltipShowTop 300ms cubic-bezier(0.64, -0.28, 0.05, 1.405) forwards;\n}\n.tooltip-wrap.tooltip-bottom {\n  -webkit-animation: tooltipShowBottom 300ms cubic-bezier(0.64, -0.28, 0.05, 1.405) forwards;\n          animation: tooltipShowBottom 300ms cubic-bezier(0.64, -0.28, 0.05, 1.405) forwards;\n}\n.tooltip-wrap:after {\n  content: \" \";\n  position: absolute;\n  height: 0;\n  width: 0;\n  pointer-events: none;\n  transition: none;\n  border: solid transparent;\n  border-color: transparent;\n  border-width: 5px;\n}\n.tooltip-wrap.tooltip-left:after {\n  left: 100%;\n  top: 50%;\n  border-left-color: #405168;\n  margin-top: -5px;\n}\n.tooltip-wrap.tooltip-right:after {\n  right: 100%;\n  top: 50%;\n  border-right-color: #405168;\n  margin-top: -5px;\n}\n.tooltip-wrap.tooltip-top:after {\n  top: 100%;\n  left: 50%;\n  border-top-color: #405168;\n  margin-left: -5px;\n}\n.tooltip-wrap.tooltip-bottom:after {\n  bottom: 100%;\n  left: 50%;\n  border-bottom-color: #405168;\n  margin-left: -5px;\n}\n\n/**\n * Radial gradient background image colors\n */\n.bg-document-image {\n  background-color: #192029 !important;\n  background-image: radial-gradient(circle, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.1) 100%) !important;\n  background-position: center center !important;\n  background-repeat: no-repeat !important;\n  color: #babbbc !important;\n}\n.bg-default-image {\n  background-color: lightgray !important;\n  background-image: radial-gradient(circle, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.1) 100%) !important;\n  background-position: center center !important;\n  background-repeat: no-repeat !important;\n  color: #6d6d6d !important;\n}\n.bg-gain-image {\n  background-color: #7ba428 !important;\n  background-image: radial-gradient(circle, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.1) 100%) !important;\n  background-position: center center !important;\n  background-repeat: no-repeat !important;\n  color: black !important;\n}\n.bg-loss-image {\n  background-color: #d92626 !important;\n  background-image: radial-gradient(circle, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.1) 100%) !important;\n  background-position: center center !important;\n  background-repeat: no-repeat !important;\n  color: #2b0808 !important;\n}\n.bg-primary-image {\n  background-color: #f2a10d !important;\n  background-image: radial-gradient(circle, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.1) 100%) !important;\n  background-position: center center !important;\n  background-repeat: no-repeat !important;\n  color: #302003 !important;\n}\n.bg-secondary-image {\n  background-color: steelblue !important;\n  background-image: radial-gradient(circle, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.1) 100%) !important;\n  background-position: center center !important;\n  background-repeat: no-repeat !important;\n  color: #0d1821 !important;\n}\n.bg-success-image {\n  background-color: #68852c !important;\n  background-image: radial-gradient(circle, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.1) 100%) !important;\n  background-position: center center !important;\n  background-repeat: no-repeat !important;\n  color: #d4e5b1 !important;\n}\n.bg-warning-image {\n  background-color: #d99a26 !important;\n  background-image: radial-gradient(circle, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.1) 100%) !important;\n  background-position: center center !important;\n  background-repeat: no-repeat !important;\n  color: #f7ebd4 !important;\n}\n.bg-danger-image {\n  background-color: #a72d2d !important;\n  background-image: radial-gradient(circle, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.1) 100%) !important;\n  background-position: center center !important;\n  background-repeat: no-repeat !important;\n  color: #ebb5b5 !important;\n}\n.bg-info-image {\n  background-color: #4e5a65 !important;\n  background-image: radial-gradient(circle, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.1) 100%) !important;\n  background-position: center center !important;\n  background-repeat: no-repeat !important;\n  color: #c6cdd3 !important;\n}\n.bg-grey-image {\n  background-color: lightslategray !important;\n  background-image: radial-gradient(circle, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.1) 100%) !important;\n  background-position: center center !important;\n  background-repeat: no-repeat !important;\n  color: #eceef0 !important;\n}\n.bg-bright-image {\n  background-color: aliceblue !important;\n  background-image: radial-gradient(circle, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.1) 100%) !important;\n  background-position: center center !important;\n  background-repeat: no-repeat !important;\n  color: #2499ff !important;\n}\n\n/**\n * Solid background colors\n */\n.bg-document {\n  background-color: #192029 !important;\n  color: #babbbc !important;\n}\n.bg-default {\n  background-color: lightgray !important;\n  color: #6d6d6d !important;\n}\n.bg-gain {\n  background-color: #7ba428 !important;\n  color: black !important;\n}\n.bg-loss {\n  background-color: #d92626 !important;\n  color: #2b0808 !important;\n}\n.bg-grey {\n  background-color: lightslategray !important;\n  color: #eceef0 !important;\n}\n.bg-bright {\n  background-color: aliceblue !important;\n  color: #2499ff !important;\n}\n\n/**\n * Solid background colors with hover/active state\n */\n.bg-document-hover {\n  background-color: #192029 !important;\n  color: #babbbc !important;\n}\n.bg-document-hover:hover {\n  background-color: #0f1419 !important;\n  color: #aeaeae !important;\n}\n.bg-default-hover {\n  background-color: lightgray !important;\n  color: #6d6d6d !important;\n}\n.bg-default-hover:hover {\n  background-color: #c6c6c6 !important;\n  color: #606060 !important;\n}\n.bg-gain-hover {\n  background-color: #7ba428 !important;\n  color: black !important;\n}\n.bg-gain-hover:hover {\n  background-color: #6c9023 !important;\n  color: black !important;\n}\n.bg-loss-hover {\n  background-color: #d92626 !important;\n  color: #2b0808 !important;\n}\n.bg-loss-hover:hover {\n  background-color: #c32222 !important;\n  color: #140505 !important;\n}\n.bg-primary-hover {\n  background-color: #f2a10d !important;\n  color: #302003 !important;\n}\n.bg-primary-hover:hover {\n  background-color: #da910b !important;\n  color: #171003 !important;\n}\n.bg-secondary-hover {\n  background-color: steelblue !important;\n  color: #0d1821 !important;\n}\n.bg-secondary-hover:hover {\n  background-color: #3f75a2 !important;\n  color: #070b0e !important;\n}\n.bg-success-hover {\n  background-color: #68852c !important;\n  color: #d4e5b1 !important;\n}\n.bg-success-hover:hover {\n  background-color: #597226 !important;\n  color: #c8d9a4 !important;\n}\n.bg-warning-hover {\n  background-color: #d99a26 !important;\n  color: #f7ebd4 !important;\n}\n.bg-warning-hover:hover {\n  background-color: #c38a22 !important;\n  color: #f0e0c2 !important;\n}\n.bg-danger-hover {\n  background-color: #a72d2d !important;\n  color: #ebb5b5 !important;\n}\n.bg-danger-hover:hover {\n  background-color: #932727 !important;\n  color: #e0a7a7 !important;\n}\n.bg-info-hover {\n  background-color: #4e5a65 !important;\n  color: #c6cdd3 !important;\n}\n.bg-info-hover:hover {\n  background-color: #434d57 !important;\n  color: #bec0c1 !important;\n}\n.bg-grey-hover {\n  background-color: lightslategray !important;\n  color: #eceef0 !important;\n}\n.bg-grey-hover:hover {\n  background-color: #6a7b8d !important;\n  color: #e0e1e3 !important;\n}\n.bg-bright-hover {\n  background-color: aliceblue !important;\n  color: #2499ff !important;\n}\n.bg-bright-hover:hover {\n  background-color: #d7ecff !important;\n  color: #178cf3 !important;\n}\n\n/**\n * Solid border colors\n */\n.border-document {\n  border-color: #192029 !important;\n}\n.border-default {\n  border-color: lightgray !important;\n}\n.border-gain {\n  border-color: #7ba428 !important;\n}\n.border-loss {\n  border-color: #d92626 !important;\n}\n.border-grey {\n  border-color: lightslategray !important;\n}\n.border-bright {\n  border-color: aliceblue !important;\n}\n\n/**\n * Solid border colors with hover/active state\n */\n.border-document-hover {\n  border-color: #192029 !important;\n}\n.border-document-hover:hover {\n  border-color: #0b0c0e !important;\n}\n.border-default-hover {\n  border-color: lightgray !important;\n}\n.border-default-hover:hover {\n  border-color: #bfbfbf !important;\n}\n.border-gain-hover {\n  border-color: #7ba428 !important;\n}\n.border-gain-hover:hover {\n  border-color: #607b28 !important;\n}\n.border-loss-hover {\n  border-color: #d92626 !important;\n}\n.border-loss-hover:hover {\n  border-color: #ab2b2b !important;\n}\n.border-primary-hover {\n  border-color: #f2a10d !important;\n}\n.border-primary-hover:hover {\n  border-color: #c18415 !important;\n}\n.border-secondary-hover {\n  border-color: steelblue !important;\n}\n.border-secondary-hover:hover {\n  border-color: #456c8c !important;\n}\n.border-success-hover {\n  border-color: #68852c !important;\n}\n.border-success-hover:hover {\n  border-color: #4e6029 !important;\n}\n.border-warning-hover {\n  border-color: #d99a26 !important;\n}\n.border-warning-hover:hover {\n  border-color: #ab7e2b !important;\n}\n.border-danger-hover {\n  border-color: #a72d2d !important;\n}\n.border-danger-hover:hover {\n  border-color: #7f2d2d !important;\n}\n.border-info-hover {\n  border-color: #4e5a65 !important;\n}\n.border-info-hover:hover {\n  border-color: #444547 !important;\n}\n.border-grey-hover {\n  border-color: lightslategray !important;\n}\n.border-grey-hover:hover {\n  border-color: #6f7479 !important;\n}\n.border-bright-hover {\n  border-color: aliceblue !important;\n}\n.border-bright-hover:hover {\n  border-color: #cae5fc !important;\n}\n\n/**\n * Solid text colors\n */\n.text-document {\n  color: #232c39 !important;\n}\n.text-default {\n  color: #e0e0e0 !important;\n}\n.text-gain {\n  color: #8bb92d !important;\n}\n.text-loss {\n  color: #dd3c3c !important;\n}\n.text-grey {\n  color: #8695a4 !important;\n}\n.text-bright {\n  color: white !important;\n}\n\n/**\n * Solid text colors with hover/active state\n */\n.text-document-hover {\n  color: #232c39 !important;\n}\n.text-document-hover:hover {\n  color: #0a0c10 !important;\n}\n.text-default-hover {\n  color: #e0e0e0 !important;\n}\n.text-default-hover:hover {\n  color: #bfbfbf !important;\n}\n.text-gain-hover {\n  color: #8bb92d !important;\n}\n.text-gain-hover:hover {\n  color: #638320 !important;\n}\n.text-loss-hover {\n  color: #dd3c3c !important;\n}\n.text-loss-hover:hover {\n  color: #b62020 !important;\n}\n.text-primary-hover {\n  color: #f4ab25 !important;\n}\n.text-primary-hover:hover {\n  color: #cb870b !important;\n}\n.text-secondary-hover {\n  color: #568ebd !important;\n}\n.text-secondary-hover:hover {\n  color: #3b6d97 !important;\n}\n.text-success-hover {\n  color: #779832 !important;\n}\n.text-success-hover:hover {\n  color: #506622 !important;\n}\n.text-warning-hover {\n  color: #dda43c !important;\n}\n.text-warning-hover:hover {\n  color: #b68120 !important;\n}\n.text-danger-hover {\n  color: #bc3232 !important;\n}\n.text-danger-hover:hover {\n  color: #872424 !important;\n}\n.text-info-hover {\n  color: #5a6773 !important;\n}\n.text-info-hover:hover {\n  color: #3d454e !important;\n}\n.text-grey-hover {\n  color: #8695a4 !important;\n}\n.text-grey-hover:hover {\n  color: #637484 !important;\n}\n.text-bright-hover {\n  color: white !important;\n}\n.text-bright-hover:hover {\n  color: #c7e5ff !important;\n}", "",{"version":3,"sources":["webpack://./src/market/components/App.vue","webpack://./src/market/scss/reset.scss","webpack://./src/market/scss/common.scss","webpack://./src/market/scss/variables.scss","webpack://./src/market/scss/animations.scss","webpack://./src/market/scss/flexbox.scss","webpack://./src/market/scss/emoji.scss","webpack://./src/market/scss/type.scss","webpack://./src/market/scss/mixins.scss","webpack://./src/market/scss/forms.scss","webpack://./src/market/scss/prompt.scss","webpack://./src/market/scss/tooltip.scss","webpack://./src/market/scss/modifiers.scss"],"names":[],"mappings":"AAAA,gBAAgB;ACAhB;;EAAA;AAIA;EACE,SAAA;EACA,UAAA;EACA,SAAA;EACA,aAAA;EACA,6BAAA;EACA,oBAAA;EACA,iBAAA;EACA,gBAAA;EACA,sBAAA;EACA,wBAAA;KAAA,qBAAA;UAAA,gBAAA;EACA,iCAAA;EACA,mCAAA;EACA,kCAAA;EACA,qBAAA;EACA,sOACE;ADAJ;ACMA;EACI,8BAAA;ADHJ;ACMA;AACI;IACI,8BAAA;ADHN;AACF;AE5BA;EACE,eAAA;AF8BF;AE1BA;EACE,aAAA;AF6BF;AEzBA;EACE,oBAAA;EACA,YAAA;AF4BF;AExBA;EACE,oBAAA;EACA,UAAA;AF2BF;AEvBA;EACE,UAAA;AF0BF;AEtBA;EACE,qDAAA;AFyBF;AEpBE;EAAS,qBC6CC;AHrBZ;AEvBE;EAAW,sBC4CD;AHlBZ;AEzBE;EAAS,oBC2CC;AHfZ;AEzBE;EAAe,cCQL;AHoBZ;AE3BE;EAAiB,eCOP;AHuBZ;AE7BE;EAAe,aCML;AH0BZ;AE7BE;EAAe,cCOL;AHyBZ;AE/BE;EAAiB,eCMP;AH4BZ;AEjCE;EAAe,aCKL;AH+BZ;AEjCE;EAAW,kBAAA;AFoCb;AEnCE;EAAW,kBAAA;AFsCb;AElCA;EACE,kBAAA;EACA,oBAAA;EACA,uGAAA;EACA,kBCzCS;AH8EX;AEjCA;EACE,gBAAA;EACA,mBAAA;EACA,uBAAA;EACA,iBAAA;EACA,kBAAA;EACA,gBAAA;AFoCF;AEhCA;EACE,kBAAA;AFmCF;AEjCE;EACE,kBAAA;EACA,sBAAA;EACA,WAAA;EACA,qCAAA;EACA,WAAA;AFmCJ;AE/BI;EAEE,SAAA;EACA,wBAAA;EAAA,gBAAA;AFgCN;AE3BI;EACE,qCAAA;EACA,yCCEO;AH2Bb;AEvBA;EACE,kBAAA;AF0BF;AExBE;EACE,mBAAA;EACA,kBAAA;EACA,qCAAA;EACA,kBC1FO;AHoHX;AExBI;EACE,2CAAA;AF0BN;AEpBA;EACE,kBAAA;EACA,gBAAA;AFuBF;AErBE;EACE,YAAA;AFuBJ;AErBE;EACE,gBAAA;EACA,gBAAA;EACA,iBAAA;EACA,+CAAA;EACA,kDAAA;AFuBJ;AErBI;EACE,oBAAA;EACA,kCAAA;EACA,mBAAA;AFuBN;AErBM;EACE,eC1HI;AHiJZ;AErBM;EACE,oCAAA;AFuBR;AErBM;EACE,oCAAA;EACA,cCxFO;AH+Gf;AEhBI;EAAmB,SADf;EACyB,UADzB;AFqBR;AEpBI;EAAmB,SADf;EACyB,UADzB;AFyBR;AExBI;EAAmB,SADf;EACyB,UADzB;AF6BR;AE5BI;EAAmB,SADf;EACyB,UADzB;AFiCR;AEhCI;EAAmB,SADf;EACyB,UADzB;AFqCR;AEpCI;EAAmB,SADf;EACyB,UADzB;AFyCR;AExCI;EAAmB,SADf;EACyB,UADzB;AF6CR;AE5CI;EAAmB,SADf;EACyB,UADzB;AFiDR;AEhDI;EAAmB,SADf;EACyB,UADzB;AFqDR;AEpDI;EAAmB,UADf;EACyB,WADzB;AFyDR;AEnDA;EACE,cAAA;EACA,gBAAA;EACA,WAAA;EACA,yCAAA;EACA,kBC/IS;AHqMX;AEpDE;EACE,cAAA;EACA,WAAA;EACA,kBCpJO;AH0MX;AEjDA;EACE,cAAA;EACA,gBAAA;EACA,gCC9FU;ED+FV,kBAAA;EACA,iBAAA;EACA,oBAAA;EACA,cChJc;AHoMhB;AEhDA;EACE,kBAAA;AFmDF;AEjDE;EACE,WAAA;EACA,cAAA;EACA,kBAAA;EACA,oBAAA;EACA,aAAA;EACA,MAAA;EACA,UAAA;EACA,WAAA;EACA,yBAAA;EACA,kBAAA;EACA,wCAAA;EACA,+CAAA;UAAA,uCAAA;EACA,WAAA;AFmDJ;AE/CA;EACE,kBAAA;AFkDF;AEhDE;EACE,gBAAA;EACA,yBAAA;EACA,8BAAA;EACA,cAAA;EACA,kBAAA;EACA,oBAAA;EACA,eAAA;EACA,aAAA;EACA,WAAA;EACA,yCAAA;EACA,+CAAA;UAAA,uCAAA;EACA,WAAA;AFkDJ;AE7CA;EACE,+CAAA;AFgDF;AE9CA;EACE,iDAAA;AFiDF;AE/CA;EACE,kDAAA;AFkDF;AEhDA;EACE,gDAAA;AFmDF;AE/CA;EACE,aAAA;AFkDF;AEjDE;AAFF;IAGI,gBAAA;AFoDF;AACF;AElDA;EACE,aAAA;AFqDF;AEpDE;AAFF;IAGI,gBAAA;AFuDF;AACF;AErDA;EACE,aAAA;AFwDF;AEvDE;AAFF;IAGI,gBAAA;AF0DF;AACF;AIrTA;EACE,kBAAA;EACA,mCAAA;UAAA,2BAAA;EACA,iCDiGQ;UCjGR,yBDiGQ;EChGR,sEDiGO;UCjGP,8DDiGO;EChGP,oCAAA;UAAA,4BAAA;EACA,qCAAA;UAAA,6BAAA;AJwTF;AIpTA;EACE,2BAAA;AJuTF;AInTA;EACE,gCAAA;AJsTF;AIjTE;EACE,sDAAA;UAAA,8CAAA;AJoTJ;AIrTE;EACE,sDAAA;UAAA,8CAAA;AJwTJ;AIzTE;EACE,sDAAA;UAAA,8CAAA;AJ4TJ;AI7TE;EACE,sDAAA;UAAA,8CAAA;AJgUJ;AIjUE;EACE,sDAAA;UAAA,8CAAA;AJoUJ;AIrUE;EACE,sDAAA;UAAA,8CAAA;AJwUJ;AIzUE;EACE,sDAAA;UAAA,8CAAA;AJ4UJ;AI7UE;EACE,sDAAA;UAAA,8CAAA;AJgVJ;AI3UA;AACI;IAAK,uBAAA;AJ+UP;AI9UA;IAAO,yBAAA;AJiVP;AACF;AIpVA;AACI;IAAK,uBAAA;AJ+UP;AI9UA;IAAO,yBAAA;AJiVP;AACF;AIhVA;EACE,iCAAA;UAAA,yBAAA;EACA,8BAAA;UAAA,sBAAA;EACA,yCAAA;UAAA,iCAAA;EACA,2CAAA;UAAA,mCAAA;AJkVF;AI9UA;AACI;IAAK,yBAAA;AJkVP;AIjVA;IAAO,uBAAA;AJoVP;AACF;AIvVA;AACI;IAAK,yBAAA;AJkVP;AIjVA;IAAO,uBAAA;AJoVP;AACF;AInVA;EACE,gCAAA;UAAA,wBAAA;EACA,8BAAA;UAAA,sBAAA;EACA,yCAAA;UAAA,iCAAA;EACA,2CAAA;UAAA,mCAAA;AJqVF;AIjVA;AACI;IAAK,UAAA;AJqVP;AIpVA;IAAO,UAAA;AJuVP;AACF;AI1VA;AACI;IAAK,UAAA;AJqVP;AIpVA;IAAO,UAAA;AJuVP;AACF;AItVA;EACE,UAAA;EACA,8BAAA;UAAA,sBAAA;AJwVF;AIpVA;AACI;IAAK,UAAA;AJwVP;AIvVA;IAAO,UAAA;AJ0VP;AACF;AI7VA;AACI;IAAK,UAAA;AJwVP;AIvVA;IAAO,UAAA;AJ0VP;AACF;AIzVA;EACE,UAAA;EACA,+BAAA;UAAA,uBAAA;AJ2VF;AIvVA;AACI;IAAK,UAAA;IAAY,qBAAA;AJ4VnB;AI3VA;IAAO,UAAA;IAAY,mBAAA;AJ+VnB;AACF;AIlWA;AACI;IAAK,UAAA;IAAY,qBAAA;AJ4VnB;AI3VA;IAAO,UAAA;IAAY,mBAAA;AJ+VnB;AACF;AI9VA;EACE,UAAA;EACA,qBAAA;EACA,8BAAA;UAAA,sBAAA;AJgWF;AI5VA;AACI;IAAK,UAAA;IAAY,qBAAA;AJiWnB;AIhWA;IAAO,UAAA;IAAY,mBAAA;AJoWnB;AACF;AIvWA;AACI;IAAK,UAAA;IAAY,qBAAA;AJiWnB;AIhWA;IAAO,UAAA;IAAY,mBAAA;AJoWnB;AACF;AInWA;EACE,UAAA;EACA,qBAAA;EACA,8BAAA;UAAA,sBAAA;AJqWF;AIjWA;AACI;IAAK,UAAA;IAAY,mBAAA;AJsWnB;AIrWA;IAAO,UAAA;IAAY,qBAAA;AJyWnB;AACF;AI5WA;AACI;IAAK,UAAA;IAAY,mBAAA;AJsWnB;AIrWA;IAAO,UAAA;IAAY,qBAAA;AJyWnB;AACF;AIxWA;EACE,UAAA;EACA,mBAAA;EACA,+BAAA;UAAA,uBAAA;AJ0WF;AItWA;AACI;IAAK,UAAA;IAAY,2BAAA;AJ2WnB;AI1WA;IAAO,UAAA;IAAY,wBAAA;AJ8WnB;AACF;AIjXA;AACI;IAAK,UAAA;IAAY,2BAAA;AJ2WnB;AI1WA;IAAO,UAAA;IAAY,wBAAA;AJ8WnB;AACF;AI7WA;EACE,UAAA;EACA,2BAAA;EACA,iCAAA;UAAA,yBAAA;AJ+WF;AI3WA;AACI;IAAK,UAAA;IAAY,oCAAA;AJgXnB;AI/WA;IAAO,UAAA;IAAY,wBAAA;AJmXnB;AACF;AItXA;AACI;IAAK,UAAA;IAAY,oCAAA;AJgXnB;AI/WA;IAAO,UAAA;IAAY,wBAAA;AJmXnB;AACF;AIlXA;EACE,UAAA;EACA,oCAAA;EACA,kCAAA;UAAA,0BAAA;AJoXF;AIhXA;AACI;IAAK,UAAA;IAAY,2BAAA;AJqXnB;AIpXA;IAAO,UAAA;IAAY,wBAAA;AJwXnB;AACF;AI3XA;AACI;IAAK,UAAA;IAAY,2BAAA;AJqXnB;AIpXA;IAAO,UAAA;IAAY,wBAAA;AJwXnB;AACF;AIvXA;EACE,UAAA;EACA,2BAAA;EACA,+BAAA;UAAA,uBAAA;AJyXF;AIrXA;AACI;IAAK,UAAA;IAAY,oCAAA;AJ0XnB;AIzXA;IAAO,UAAA;IAAY,wBAAA;AJ6XnB;AACF;AIhYA;AACI;IAAK,UAAA;IAAY,oCAAA;AJ0XnB;AIzXA;IAAO,UAAA;IAAY,wBAAA;AJ6XnB;AACF;AI5XA;EACE,UAAA;EACA,oCAAA;EACA,iCAAA;UAAA,yBAAA;AJ8XF;AI1XA;AACI;IAAK,YAAA;AJ8XP;AI7XC;IAAM,UAAA;AJgYP;AI/XA;IAAO,YAAA;AJkYP;AACF;AItYA;AACI;IAAK,YAAA;AJ8XP;AI7XC;IAAM,UAAA;AJgYP;AI/XA;IAAO,YAAA;AJkYP;AACF;AIjYA;EACE,YAAA;EACA,iCAAA;UAAA,yBAAA;EACA,8BAAA;UAAA,sBAAA;EACA,yCAAA;UAAA,iCAAA;EACA,2CAAA;UAAA,mCAAA;AJmYF;;AKliBA;;EAAA;AAGA;EACE,aAAA;EACA,sBAAA;EACA,iBAAA;ALqiBF;;AKliBA;;EAAA;AAGA;EACE,aAAA;EACA,mBAAA;EACA,iBAAA;ALqiBF;;AKliBA;;EAAA;AAGC;EACC,eAAA;ALqiBF;AKniBA;EACE,2BAAA;ALsiBF;AKpiBA;EACE,uBAAA;ALuiBF;AKriBA;EACE,yBAAA;ALwiBF;AKtiBA;EACE,8BAAA;ALyiBF;AKviBA;EACE,6BAAA;AL0iBF;AKxiBA;EACE,uBAAA;AL2iBF;AKziBA;EACE,mBAAA;AL4iBF;AK1iBA;EACE,qBAAA;AL6iBF;;AK1iBA;;EAAA;AAGA;EACE,UAAA;AL6iBF;AK3iBA;EACE,OAAA;AL8iBF;AK5iBA;EACE,OAAA;AL+iBF;AK7iBA;EACE,OAAA;ALgjBF;AK9iBA;EACE,OAAA;ALijBF;AK/iBA;EACE,OAAA;ALkjBF;AK7iBE;EAAc,SADV;EACoB,UADpB;ALmjBN;AKljBE;EAAc,SADV;EACoB,UADpB;ALwjBN;AKvjBE;EAAc,SADV;EACoB,UADpB;AL6jBN;AK5jBE;EAAc,SADV;EACoB,UADpB;ALkkBN;AKjkBE;EAAc,SADV;EACoB,UADpB;ALukBN;AKtkBE;EAAc,SADV;EACoB,UADpB;AL4kBN;AK3kBE;EAAc,SADV;EACoB,UADpB;ALilBN;AKhlBE;EAAc,SADV;EACoB,UADpB;ALslBN;AKrlBE;EAAc,SADV;EACoB,UADpB;AL2lBN;AK1lBE;EAAc,UADV;EACoB,WADpB;ALgmBN;;AK5lBA;;EAAA;AAGA;EACE,YAAA;EACA,mBAAA;EACA,uBAAA;EACA,gBAAA;AL+lBF;;AK5lBA;;EAAA;AAGA;EACE,cAAA;EACA,kBAAA;AL+lBF;AK7lBE;EAEE,aAAA;EACA,mBAAA;EACA,iBAAA;EACA,mBAAA;EACA,wBAAA;EACA,iBAAA;EACA,cAAA;EACA,kBFpFO;EEqFP,oCAAA;AL8lBJ;AK5lBE;EACE,oCAAA;AL8lBJ;;AK1lBA;;EAAA;AAGA;EACE,aAAA;EACA,aF3GS;EE4GT,4DAAA;AL6lBF;AK3lBE;EACE,4DAAA;AL6lBJ;AK3lBE;EACE,4DAAA;AL6lBJ;AK3lBE;EACE,4DAAA;AL6lBJ;;AM1tBA;;EAAA;AAGA;;EAEE,qBAAA;EACA,SAAA;EACA,UAAA;EACA,UAAA;EACA,gBAAA;EACA,wBAAA;EACA,kBAAA;EACA,mBAAA;EACA,oBAAA;EACA,kBAAA;EACA,qBAAA;EACA,oBAAA;EACA,iBAAA;EACA,mBAAA;EACA,aAAA;EACA,gBAAA;EACA,sBAAA;AN6tBF;AMztBA;EACE,mBAAA;AN4tBF;AMxtBA;EAAgB,aAAA;AN4tBhB;AM3tBA;EAAiB,aAAA;AN+tBjB;AM9tBA;EAAoB,aAAA;ANkuBpB;AMjuBA;EAAiB,aAAA;ANquBjB;AMpuBA;EAAoB,aAAA;ANwuBpB;AMvuBA;EAAoB,aAAA;AN2uBpB;AM1uBA;EAAqB,aAAA;AN8uBrB;AM7uBA;EAAkB,aAAA;ANivBlB;AMhvBA;EAAiB,aAAA;ANovBjB;AMnvBA;EAAiB,aAAA;ANuvBjB;AMtvBA;EAAkB,aAAA;AN0vBlB;AMzvBA;EAAgB,aAAA;AN6vBhB;AM5vBA;EAAiB,aAAA;ANgwBjB;AM/vBA;EAAiB,aAAA;ANmwBjB;AMlwBA;EAAkB,aAAA;ANswBlB;AMrwBA;EAAiB,aAAA;ANywBjB;AMxwBA;EAAiB,aAAA;AN4wBjB;AM3wBA;EAAe,YAAA;AN+wBf;AM9wBA;EAAiB,YAAA;ANkxBjB;AMjxBA;EAAkB,aAAA;ANqxBlB;AMpxBA;EAAiB,YAAA;ANwxBjB;AMvxBA;EAAiB,aAAA;AN2xBjB;AM1xBA;EAAgB,aAAA;AN8xBhB;AM7xBA;EAAkB,aAAA;ANiyBlB;AMhyBA;EAAiB,aAAA;ANoyBjB;AMnyBA;EAAkB,aAAA;ANuyBlB;AMtyBA;EAAkB,YAAA;AN0yBlB;AMzyBA;EAAkB,aAAA;AN6yBlB;AM5yBA;EAAkB,aAAA;ANgzBlB;AM/yBA;EAAmB,aAAA;ANmzBnB;AMlzBA;EAAmB,aAAA;ANszBnB;AMrzBA;EAAiB,aAAA;ANyzBjB;AMxzBA;EAAiB,aAAA;AN4zBjB;AM3zBA;EAAgB,aAAA;AN+zBhB;AM9zBA;EAAkB,aAAA;ANk0BlB;AMj0BA;EAAkB,aAAA;ANq0BlB;AMp0BA;EAAoB,aAAA;ANw0BpB;AMv0BA;EAAiB,aAAA;AN20BjB;AM10BA;EAAiB,aAAA;AN80BjB;AM70BA;EAAkB,aAAA;ANi1BlB;AMh1BA;EAAgB,aAAA;ANo1BhB;AMn1BA;EAAmB,aAAA;ANu1BnB;AMt1BA;EAAkB,aAAA;AN01BlB;AMz1BA;EAAuB,aAAA;AN61BvB;AM51BA;EAAoB,aAAA;ANg2BpB;AM/1BA;EAAiB,aAAA;ANm2BjB;AMl2BA;EAAqB,aAAA;ANs2BrB;AMr2BA;EAAgB,aAAA;ANy2BhB;AMx2BA;EAAkB,aAAA;AN42BlB;AM32BA;EAAiB,aAAA;AN+2BjB;AM92BA;EAAkB,aAAA;ANk3BlB;AMj3BA;EAAkB,aAAA;ANq3BlB;AMp3BA;EAAgB,aAAA;ANw3BhB;AMv3BA;EAAqB,aAAA;AN23BrB;AM13BA;EAAmB,aAAA;AN83BnB;AM73BA;EAAmB,aAAA;ANi4BnB;AMh4BA;EAAiB,aAAA;ANo4BjB;AOz9BA;EACI,qBAAA;EACA,gBJiFU;EIhFV,UAAA;AP49BJ;AO19BI;EACE,YAAA;AP49BN;AOx9BA;EACE,qBAAA;EACA,gBAAA;EACA,cAAA;EACA,oCAAA;EACA,oBAAA;AP29BF;AOv9BA;EACE,qBAAA;EACA,cAAA;EACA,yBAAA;EACA,kBAAA;EACA,4BAAA;EACA,8EAAA;EACA,cJkBiB;EIjBjB,oBAAA;EACA,wCJiEY;AHy5Bd;AOt9BA;EACE,qBAAA;EACA,gBAAA;EACA,kBAAA;EACA,cAAA;EACA,yBAAA;EACA,mBAAA;EACA,gBAAA;EACA,gBAAA;EACA,8EAAA;EACA,cJEiB;EIDjB,kBAAA;EACA,wCJiDY;AHw6Bd;AOr9BA;EACE,yFJpBW;EIqBX,eJxBS;EIyBT,kBAAA;EACA,mBAAA;EACA,kBAAA;EACA,oBAAA;APw9BF;AOt9BA;EACE,wCJ3BU;EI4BV,iBAAA;EACA,sBAAA;APy9BF;AOv9BA;EACE,gBAAA;AP09BF;AOx9BA;EACE,kBAAA;AP29BF;AOz9BA;EACE,mBAAA;AP49BF;AO19BA;EACE,mBAAA;AP69BF;AO39BA;EACE,sBAAA;AP89BF;AO59BA;EACE,sBAAA;AP+9BF;AO79BA;EACE,wBAAA;APg+BF;AO99BA;EACE,yBAAA;APi+BF;AO/9BA;EACE,yBAAA;APk+BF;AOh+BA;EACE,0BAAA;APm+BF;AOj+BA;EACE,0BAAA;APo+BF;AOl+BA;EACE,6BAAA;APq+BF;AOn+BA;EACE,kBAAA;APs+BF;AOp+BA;EACE,iBAAA;APu+BF;AOr+BA;EC3FE,yBAAA;EACA,qBAAA;EACA,yBAAA;EACA,sBAAA;EACA,iBAAA;EAEA,qBAAA;EACA,aAAA;ARokCF;AO7+BA;EClFE,mBAAA;ARmkCF;AO9+BA;EChFE,gBAAA;EACA,uBAAA;EACA,mBAAA;ARkkCF;AOj/BA;EC9GE,2BAAA;EAA6B,eAAA;EAC7B,yBAAA;EAA2B,WAAA;EACD,mBAAA;EAC1B,sBAAA;EAAwB,YAAA;EACxB,qBAAA;EAAuB,2BAAA;EACvB,iBAAA;ARwmCF;AO5/BA;EACE,gBAAA;EACA,cAAA;AP+/BF;AO7/BA;EACE,YAAA;APggCF;AO9/BA;EACE,eAAA;APigCF;AO//BA;EACE,eAAA;APkgCF;AOhgCA;EACE,eAAA;APmgCF;AOjgCA;EACE,cAAA;APogCF;AOlgCA;EACE,cAAA;APqgCF;AOngCA;EACE,cAAA;APsgCF;AOpgCA;EACE,gBAAA;APugCF;AOrgCA;EACE,aAAA;EACA,cAAA;EACA,mBAAA;EACA,mBAAA;EACA,yBAAA;EACA,kBAAA;EACA,gBJnEY;EIoEZ,YAAA;APwgCF;AS9pCE;EACE,yBAAA;ATiqCJ;AS5pCA;;;;;;;;EAQE,eAAA;AT+pCF;ASroCA;EACE,WAAA;ATwoCF;AStoCE;EAxBA,cAAA;EACA,WAAA;EACA,WAAA;EACA,mBNUc;EMTd,6BAAA;EACA,oCAAA;EACA,6BAAA;EACA,oBAAA;ATiqCF;AS/oCE;EAzBA,cAAA;EACA,WAAA;EACA,WAAA;EACA,mBNUc;EMTd,6BAAA;EACA,oCAAA;EACA,6BAAA;EACA,oBAAA;AT2qCF;ASxpCE;EA1BA,cAAA;EACA,WAAA;EACA,WAAA;EACA,mBNUc;EMTd,6BAAA;EACA,oCAAA;EACA,6BAAA;EACA,oBAAA;ATqrCF;AShqCE;EAA0B,wBAAA;EAlB1B,cAAA;EACA,YAAA;EACA,aAAA;EACA,qBAAA;EACA,kBAAA;EACA,wCN0DY;EMzDZ,mBN2Ba;EM1Bb,6BAAA;EACA,oCAAA;EACA,oBAAA;ATsrCF;AS5qCE;EAnBA,cAAA;EACA,YAAA;EACA,aAAA;EACA,qBAAA;EACA,kBAAA;EACA,wCN0DY;EMzDZ,mBN2Ba;EM1Bb,6BAAA;EACA,oCAAA;EACA,oBAAA;ATksCF;ASvrCE;EApBA,cAAA;EACA,YAAA;EACA,aAAA;EACA,qBAAA;EACA,kBAAA;EACA,wCN0DY;EMzDZ,mBN2Ba;EM1Bb,6BAAA;EACA,oCAAA;EACA,oBAAA;AT8sCF;AS/rCA;EACE,cAAA;EACA,mBAAA;ATksCF;AShsCE;EACE,SAAA;ATksCJ;AS7rCA;EACE,cAAA;EACA,yBAAA;EACA,mBAAA;EACA,cAAA;EACA,mBAAA;EACA,cNfa;AH+sCf;AS5rCA;EACE,qBAAA;EACA,kBAAA;EACA,oBAAA;EACA,oBAAA;EACA,yBNJU;EMKV,cNJc;EMKd,wCNYY;EKrEZ,mBAAA;ARyvCF;AS7rCE;EACE,yBAAA;AT+rCJ;AS1rCA;EACE,aAAA;EACA,mBAAA;EACA,iBAAA;EACA,mBAAA;EACA,wBAAA;EACA,kBAAA;EACA,oBAAA;EACA,gBNfY;EMgBZ,yBAAA;EACA,oBAAA;EACA,+CNVa;AHusCf;AS3rCE;EACE,yBAAA;AT6rCJ;AS3rCE;EACE,yBAAA;AT6rCJ;AS3rCI;EACE,yBAAA;AT6rCN;ASzrCA;EACE,cAAA;EACA,eAAA;EACA,eAAA;EACA,gBAAA;AT4rCF;;AUnzCA;;EAAA;AAGA;EACE,aAAA;EACA,mBAAA;EACA,mBAAA;EACA,uBAAA;EACA,eAAA;EACA,gBAAA;EACA,OAAA;EACA,MAAA;EACA,WAAA;EACA,YAAA;EACA,oCP2Ea;EO1Eb,cAAA;EACA,oBAAA;EACA,UAAA;AVszCF;AUpzCE;EACE,cAAA;EACA,+BAAA;EACA,sCAAA;EACA,yBAAA;EACA,kBPNO;EOOP,yCPwES;EOvET,qBAAA;AVszCJ;AUpzCI;EACE,gBPuDQ;EOtDR,YPtBK;EOuBL,kDAAA;AVszCN;AUnzCI;EACE,YP3BK;AHg1CX;AUlzCI;EACE,cAAA;EACA,gBAAA;EACA,kBAAA;EACA,kBAAA;EACA,eAAA;EACA,SAAA;EACA,YPrCK;EOsCL,cAAA;EACA,6BAAA;EACA,gBAAA;AVozCN;AUlzCM;EACE,cPKO;AH+yCf;AUhzCI;EACE,aAAA;EACA,mBAAA;EACA,mBAAA;EACA,wBAAA;EACA,+CAAA;AVkzCN;AUhzCM;EACE,cAAA;EACA,OAAA;EACA,eAAA;EACA,cP/BY;EOgCZ,kBAAA;EACA,yBAAA;EACA,cAAA;EACA,kBAAA;EACA,SAAA;EACA,YPhEG;EOiEH,2CAAA;AVkzCR;AUhzCM;EACE,qCAAA;EACA,cP7BI;AH+0CZ;AUhzCQ;EACE,kCAAA;AVkzCV;AU/yCM;EACE,qCAAA;EACA,cPjCI;AHk1CZ;AU/yCQ;EACE,oCAAA;AVizCV;AU3yCE;EACE,oBAAA;EACA,UAAA;AV6yCJ;AU3yCI;EACE,mBAAA;AV6yCN;;AWh5CA;;EAAA;AAMA;AACI;IAAO,UAAA;IAAY,4BAAA;AXk5CrB;AWj5CE;IAAO,UAAA;IAAY,4BAAA;AXq5CrB;AACF;AWx5CA;AACI;IAAO,UAAA;IAAY,4BAAA;AXk5CrB;AWj5CE;IAAO,UAAA;IAAY,4BAAA;AXq5CrB;AACF;AWp5CA;AACI;IAAO,UAAA;IAAY,2BAAA;AXw5CrB;AWv5CE;IAAO,UAAA;IAAY,2BAAA;AX25CrB;AACF;AW95CA;AACI;IAAO,UAAA;IAAY,2BAAA;AXw5CrB;AWv5CE;IAAO,UAAA;IAAY,2BAAA;AX25CrB;AACF;AW15CA;AACI;IAAO,UAAA;IAAY,4BAAA;AX85CrB;AW75CE;IAAO,UAAA;IAAY,4BAAA;AXi6CrB;AACF;AWp6CA;AACI;IAAO,UAAA;IAAY,4BAAA;AX85CrB;AW75CE;IAAO,UAAA;IAAY,4BAAA;AXi6CrB;AACF;AWh6CA;AACI;IAAO,UAAA;IAAY,2BAAA;AXo6CrB;AWn6CE;IAAO,UAAA;IAAY,2BAAA;AXu6CrB;AACF;AW16CA;AACI;IAAO,UAAA;IAAY,2BAAA;AXo6CrB;AWn6CE;IAAO,UAAA;IAAY,2BAAA;AXu6CrB;AACF;AWt6CA;EACE,cAAA;EACA,kBAAA;EACA,kBAAA;EACA,mBAAA;EACA,uBAAA;EACA,oBAAA;EACA,gBAAA;EACA,YAAA;EACA,kBRbS;EQcT,gBAAA;EACA,SAAA;EACA,kBAAA;EACA,cAAA;EACA,kBAAA;EACA,cAjCa;EAkCb,yBAnCS;EAoCT,yCR0DW;EQzDX,OAAA;EACA,MAAA;EACA,cAAA;AXw6CF;AWt6CE;EAAiB,wFAAA;UAAA,gFAAA;AXy6CnB;AWx6CE;EAAkB,yFAAA;UAAA,iFAAA;AX26CpB;AW16CE;EAAgB,uFAAA;UAAA,+EAAA;AX66ClB;AW56CE;EAAmB,0FAAA;UAAA,kFAAA;AX+6CrB;AW76CE;EACE,YAAA;EACA,kBAAA;EACA,SAAA;EACA,QAAA;EACA,oBAAA;EACA,gBAAA;EACA,yBAAA;EACA,yBAAA;EACA,iBAAA;AX+6CJ;AW56CE;EACE,UAAA;EACA,QAAA;EACA,0BA7DO;EA8DP,gBAAA;AX86CJ;AW56CE;EACE,WAAA;EACA,QAAA;EACA,2BAnEO;EAoEP,gBAAA;AX86CJ;AW56CE;EACE,SAAA;EACA,SAAA;EACA,yBAzEO;EA0EP,iBAAA;AX86CJ;AW56CE;EACE,YAAA;EACA,SAAA;EACA,4BA/EO;EAgFP,iBAAA;AX86CJ;;AYjgDA;;EAAA;AAGA;EJ0GE,oCAAA;EACA,8GAAA;EACA,6CAAA;EACA,uCAAA;EACA,yBAAA;AR25CF;AYxgDA;EJyGE,sCAAA;EACA,8GAAA;EACA,6CAAA;EACA,uCAAA;EACA,yBAAA;ARm6CF;AY/gDA;EJwGE,oCAAA;EACA,8GAAA;EACA,6CAAA;EACA,uCAAA;EACA,uBAAA;AR26CF;AYthDA;EJuGE,oCAAA;EACA,8GAAA;EACA,6CAAA;EACA,uCAAA;EACA,yBAAA;ARm7CF;AY7hDA;EJsGE,oCAAA;EACA,8GAAA;EACA,6CAAA;EACA,uCAAA;EACA,yBAAA;AR27CF;AYpiDA;EJqGE,sCAAA;EACA,8GAAA;EACA,6CAAA;EACA,uCAAA;EACA,yBAAA;ARm8CF;AY3iDA;EJoGE,oCAAA;EACA,8GAAA;EACA,6CAAA;EACA,uCAAA;EACA,yBAAA;AR28CF;AYljDA;EJmGE,oCAAA;EACA,8GAAA;EACA,6CAAA;EACA,uCAAA;EACA,yBAAA;ARm9CF;AYzjDA;EJkGE,oCAAA;EACA,8GAAA;EACA,6CAAA;EACA,uCAAA;EACA,yBAAA;AR29CF;AYhkDA;EJiGE,oCAAA;EACA,8GAAA;EACA,6CAAA;EACA,uCAAA;EACA,yBAAA;ARm+CF;AYvkDA;EJgGE,2CAAA;EACA,8GAAA;EACA,6CAAA;EACA,uCAAA;EACA,yBAAA;AR2+CF;AY9kDA;EJ+FE,sCAAA;EACA,8GAAA;EACA,6CAAA;EACA,uCAAA;EACA,yBAAA;ARm/CF;;AYplDA;;EAAA;AAGA;EJmGE,oCAAA;EACA,yBAAA;ARq/CF;AYxlDA;EJkGE,sCAAA;EACA,yBAAA;AR0/CF;AY5lDA;EJiGE,oCAAA;EACA,uBAAA;AR+/CF;AYhmDA;EJgGE,oCAAA;EACA,yBAAA;ARogDF;AY9lDA;EJyFE,2CAAA;EACA,yBAAA;ARygDF;AYlmDA;EJwFE,sCAAA;EACA,yBAAA;AR8gDF;;AYrmDA;;EAAA;AAGA;EJmFE,oCAAA;EACA,yBAAA;ARshDF;AQphDI;EACE,oCAAA;EACA,yBAAA;ARshDN;AY7mDA;EJkFE,sCAAA;EACA,yBAAA;AR+hDF;AQ7hDI;EACE,oCAAA;EACA,yBAAA;AR+hDN;AYrnDA;EJiFE,oCAAA;EACA,uBAAA;ARwiDF;AQtiDI;EACE,oCAAA;EACA,uBAAA;ARwiDN;AY7nDA;EJgFE,oCAAA;EACA,yBAAA;ARijDF;AQ/iDI;EACE,oCAAA;EACA,yBAAA;ARijDN;AYroDA;EJ+EE,oCAAA;EACA,yBAAA;AR0jDF;AQxjDI;EACE,oCAAA;EACA,yBAAA;AR0jDN;AY7oDA;EJ8EE,sCAAA;EACA,yBAAA;ARmkDF;AQjkDI;EACE,oCAAA;EACA,yBAAA;ARmkDN;AYrpDA;EJ6EE,oCAAA;EACA,yBAAA;AR4kDF;AQ1kDI;EACE,oCAAA;EACA,yBAAA;AR4kDN;AY7pDA;EJ4EE,oCAAA;EACA,yBAAA;ARqlDF;AQnlDI;EACE,oCAAA;EACA,yBAAA;ARqlDN;AYrqDA;EJ2EE,oCAAA;EACA,yBAAA;AR8lDF;AQ5lDI;EACE,oCAAA;EACA,yBAAA;AR8lDN;AY7qDA;EJ0EE,oCAAA;EACA,yBAAA;ARumDF;AQrmDI;EACE,oCAAA;EACA,yBAAA;ARumDN;AYrrDA;EJyEE,2CAAA;EACA,yBAAA;ARgnDF;AQ9mDI;EACE,oCAAA;EACA,yBAAA;ARgnDN;AY7rDA;EJwEE,sCAAA;EACA,yBAAA;ARynDF;AQvnDI;EACE,oCAAA;EACA,yBAAA;ARynDN;;AYpsDA;;EAAA;AAGA;EJ+EE,gCAAA;ARynDF;AYvsDA;EJ8EE,kCAAA;AR6nDF;AY1sDA;EJ6EE,gCAAA;ARioDF;AY7sDA;EJ4EE,gCAAA;ARqoDF;AY1sDA;EJqEE,uCAAA;ARyoDF;AY7sDA;EJoEE,kCAAA;AR6oDF;;AY/sDA;;EAAA;AAGA;EJ+DE,gCAAA;ARopDF;AQlpDI;EACE,gCAAA;ARopDN;AYrtDA;EJ8DE,kCAAA;AR2pDF;AQzpDI;EACE,gCAAA;AR2pDN;AY3tDA;EJ6DE,gCAAA;ARkqDF;AQhqDI;EACE,gCAAA;ARkqDN;AYjuDA;EJ4DE,gCAAA;ARyqDF;AQvqDI;EACE,gCAAA;ARyqDN;AYvuDA;EJ2DE,gCAAA;ARgrDF;AQ9qDI;EACE,gCAAA;ARgrDN;AY7uDA;EJ0DE,kCAAA;ARurDF;AQrrDI;EACE,gCAAA;ARurDN;AYnvDA;EJyDE,gCAAA;AR8rDF;AQ5rDI;EACE,gCAAA;AR8rDN;AYzvDA;EJwDE,gCAAA;ARqsDF;AQnsDI;EACE,gCAAA;ARqsDN;AY/vDA;EJuDE,gCAAA;AR4sDF;AQ1sDI;EACE,gCAAA;AR4sDN;AYrwDA;EJsDE,gCAAA;ARmtDF;AQjtDI;EACE,gCAAA;ARmtDN;AY3wDA;EJqDE,uCAAA;AR0tDF;AQxtDI;EACE,gCAAA;AR0tDN;AYjxDA;EJoDE,kCAAA;ARiuDF;AQ/tDI;EACE,gCAAA;ARiuDN;;AYtxDA;;EAAA;AAGA;EJyDE,yBAAA;ARiuDF;AYzxDA;EJwDE,yBAAA;ARquDF;AY5xDA;EJuDE,yBAAA;ARyuDF;AY/xDA;EJsDE,yBAAA;AR6uDF;AY5xDA;EJ+CE,yBAAA;ARivDF;AY/xDA;EJ8CE,uBAAA;ARqvDF;;AYjyDA;;EAAA;AAGA;EJyCE,yBAAA;AR4vDF;AQ1vDI;EACE,yBAAA;AR4vDN;AYvyDA;EJwCE,yBAAA;ARmwDF;AQjwDI;EACE,yBAAA;ARmwDN;AY7yDA;EJuCE,yBAAA;AR0wDF;AQxwDI;EACE,yBAAA;AR0wDN;AYnzDA;EJsCE,yBAAA;ARixDF;AQ/wDI;EACE,yBAAA;ARixDN;AYzzDA;EJqCE,yBAAA;ARwxDF;AQtxDI;EACE,yBAAA;ARwxDN;AY/zDA;EJoCE,yBAAA;AR+xDF;AQ7xDI;EACE,yBAAA;AR+xDN;AYr0DA;EJmCE,yBAAA;ARsyDF;AQpyDI;EACE,yBAAA;ARsyDN;AY30DA;EJkCE,yBAAA;AR6yDF;AQ3yDI;EACE,yBAAA;AR6yDN;AYj1DA;EJiCE,yBAAA;ARozDF;AQlzDI;EACE,yBAAA;ARozDN;AYv1DA;EJgCE,yBAAA;AR2zDF;AQzzDI;EACE,yBAAA;AR2zDN;AY71DA;EJ+BE,yBAAA;ARk0DF;AQh0DI;EACE,yBAAA;ARk0DN;AYn2DA;EJ8BE,uBAAA;ARy0DF;AQv0DI;EACE,yBAAA;ARy0DN","sourcesContent":["@charset \"UTF-8\";\n/**\n * Global resets and documet setup.\n */\n*, *:before, *:after {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline: none;\n  background-color: transparent;\n  text-transform: none;\n  text-shadow: none;\n  box-shadow: none;\n  box-sizing: border-box;\n  appearance: none;\n  -webkit-overflow-scrolling: touch;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  transform-style: flat;\n  transition: border-color 300ms cubic-bezier(0.215, 0.61, 0.355, 1), background-color 300ms cubic-bezier(0.215, 0.61, 0.355, 1), opacity 300ms cubic-bezier(0.215, 0.61, 0.355, 1), transform 300ms cubic-bezier(0.215, 0.61, 0.355, 1);\n}\n\nhtml .navbar-sticky .app-content {\n  padding: 62px 0 0 0 !important;\n}\n\n@media (max-width: 767.98px) {\n  html body.navbar-sticky .app-content {\n    padding: 62px 0 0 0 !important;\n  }\n}\n.clickable, [clickable] {\n  cursor: pointer;\n}\n\n.hidden, [hidden] {\n  display: none;\n}\n\n.disabled, [disabled] {\n  pointer-events: none;\n  opacity: 0.5;\n}\n\n.cloaked, [cloaked], [v-cloak] {\n  pointer-events: none;\n  opacity: 0;\n}\n\n.transparent {\n  opacity: 0;\n}\n\n.bgtest {\n  background-color: rgba(255, 192, 203, 0.1) !important;\n}\n\n.app-wrap .color {\n  color: lightslategray;\n}\n.app-wrap polyline {\n  stroke: lightslategray;\n}\n.app-wrap circle {\n  fill: lightslategray;\n}\n.app-wrap .gain .color {\n  color: #7ba428;\n}\n.app-wrap .gain polyline {\n  stroke: #7ba428;\n}\n.app-wrap .gain circle {\n  fill: #7ba428;\n}\n.app-wrap .loss .color {\n  color: #d92626;\n}\n.app-wrap .loss polyline {\n  stroke: #d92626;\n}\n.app-wrap .loss circle {\n  fill: #d92626;\n}\n.app-wrap .pos-abs {\n  position: absolute;\n}\n.app-wrap .pos-rel {\n  position: relative;\n}\n\n.well {\n  position: relative;\n  padding: 0.4em 0.8em;\n  background-image: radial-gradient(ellipse at top left, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0.01) 100%);\n  border-radius: 6px;\n}\n\n.navlinks {\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  margin: 0 0 1em 0;\n  padding: 0.5em 1em;\n  line-height: 2em;\n}\n\n.page-wrap {\n  position: relative;\n}\n.page-wrap .page-topbar {\n  position: relative;\n  padding: 10px 0 10px 0;\n  width: 100%;\n  background-color: rgba(25, 32, 41, 0);\n  z-index: 99;\n}\n.page-wrap.collapsed .page-topbar {\n  top: 62px;\n  position: sticky;\n}\n.page-wrap.opaque .page-topbar {\n  background-color: rgba(0, 0, 0, 0.85);\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.4);\n}\n\n.pagelist-wrap {\n  position: relative;\n}\n.pagelist-wrap .pagelist-item {\n  margin: 0 0 0.4em 0;\n  padding: 0.6em 1em;\n  background: rgba(255, 255, 255, 0.06);\n  border-radius: 6px;\n}\n.pagelist-wrap .pagelist-item:hover {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n\n.tablelist-wrap {\n  position: relative;\n  min-width: 300px;\n}\n.tablelist-wrap .tablelist-header {\n  padding: 1em;\n}\n.tablelist-wrap .tablelist-content {\n  overflow: hidden;\n  overflow-y: auto;\n  max-height: 300px;\n  border-top: 2px solid rgba(255, 255, 255, 0.02);\n  border-bottom: 2px solid rgba(255, 255, 255, 0.02);\n}\n.tablelist-wrap .tablelist-content > .tablelist-row {\n  padding: 0.5em 1.6em;\n  background-color: rgba(0, 0, 0, 0);\n  line-height: 1.2rem;\n}\n.tablelist-wrap .tablelist-content > .tablelist-row + .tablelist-row {\n  margin-top: 2px;\n}\n.tablelist-wrap .tablelist-content > .tablelist-row:hover {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.tablelist-wrap .tablelist-content > .tablelist-row.active {\n  background-color: rgba(0, 0, 0, 0.2);\n  color: #f2a10d;\n}\n.tablelist-wrap .tablelist-10 {\n  flex: 10%;\n  width: 10%;\n}\n.tablelist-wrap .tablelist-20 {\n  flex: 20%;\n  width: 20%;\n}\n.tablelist-wrap .tablelist-30 {\n  flex: 30%;\n  width: 30%;\n}\n.tablelist-wrap .tablelist-40 {\n  flex: 40%;\n  width: 40%;\n}\n.tablelist-wrap .tablelist-50 {\n  flex: 50%;\n  width: 50%;\n}\n.tablelist-wrap .tablelist-60 {\n  flex: 60%;\n  width: 60%;\n}\n.tablelist-wrap .tablelist-70 {\n  flex: 70%;\n  width: 70%;\n}\n.tablelist-wrap .tablelist-80 {\n  flex: 80%;\n  width: 80%;\n}\n.tablelist-wrap .tablelist-90 {\n  flex: 90%;\n  width: 90%;\n}\n.tablelist-wrap .tablelist-100 {\n  flex: 100%;\n  width: 100%;\n}\n\n.percent-bar {\n  display: block;\n  overflow: hidden;\n  height: 5px;\n  background-color: rgba(78, 90, 101, 0.25);\n  border-radius: 6px;\n}\n.percent-bar > :first-child {\n  display: block;\n  height: 5px;\n  border-radius: 6px;\n}\n\n.img-round {\n  display: block;\n  overflow: hidden;\n  background-color: lightslategray;\n  text-align: center;\n  line-height: 100%;\n  border-radius: 100px;\n  color: #192029;\n}\n\n.alert-bubble {\n  position: relative;\n}\n.alert-bubble:before {\n  content: \"\";\n  display: block;\n  position: absolute;\n  pointer-events: none;\n  right: -0.3em;\n  top: 0;\n  width: 1em;\n  height: 1em;\n  background-color: #bc3232;\n  border-radius: 50%;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.5);\n  animation: pulseFade 1s linear infinite;\n  z-index: 10;\n}\n\n.alarm-bubble {\n  position: relative;\n}\n.alarm-bubble:before {\n  content: \"\\f101\";\n  color: #ff9f43 !important;\n  font-family: \"bootstrap-icons\";\n  display: block;\n  position: absolute;\n  pointer-events: none;\n  font-size: 120%;\n  right: -0.2em;\n  top: -0.2em;\n  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.5);\n  animation: pulseFade 1s linear infinite;\n  z-index: 10;\n}\n\n.border-top {\n  border-top: 2px solid rgba(255, 255, 255, 0.02);\n}\n\n.border-right {\n  border-right: 2px solid rgba(255, 255, 255, 0.02);\n}\n\n.border-bottom {\n  border-bottom: 2px solid rgba(255, 255, 255, 0.02);\n}\n\n.border-left {\n  border-left: 2px solid rgba(255, 255, 255, 0.02);\n}\n\n.if-small {\n  display: none;\n}\n@media only screen and (min-width : 420px) {\n  .if-small {\n    display: initial;\n  }\n}\n\n.if-medium {\n  display: none;\n}\n@media only screen and (min-width : 720px) {\n  .if-medium {\n    display: initial;\n  }\n}\n\n.if-large {\n  display: none;\n}\n@media only screen and (min-width : 1280px) {\n  .if-large {\n    display: initial;\n  }\n}\n\n.fx {\n  position: relative;\n  animation-direction: normal;\n  animation-duration: 300ms;\n  animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);\n  animation-iteration-count: 1;\n  animation-fill-mode: forwards;\n}\n\n.fx-notx {\n  transition: none !important;\n}\n\n.fx-ibk {\n  display: inline-block !important;\n}\n\n.fx-delay-1 {\n  animation-delay: calc( calc( 300ms / 3 ) * 1 );\n}\n\n.fx-delay-2 {\n  animation-delay: calc( calc( 300ms / 3 ) * 2 );\n}\n\n.fx-delay-3 {\n  animation-delay: calc( calc( 300ms / 3 ) * 3 );\n}\n\n.fx-delay-4 {\n  animation-delay: calc( calc( 300ms / 3 ) * 4 );\n}\n\n.fx-delay-5 {\n  animation-delay: calc( calc( 300ms / 3 ) * 5 );\n}\n\n.fx-delay-6 {\n  animation-delay: calc( calc( 300ms / 3 ) * 6 );\n}\n\n.fx-delay-7 {\n  animation-delay: calc( calc( 300ms / 3 ) * 7 );\n}\n\n.fx-delay-8 {\n  animation-delay: calc( calc( 300ms / 3 ) * 8 );\n}\n\n@keyframes spinRight {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(359deg);\n  }\n}\n.fx-spin-right {\n  animation-name: spinRight;\n  animation-duration: 1s;\n  animation-timing-function: linear;\n  animation-iteration-count: infinite;\n}\n\n@keyframes spinLeft {\n  0% {\n    transform: rotate(359deg);\n  }\n  100% {\n    transform: rotate(0deg);\n  }\n}\n.fx-spin-left {\n  animation-name: spinLeft;\n  animation-duration: 1s;\n  animation-timing-function: linear;\n  animation-iteration-count: infinite;\n}\n\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n.fx-fade-in {\n  opacity: 0;\n  animation-name: fadeIn;\n}\n\n@keyframes fadeOut {\n  0% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0;\n  }\n}\n.fx-fade-out {\n  opacity: 1;\n  animation-name: fadeOut;\n}\n\n@keyframes dropIn {\n  0% {\n    opacity: 0;\n    transform: scale(1.4);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n.fx-drop-in {\n  opacity: 0;\n  transform: scale(1.4);\n  animation-name: dropIn;\n}\n\n@keyframes zoomIn {\n  0% {\n    opacity: 0;\n    transform: scale(0.4);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n.fx-zoom-in {\n  opacity: 0;\n  transform: scale(0.4);\n  animation-name: zoomIn;\n}\n\n@keyframes zoomOut {\n  0% {\n    opacity: 1;\n    transform: scale(1);\n  }\n  100% {\n    opacity: 0;\n    transform: scale(0.4);\n  }\n}\n.fx-zoom-out {\n  opacity: 1;\n  transform: scale(1);\n  animation-name: zoomOut;\n}\n\n@keyframes slideLeft {\n  0% {\n    opacity: 0;\n    transform: translateX(20px);\n  }\n  100% {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n.fx-slide-left {\n  opacity: 0;\n  transform: translateX(20px);\n  animation-name: slideLeft;\n}\n\n@keyframes slideRight {\n  0% {\n    opacity: 0;\n    transform: translateX(calc( -20px ));\n  }\n  100% {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n.fx-slide-right {\n  opacity: 0;\n  transform: translateX(calc( -20px ));\n  animation-name: slideRight;\n}\n\n@keyframes slideUp {\n  0% {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n.fx-slide-up {\n  opacity: 0;\n  transform: translateY(20px);\n  animation-name: slideUp;\n}\n\n@keyframes slideDown {\n  0% {\n    opacity: 0;\n    transform: translateY(calc( -20px ));\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n.fx-slide-down {\n  opacity: 0;\n  transform: translateY(calc( -20px ));\n  animation-name: slideDown;\n}\n\n@keyframes pulseFade {\n  0% {\n    opacity: 0.7;\n  }\n  50% {\n    opacity: 1;\n  }\n  100% {\n    opacity: 0.7;\n  }\n}\n.fx-pulse {\n  opacity: 0.7;\n  animation-name: pulseFade;\n  animation-duration: 1s;\n  animation-timing-function: linear;\n  animation-iteration-count: infinite;\n}\n\n/**\n * Align children vertically (column)\n */\n.flex-column {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n}\n\n/**\n * Align children horizontally (row)\n */\n.flex-row {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n}\n\n/**\n * Flex items alignment and space distribution\n */\n.flex-wrap {\n  flex-wrap: wrap;\n}\n\n.flex-left {\n  justify-content: flex-start;\n}\n\n.flex-center {\n  justify-content: center;\n}\n\n.flex-right {\n  justify-content: flex-end;\n}\n\n.flex-space {\n  justify-content: space-between;\n}\n\n.flex-around {\n  justify-content: space-around;\n}\n\n.flex-top {\n  align-items: flex-start;\n}\n\n.flex-middle {\n  align-items: center;\n}\n\n.flex-bottom {\n  align-items: flex-end;\n}\n\n/**\n * Flex items sizing\n */\n.flex-a {\n  flex: auto;\n}\n\n.flex-1 {\n  flex: 1;\n}\n\n.flex-2 {\n  flex: 2;\n}\n\n.flex-3 {\n  flex: 3;\n}\n\n.flex-4 {\n  flex: 4;\n}\n\n.flex-5 {\n  flex: 5;\n}\n\n.flex-10 {\n  flex: 10%;\n  width: 10%;\n}\n\n.flex-20 {\n  flex: 20%;\n  width: 20%;\n}\n\n.flex-30 {\n  flex: 30%;\n  width: 30%;\n}\n\n.flex-40 {\n  flex: 40%;\n  width: 40%;\n}\n\n.flex-50 {\n  flex: 50%;\n  width: 50%;\n}\n\n.flex-60 {\n  flex: 60%;\n  width: 60%;\n}\n\n.flex-70 {\n  flex: 70%;\n  width: 70%;\n}\n\n.flex-80 {\n  flex: 80%;\n  width: 80%;\n}\n\n.flex-90 {\n  flex: 90%;\n  width: 90%;\n}\n\n.flex-100 {\n  flex: 100%;\n  width: 100%;\n}\n\n/**\n * Fixed with labels\n */\n.flex-label {\n  width: 100px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n\n/**\n * Table-like lists\n */\n.flex-list {\n  display: block;\n  position: relative;\n}\n.flex-list > .flex-header, .flex-list > .flex-item {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  align-items: center;\n  justify-content: stretch;\n  margin: 0 0 4px 0;\n  padding: 0.5em;\n  border-radius: 6px;\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.flex-list > .flex-item:hover {\n  background-color: rgba(0, 0, 0, 0.3);\n}\n\n/**\n * Basic grid\n */\n.flex-grid {\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));\n}\n.flex-grid.flex-grid-sm {\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n}\n.flex-grid.flex-grid-md {\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n}\n.flex-grid.flex-grid-lg {\n  grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\n}\n\n/**\n * Emoji classes\n */\n[class^=e-]:before,\n[class*=\" e-\"]:before {\n  display: inline-block;\n  margin: 0;\n  padding: 0;\n  width: 1em;\n  line-height: 1em;\n  vertical-align: baseline;\n  font-style: normal;\n  font-weight: normal;\n  font-variant: normal;\n  text-align: center;\n  text-decoration: none;\n  text-transform: none;\n  text-shadow: none;\n  font-weight: normal;\n  outline: none;\n  transition: none;\n  transform: scale(1.25);\n}\n\n.eLeft:before {\n  margin-right: 0.6em;\n}\n\n.e-100:before {\n  content: \"💯\";\n}\n\n.e-fire:before {\n  content: \"🔥\";\n}\n\n.e-explode:before {\n  content: \"💥\";\n}\n\n.e-like:before {\n  content: \"👍\";\n}\n\n.e-dislike:before {\n  content: \"👎\";\n}\n\n.e-shocked:before {\n  content: \"😱\";\n}\n\n.e-confused:before {\n  content: \"🤔\";\n}\n\n.e-hyped:before {\n  content: \"🤪\";\n}\n\n.e-love:before {\n  content: \"😍\";\n}\n\n.e-hate:before {\n  content: \"🤬\";\n}\n\n.e-happy:before {\n  content: \"😀\";\n}\n\n.e-sad:before {\n  content: \"☹️\";\n}\n\n.e-sick:before {\n  content: \"😷\";\n}\n\n.e-dead:before {\n  content: \"😵\";\n}\n\n.e-chart:before {\n  content: \"📊\";\n}\n\n.e-gain:before {\n  content: \"📈\";\n}\n\n.e-loss:before {\n  content: \"📉\";\n}\n\n.e-up:before {\n  content: \"▲\";\n}\n\n.e-down:before {\n  content: \"▼\";\n}\n\n.e-clock:before {\n  content: \"⌚️\";\n}\n\n.e-time:before {\n  content: \"⏳\";\n}\n\n.e-lock:before {\n  content: \"🔓\";\n}\n\n.e-key:before {\n  content: \"🔑\";\n}\n\n.e-sound:before {\n  content: \"🔊\";\n}\n\n.e-bell:before {\n  content: \"🔔\";\n}\n\n.e-siren:before {\n  content: \"🚨\";\n}\n\n.e-alarm:before {\n  content: \"⏰\";\n}\n\n.e-alert:before {\n  content: \"⚠️\";\n}\n\n.e-heart:before {\n  content: \"❤️\";\n}\n\n.e-rocket:before {\n  content: \"🚀\";\n}\n\n.e-commet:before {\n  content: \"💬\";\n}\n\n.e-moon:before {\n  content: \"🌕\";\n}\n\n.e-star:before {\n  content: \"⭐️\";\n}\n\n.e-sun:before {\n  content: \"☀️\";\n}\n\n.e-globe:before {\n  content: \"🌎\";\n}\n\n.e-money:before {\n  content: \"💰\";\n}\n\n.e-comment:before {\n  content: \"☄️\";\n}\n\n.e-note:before {\n  content: \"📝\";\n}\n\n.e-mail:before {\n  content: \"📩\";\n}\n\n.e-chain:before {\n  content: \"🔗\";\n}\n\n.e-sos:before {\n  content: \"🆘\";\n}\n\n.e-denied:before {\n  content: \"🚫\";\n}\n\n.e-avoid:before {\n  content: \"⛔️\";\n}\n\n.e-connection:before {\n  content: \"📡\";\n}\n\n.e-battery:before {\n  content: \"🔋\";\n}\n\n.e-disk:before {\n  content: \"💽\";\n}\n\n.e-calendar:before {\n  content: \"📆\";\n}\n\n.e-bag:before {\n  content: \"👛\";\n}\n\n.e-users:before {\n  content: \"👥\";\n}\n\n.e-user:before {\n  content: \"👤\";\n}\n\n.e-check:before {\n  content: \"✔️\";\n}\n\n.e-close:before {\n  content: \"✖️\";\n}\n\n.e-pin:before {\n  content: \"📌\";\n}\n\n.e-location:before {\n  content: \"📍\";\n}\n\n.e-search:before {\n  content: \"🔎\";\n}\n\n.e-config:before {\n  content: \"⚙️\";\n}\n\n.e-gift:before {\n  content: \"🎁\";\n}\n\na {\n  text-decoration: none;\n  color: aliceblue;\n  opacity: 1;\n}\na:hover {\n  opacity: 0.8;\n}\n\n.text-badge {\n  display: inline-block;\n  padding: 0 0.5em;\n  font-size: 90%;\n  background-color: rgba(0, 0, 0, 0.1);\n  border-radius: 100px;\n}\n\n.text-pill {\n  display: inline-block;\n  font-size: 78%;\n  text-transform: uppercase;\n  line-height: 1.3em;\n  padding: 1px 0.8em 2px 0.8em;\n  background: lightgray linear-gradient(180deg, transparent, rgba(0, 0, 0, 0.2));\n  color: #6d6d6d;\n  border-radius: 100px;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n}\n\n.text-btn {\n  display: inline-block;\n  overflow: hidden;\n  position: relative;\n  font-size: 70%;\n  text-transform: uppercase;\n  vertical-align: top;\n  line-height: 2em;\n  padding: 0 0.8em;\n  background: lightgray linear-gradient(180deg, transparent, rgba(0, 0, 0, 0.2));\n  color: #6d6d6d;\n  border-radius: 3px;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n}\n\n.text-reset {\n  font-family: \"Open Sans Condensed\", \"Contrail One\", Capriola, Consolas, Monaco, monospace;\n  font-size: 17px;\n  font-style: normal;\n  font-weight: normal;\n  line-height: 1.5em;\n  text-transform: none;\n}\n\n.text-monospace {\n  font-family: Consolas, Monaco, monospace;\n  font-weight: bold;\n  letter-spacing: -0.5px;\n}\n\n.text-left {\n  text-align: left;\n}\n\n.text-center {\n  text-align: center;\n}\n\n.text-justify {\n  text-align: justify;\n}\n\n.text-top {\n  vertical-align: top;\n}\n\n.text-middle {\n  vertical-align: middle;\n}\n\n.text-bottom {\n  vertical-align: bottom;\n}\n\n.text-baseline {\n  vertical-align: baseline;\n}\n\n.text-uppercase {\n  text-transform: uppercase;\n}\n\n.text-lowercase {\n  text-transform: lowercase;\n}\n\n.text-capitalize {\n  text-transform: capitalize;\n}\n\n.text-underline {\n  text-decoration: underline;\n}\n\n.text-striked {\n  text-decoration: line-through;\n}\n\n.text-italic {\n  font-style: italic;\n}\n\n.text-bold {\n  font-weight: bold;\n}\n\n.text-wrap {\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  -ms-word-break: break-all;\n  word-break: break-word;\n  -ms-hyphens: auto;\n  -moz-hyphens: auto;\n  -webkit-hyphens: auto;\n  hyphens: auto;\n}\n\n.text-nowrap {\n  white-space: nowrap;\n}\n\n.text-clip {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.text-noselect {\n  -webkit-touch-callout: none;\n  /* iOS Safari */\n  -webkit-user-select: none;\n  /* Safari */\n  -khtml-user-select: none;\n  /* Konqueror HTML */\n  -moz-user-select: none;\n  /* Firefox */\n  -ms-user-select: none;\n  /* Internet Explorer/Edge */\n  user-select: none;\n}\n\n.text-flip {\n  text-align: left;\n  direction: rtl;\n}\n\n.text-faded {\n  opacity: 0.5;\n}\n\n.text-big {\n  font-size: 120%;\n}\n\n.text-bigger {\n  font-size: 160%;\n}\n\n.text-huge {\n  font-size: 260%;\n}\n\n.text-small {\n  font-size: 90%;\n}\n\n.text-smaller {\n  font-size: 70%;\n}\n\n.text-tiny {\n  font-size: 50%;\n}\n\n.text-collapse {\n  line-height: 1em;\n}\n\n.text-label {\n  font: inherit;\n  font-size: 80%;\n  letter-spacing: 1px;\n  font-weight: normal;\n  text-transform: uppercase;\n  line-height: 1.5em;\n  color: aliceblue;\n  opacity: 0.4;\n}\n\nselect > option {\n  color: #192029 !important;\n}\n\nselect,\noption,\nbutton,\ninput[type=button],\ninput[type=reset],\ninput[type=submit],\ninput[type=range],\ninput[type=date] {\n  cursor: pointer;\n}\n\ninput[type=range] {\n  width: 100%;\n}\ninput[type=range]::-webkit-slider-runnable-track {\n  display: block;\n  width: 100%;\n  height: 3px;\n  background: #192029;\n  color: transparent !important;\n  border-color: transparent !important;\n  border-radius: 6px !important;\n  border: 0 !important;\n}\ninput[type=range]::-moz-range-track {\n  display: block;\n  width: 100%;\n  height: 3px;\n  background: #192029;\n  color: transparent !important;\n  border-color: transparent !important;\n  border-radius: 6px !important;\n  border: 0 !important;\n}\ninput[type=range]::-ms-track {\n  display: block;\n  width: 100%;\n  height: 3px;\n  background: #192029;\n  color: transparent !important;\n  border-color: transparent !important;\n  border-radius: 6px !important;\n  border: 0 !important;\n}\ninput[type=range]::-webkit-slider-thumb {\n  -webkit-appearance: none;\n  display: block;\n  width: 1.2em;\n  height: 1.2em;\n  margin: -0.55em 0 0 0;\n  border-radius: 50%;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n  background: #68852c;\n  color: transparent !important;\n  border-color: transparent !important;\n  border: 0 !important;\n}\ninput[type=range]::-moz-range-thumb {\n  display: block;\n  width: 1.2em;\n  height: 1.2em;\n  margin: -0.55em 0 0 0;\n  border-radius: 50%;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n  background: #68852c;\n  color: transparent !important;\n  border-color: transparent !important;\n  border: 0 !important;\n}\ninput[type=range]::-ms-thumb {\n  display: block;\n  width: 1.2em;\n  height: 1.2em;\n  margin: -0.55em 0 0 0;\n  border-radius: 50%;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n  background: #68852c;\n  color: transparent !important;\n  border-color: transparent !important;\n  border: 0 !important;\n}\n\n.form-row {\n  display: block;\n  margin: 0 0 0.5em 0;\n}\n.form-row:last-of-type {\n  margin: 0;\n}\n\n.form-label {\n  display: block;\n  text-transform: uppercase;\n  font-weight: normal;\n  font-size: 80%;\n  letter-spacing: 1px;\n  color: #f2a10d;\n}\n\n.form-btn {\n  display: inline-block;\n  padding: 0.5em 1em;\n  line-height: inherit;\n  border-radius: 100px;\n  background-color: #4e5a65;\n  color: #c6cdd3;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n  white-space: nowrap;\n}\n.form-btn:hover {\n  background-color: #434d57;\n}\n\n.form-input {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  align-items: center;\n  justify-content: stretch;\n  padding: 0.5em 1em;\n  line-height: inherit;\n  color: aliceblue;\n  background-color: #151b23;\n  border-radius: 100px;\n  box-shadow: inset 0 1px 4px rgba(0, 0, 0, 0.15);\n}\n.form-input:hover, .form-input:active, .form-input:focus {\n  background-color: #11161c;\n}\n.form-input.light {\n  background-color: #212a36;\n}\n.form-input.light:hover {\n  background-color: #252f3c;\n}\n\ntextarea.form-input {\n  overflow: auto;\n  min-width: 100%;\n  max-width: 100%;\n  min-height: 80px;\n}\n\n/**\n * Custom prompt box\n */\n.prompt-overlay {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  position: fixed;\n  overflow: hidden;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 10099;\n  pointer-events: none;\n  opacity: 0;\n}\n.prompt-overlay .prompt-container {\n  margin: 0 auto;\n  width: calc(100% - ( 1em * 2 ));\n  max-width: calc( 420px + ( 1em * 2 ) );\n  background-color: #27313f;\n  border-radius: 6px;\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.4);\n  transform: scale(0.5);\n}\n.prompt-overlay .prompt-container .prompt-title {\n  color: aliceblue;\n  padding: 1em;\n  border-bottom: 2px solid rgba(255, 255, 255, 0.02);\n}\n.prompt-overlay .prompt-container .prompt-message {\n  padding: 1em;\n}\n.prompt-overlay .prompt-container .prompt-input {\n  display: block;\n  overflow: hidden;\n  font-size: inherit;\n  line-height: 1.4em;\n  min-width: 100%;\n  margin: 0;\n  padding: 1em;\n  color: #d58e0b;\n  background-color: transparent;\n  box-shadow: none;\n}\n.prompt-overlay .prompt-container .prompt-input:active, .prompt-overlay .prompt-container .prompt-input:focus {\n  color: #f2a10d;\n}\n.prompt-overlay .prompt-container .prompt-buttons {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: stretch;\n  border-top: 2px solid rgba(255, 255, 255, 0.02);\n}\n.prompt-overlay .prompt-container .prompt-buttons button {\n  display: block;\n  flex: 1;\n  cursor: pointer;\n  color: #babbbc;\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 90%;\n  line-height: 1.2em;\n  margin: 0;\n  padding: 1em;\n  border-bottom: 2px solid rgba(0, 0, 0, 0.1);\n}\n.prompt-overlay .prompt-container .prompt-buttons .prompt-accept-btn {\n  background-color: rgba(0, 0, 0, 0.05);\n  color: #7ba428;\n}\n.prompt-overlay .prompt-container .prompt-buttons .prompt-accept-btn:hover, .prompt-overlay .prompt-container .prompt-buttons .prompt-accept-btn:active, .prompt-overlay .prompt-container .prompt-buttons .prompt-accept-btn:focus {\n  background-color: rgba(0, 0, 0, 0);\n}\n.prompt-overlay .prompt-container .prompt-buttons .prompt-cancel-btn {\n  background-color: rgba(0, 0, 0, 0.15);\n  color: #d92626;\n}\n.prompt-overlay .prompt-container .prompt-buttons .prompt-cancel-btn:hover, .prompt-overlay .prompt-container .prompt-buttons .prompt-cancel-btn:active, .prompt-overlay .prompt-container .prompt-buttons .prompt-cancel-btn:focus {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.prompt-overlay.prompt-visible {\n  pointer-events: auto;\n  opacity: 1;\n}\n.prompt-overlay.prompt-visible .prompt-container {\n  transform: scale(1);\n}\n\n/**\n * Tooltips\n */\n@keyframes tooltipShowLeft {\n  0% {\n    opacity: 0;\n    transform: translateX(-20px);\n  }\n  100% {\n    opacity: 1;\n    transform: translateX(-10px);\n  }\n}\n@keyframes tooltipShowRight {\n  0% {\n    opacity: 0;\n    transform: translateX(20px);\n  }\n  100% {\n    opacity: 1;\n    transform: translateX(10px);\n  }\n}\n@keyframes tooltipShowTop {\n  0% {\n    opacity: 0;\n    transform: translateY(-20px);\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(-10px);\n  }\n}\n@keyframes tooltipShowBottom {\n  0% {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(10px);\n  }\n}\n.tooltip-wrap {\n  display: block;\n  position: absolute;\n  text-align: center;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  pointer-events: none;\n  transition: none;\n  border: none;\n  border-radius: 6px;\n  max-width: 500px;\n  margin: 0;\n  padding: 0.5em 1em;\n  font-size: 80%;\n  line-height: 1.2em;\n  color: #a9b8cb;\n  background-color: #405168;\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.4);\n  left: 0;\n  top: 0;\n  z-index: 10009;\n}\n.tooltip-wrap.tooltip-left {\n  animation: tooltipShowLeft 300ms cubic-bezier(0.64, -0.28, 0.05, 1.405) forwards;\n}\n.tooltip-wrap.tooltip-right {\n  animation: tooltipShowRight 300ms cubic-bezier(0.64, -0.28, 0.05, 1.405) forwards;\n}\n.tooltip-wrap.tooltip-top {\n  animation: tooltipShowTop 300ms cubic-bezier(0.64, -0.28, 0.05, 1.405) forwards;\n}\n.tooltip-wrap.tooltip-bottom {\n  animation: tooltipShowBottom 300ms cubic-bezier(0.64, -0.28, 0.05, 1.405) forwards;\n}\n.tooltip-wrap:after {\n  content: \" \";\n  position: absolute;\n  height: 0;\n  width: 0;\n  pointer-events: none;\n  transition: none;\n  border: solid transparent;\n  border-color: transparent;\n  border-width: 5px;\n}\n.tooltip-wrap.tooltip-left:after {\n  left: 100%;\n  top: 50%;\n  border-left-color: #405168;\n  margin-top: -5px;\n}\n.tooltip-wrap.tooltip-right:after {\n  right: 100%;\n  top: 50%;\n  border-right-color: #405168;\n  margin-top: -5px;\n}\n.tooltip-wrap.tooltip-top:after {\n  top: 100%;\n  left: 50%;\n  border-top-color: #405168;\n  margin-left: -5px;\n}\n.tooltip-wrap.tooltip-bottom:after {\n  bottom: 100%;\n  left: 50%;\n  border-bottom-color: #405168;\n  margin-left: -5px;\n}\n\n/**\n * Radial gradient background image colors\n */\n.bg-document-image {\n  background-color: #192029 !important;\n  background-image: radial-gradient(circle, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.1) 100%) !important;\n  background-position: center center !important;\n  background-repeat: no-repeat !important;\n  color: #babbbc !important;\n}\n\n.bg-default-image {\n  background-color: lightgray !important;\n  background-image: radial-gradient(circle, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.1) 100%) !important;\n  background-position: center center !important;\n  background-repeat: no-repeat !important;\n  color: #6d6d6d !important;\n}\n\n.bg-gain-image {\n  background-color: #7ba428 !important;\n  background-image: radial-gradient(circle, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.1) 100%) !important;\n  background-position: center center !important;\n  background-repeat: no-repeat !important;\n  color: black !important;\n}\n\n.bg-loss-image {\n  background-color: #d92626 !important;\n  background-image: radial-gradient(circle, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.1) 100%) !important;\n  background-position: center center !important;\n  background-repeat: no-repeat !important;\n  color: #2b0808 !important;\n}\n\n.bg-primary-image {\n  background-color: #f2a10d !important;\n  background-image: radial-gradient(circle, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.1) 100%) !important;\n  background-position: center center !important;\n  background-repeat: no-repeat !important;\n  color: #302003 !important;\n}\n\n.bg-secondary-image {\n  background-color: steelblue !important;\n  background-image: radial-gradient(circle, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.1) 100%) !important;\n  background-position: center center !important;\n  background-repeat: no-repeat !important;\n  color: #0d1821 !important;\n}\n\n.bg-success-image {\n  background-color: #68852c !important;\n  background-image: radial-gradient(circle, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.1) 100%) !important;\n  background-position: center center !important;\n  background-repeat: no-repeat !important;\n  color: #d4e5b1 !important;\n}\n\n.bg-warning-image {\n  background-color: #d99a26 !important;\n  background-image: radial-gradient(circle, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.1) 100%) !important;\n  background-position: center center !important;\n  background-repeat: no-repeat !important;\n  color: #f7ebd4 !important;\n}\n\n.bg-danger-image {\n  background-color: #a72d2d !important;\n  background-image: radial-gradient(circle, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.1) 100%) !important;\n  background-position: center center !important;\n  background-repeat: no-repeat !important;\n  color: #ebb5b5 !important;\n}\n\n.bg-info-image {\n  background-color: #4e5a65 !important;\n  background-image: radial-gradient(circle, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.1) 100%) !important;\n  background-position: center center !important;\n  background-repeat: no-repeat !important;\n  color: #c6cdd3 !important;\n}\n\n.bg-grey-image {\n  background-color: lightslategray !important;\n  background-image: radial-gradient(circle, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.1) 100%) !important;\n  background-position: center center !important;\n  background-repeat: no-repeat !important;\n  color: #eceef0 !important;\n}\n\n.bg-bright-image {\n  background-color: aliceblue !important;\n  background-image: radial-gradient(circle, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.1) 100%) !important;\n  background-position: center center !important;\n  background-repeat: no-repeat !important;\n  color: #2499ff !important;\n}\n\n/**\n * Solid background colors\n */\n.bg-document {\n  background-color: #192029 !important;\n  color: #babbbc !important;\n}\n\n.bg-default {\n  background-color: lightgray !important;\n  color: #6d6d6d !important;\n}\n\n.bg-gain {\n  background-color: #7ba428 !important;\n  color: black !important;\n}\n\n.bg-loss {\n  background-color: #d92626 !important;\n  color: #2b0808 !important;\n}\n\n.bg-grey {\n  background-color: lightslategray !important;\n  color: #eceef0 !important;\n}\n\n.bg-bright {\n  background-color: aliceblue !important;\n  color: #2499ff !important;\n}\n\n/**\n * Solid background colors with hover/active state\n */\n.bg-document-hover {\n  background-color: #192029 !important;\n  color: #babbbc !important;\n}\n.bg-document-hover:hover {\n  background-color: #0f1419 !important;\n  color: #aeaeae !important;\n}\n\n.bg-default-hover {\n  background-color: lightgray !important;\n  color: #6d6d6d !important;\n}\n.bg-default-hover:hover {\n  background-color: #c6c6c6 !important;\n  color: #606060 !important;\n}\n\n.bg-gain-hover {\n  background-color: #7ba428 !important;\n  color: black !important;\n}\n.bg-gain-hover:hover {\n  background-color: #6c9023 !important;\n  color: black !important;\n}\n\n.bg-loss-hover {\n  background-color: #d92626 !important;\n  color: #2b0808 !important;\n}\n.bg-loss-hover:hover {\n  background-color: #c32222 !important;\n  color: #140505 !important;\n}\n\n.bg-primary-hover {\n  background-color: #f2a10d !important;\n  color: #302003 !important;\n}\n.bg-primary-hover:hover {\n  background-color: #da910b !important;\n  color: #171003 !important;\n}\n\n.bg-secondary-hover {\n  background-color: steelblue !important;\n  color: #0d1821 !important;\n}\n.bg-secondary-hover:hover {\n  background-color: #3f75a2 !important;\n  color: #070b0e !important;\n}\n\n.bg-success-hover {\n  background-color: #68852c !important;\n  color: #d4e5b1 !important;\n}\n.bg-success-hover:hover {\n  background-color: #597226 !important;\n  color: #c8d9a4 !important;\n}\n\n.bg-warning-hover {\n  background-color: #d99a26 !important;\n  color: #f7ebd4 !important;\n}\n.bg-warning-hover:hover {\n  background-color: #c38a22 !important;\n  color: #f0e0c2 !important;\n}\n\n.bg-danger-hover {\n  background-color: #a72d2d !important;\n  color: #ebb5b5 !important;\n}\n.bg-danger-hover:hover {\n  background-color: #932727 !important;\n  color: #e0a7a7 !important;\n}\n\n.bg-info-hover {\n  background-color: #4e5a65 !important;\n  color: #c6cdd3 !important;\n}\n.bg-info-hover:hover {\n  background-color: #434d57 !important;\n  color: #bec0c1 !important;\n}\n\n.bg-grey-hover {\n  background-color: lightslategray !important;\n  color: #eceef0 !important;\n}\n.bg-grey-hover:hover {\n  background-color: #6a7b8d !important;\n  color: #e0e1e3 !important;\n}\n\n.bg-bright-hover {\n  background-color: aliceblue !important;\n  color: #2499ff !important;\n}\n.bg-bright-hover:hover {\n  background-color: #d7ecff !important;\n  color: #178cf3 !important;\n}\n\n/**\n * Solid border colors\n */\n.border-document {\n  border-color: #192029 !important;\n}\n\n.border-default {\n  border-color: lightgray !important;\n}\n\n.border-gain {\n  border-color: #7ba428 !important;\n}\n\n.border-loss {\n  border-color: #d92626 !important;\n}\n\n.border-grey {\n  border-color: lightslategray !important;\n}\n\n.border-bright {\n  border-color: aliceblue !important;\n}\n\n/**\n * Solid border colors with hover/active state\n */\n.border-document-hover {\n  border-color: #192029 !important;\n}\n.border-document-hover:hover {\n  border-color: #0b0c0e !important;\n}\n\n.border-default-hover {\n  border-color: lightgray !important;\n}\n.border-default-hover:hover {\n  border-color: #bfbfbf !important;\n}\n\n.border-gain-hover {\n  border-color: #7ba428 !important;\n}\n.border-gain-hover:hover {\n  border-color: #607b28 !important;\n}\n\n.border-loss-hover {\n  border-color: #d92626 !important;\n}\n.border-loss-hover:hover {\n  border-color: #ab2b2b !important;\n}\n\n.border-primary-hover {\n  border-color: #f2a10d !important;\n}\n.border-primary-hover:hover {\n  border-color: #c18415 !important;\n}\n\n.border-secondary-hover {\n  border-color: steelblue !important;\n}\n.border-secondary-hover:hover {\n  border-color: #456c8c !important;\n}\n\n.border-success-hover {\n  border-color: #68852c !important;\n}\n.border-success-hover:hover {\n  border-color: #4e6029 !important;\n}\n\n.border-warning-hover {\n  border-color: #d99a26 !important;\n}\n.border-warning-hover:hover {\n  border-color: #ab7e2b !important;\n}\n\n.border-danger-hover {\n  border-color: #a72d2d !important;\n}\n.border-danger-hover:hover {\n  border-color: #7f2d2d !important;\n}\n\n.border-info-hover {\n  border-color: #4e5a65 !important;\n}\n.border-info-hover:hover {\n  border-color: #444547 !important;\n}\n\n.border-grey-hover {\n  border-color: lightslategray !important;\n}\n.border-grey-hover:hover {\n  border-color: #6f7479 !important;\n}\n\n.border-bright-hover {\n  border-color: aliceblue !important;\n}\n.border-bright-hover:hover {\n  border-color: #cae5fc !important;\n}\n\n/**\n * Solid text colors\n */\n.text-document {\n  color: #232c39 !important;\n}\n\n.text-default {\n  color: #e0e0e0 !important;\n}\n\n.text-gain {\n  color: #8bb92d !important;\n}\n\n.text-loss {\n  color: #dd3c3c !important;\n}\n\n.text-grey {\n  color: #8695a4 !important;\n}\n\n.text-bright {\n  color: white !important;\n}\n\n/**\n * Solid text colors with hover/active state\n */\n.text-document-hover {\n  color: #232c39 !important;\n}\n.text-document-hover:hover {\n  color: #0a0c10 !important;\n}\n\n.text-default-hover {\n  color: #e0e0e0 !important;\n}\n.text-default-hover:hover {\n  color: #bfbfbf !important;\n}\n\n.text-gain-hover {\n  color: #8bb92d !important;\n}\n.text-gain-hover:hover {\n  color: #638320 !important;\n}\n\n.text-loss-hover {\n  color: #dd3c3c !important;\n}\n.text-loss-hover:hover {\n  color: #b62020 !important;\n}\n\n.text-primary-hover {\n  color: #f4ab25 !important;\n}\n.text-primary-hover:hover {\n  color: #cb870b !important;\n}\n\n.text-secondary-hover {\n  color: #568ebd !important;\n}\n.text-secondary-hover:hover {\n  color: #3b6d97 !important;\n}\n\n.text-success-hover {\n  color: #779832 !important;\n}\n.text-success-hover:hover {\n  color: #506622 !important;\n}\n\n.text-warning-hover {\n  color: #dda43c !important;\n}\n.text-warning-hover:hover {\n  color: #b68120 !important;\n}\n\n.text-danger-hover {\n  color: #bc3232 !important;\n}\n.text-danger-hover:hover {\n  color: #872424 !important;\n}\n\n.text-info-hover {\n  color: #5a6773 !important;\n}\n.text-info-hover:hover {\n  color: #3d454e !important;\n}\n\n.text-grey-hover {\n  color: #8695a4 !important;\n}\n.text-grey-hover:hover {\n  color: #637484 !important;\n}\n\n.text-bright-hover {\n  color: white !important;\n}\n.text-bright-hover:hover {\n  color: #c7e5ff !important;\n}","/**\n * Global resets and documet setup.\n */\n\n*, *:before, *:after {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  outline: none;\n  background-color: transparent;\n  text-transform: none;\n  text-shadow: none;\n  box-shadow: none;\n  box-sizing: border-box;\n  appearance: none;\n  -webkit-overflow-scrolling: touch;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  transform-style: flat;\n  transition:\n    border-color $fxSpeed $fxEase,\n    background-color $fxSpeed $fxEase,\n    opacity $fxSpeed $fxEase,\n    transform $fxSpeed $fxEase;\n}\n\nhtml .navbar-sticky .app-content {\n    padding: 62px 0 0 0 !important\n}\n\n@media (max-width: 767.98px) {\n    html body.navbar-sticky .app-content {\n        padding: 62px 0 0 0 !important\n    }\n}\n","\n// cursor for clickable elements\n.clickable, [clickable] {\n  cursor: pointer;\n}\n\n// not rendered\n.hidden, [hidden] {\n  display: none;\n}\n\n// visible but not usable\n.disabled, [disabled] {\n  pointer-events: none;\n  opacity: 0.5;\n}\n\n// rendered but not visible or usable\n.cloaked, [cloaked], [v-cloak] {\n  pointer-events: none;\n  opacity: 0.0000000000001;\n}\n\n// faded transparent\n.transparent {\n  opacity: 0;\n}\n\n// background color for testing elements\n.bgtest {\n  background-color: rgba( pink, .1 ) !important;\n}\n\n// neutral color for price change\n.app-wrap {\n  .color { color: $colorGrey; }\n  polyline { stroke: $colorGrey; }\n  circle { fill: $colorGrey; }\n\n  // gain color for price chage\n  .gain .color { color: $colorGain; }\n  .gain polyline { stroke: $colorGain; }\n  .gain circle { fill: $colorGain; }\n\n  // loss color for price change\n  .loss .color { color: $colorLoss; }\n  .loss polyline { stroke: $colorLoss; }\n  .loss circle { fill: $colorLoss; }\n\n  // position helpers\n  .pos-abs { position: absolute; }\n  .pos-rel { position: relative; }\n}\n\n// common dark faded content wells\n.well {\n  position: relative;\n  padding: calc( $padSpace * .4 ) calc( $padSpace * .8 );\n  background-image: radial-gradient( ellipse at top left, rgba( black, 0.2 ) 0%, rgba( black, 0.01 ) 100% );\n  border-radius: $lineJoin;\n}\n\n// horizontail container for inline nav links\n.navlinks {\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  margin: 0 0 $padSpace 0;\n  padding: $padSpaceSmall $padSpace;\n  line-height: 2em;\n}\n\n// common page wrapper to clear fixed topbar\n.page-wrap {\n  position: relative;\n\n  .page-topbar {\n    position: relative;\n    padding: 10px 0 10px 0;\n    width: 100%;\n    background-color: rgba( $colorDocument, 0 );\n    z-index: ( $zindexElements - 1 );\n  }\n  // collapsed mode\n  &.collapsed {\n    .page-topbar {\n      //transform: translateY( +#{$topbarH} );\n      top: #{$topbarH};\n      position: sticky;\n    }\n  }\n  // opaque mode\n  &.opaque {\n    .page-topbar {\n      background-color: rgba( 0, 0, 0, 0.85 );\n      box-shadow: $shadowBold;\n    }\n  }\n}\n\n// common lists used in pages\n.pagelist-wrap {\n  position: relative;\n\n  .pagelist-item {\n    margin: 0 0 ( $padSpace * .4 ) 0;\n    padding: calc( $padSpace * .6 ) $padSpace;\n    background:rgb(255 255 255 / 6%);\n    border-radius: $lineJoin;\n\n    &:hover {\n      background-color: rgb(255 255 255 / 12%);\n    }\n  }\n}\n\n// common table-like lists\n.tablelist-wrap {\n  position: relative;\n  min-width: 300px;\n\n  .tablelist-header {\n    padding: 1em;\n  }\n  .tablelist-content {\n    overflow: hidden;\n    overflow-y: auto;\n    max-height: 300px;\n    border-top: $lineWidth $lineStyle $lineColor;\n    border-bottom: $lineWidth $lineStyle $lineColor;\n\n    & > .tablelist-row {\n      padding: calc( $padSpace / 2 ) calc( $padSpace * 1.6 );\n      background-color: rgba( black, 0 );\n      line-height: 1.2rem;\n\n      & + .tablelist-row {\n        margin-top: $lineWidth;\n      }\n      &:hover {\n        background-color: rgba( black, .1 );\n      }\n      &.active {\n        background-color: rgba( black, .2 );\n        color: $colorPrimary;\n      }\n    }\n  }\n  @for $i from 1 through 10 {\n    $s: ( 10 * $i );\n    $p: ( 10% * $i );\n    .tablelist-#{$s} { flex: $p; width: $p; }\n  }\n}\n\n// percent bars\n.percent-bar {\n  display: block;\n  overflow: hidden;\n  height: 5px;\n  background-color: rgba( $colorInfo, 0.25 );\n  border-radius: $lineJoin;\n\n  & > :first-child {\n    display: block;\n    height: 5px;\n    border-radius: $lineJoin;\n  }\n}\n\n// rounded images\n.img-round {\n  display: block;\n  overflow: hidden;\n  background-color: $colorGrey;\n  text-align: center;\n  line-height: 100%;\n  border-radius: 100px;\n  color: $colorDocument;\n}\n\n// alert circle within elements\n.alert-bubble {\n  position: relative;\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    pointer-events: none;\n    right: -0.3em;\n    top: 0;\n    width: 1em;\n    height: 1em;\n    background-color: lighten( $colorDanger, 5% );\n    border-radius: 50%;\n    box-shadow: 0 1px 3px rgba( 0, 0, 0, 0.5 );\n    animation: pulseFade 1s linear infinite;\n    z-index: 10;\n  }\n}\n// emoji alarm indicator\n.alarm-bubble {\n  position: relative;\n\n  &:before {\n    content: '\\f101';\n    color: #ff9f43 !important;\n    font-family: 'bootstrap-icons';\n    display: block;\n    position: absolute;\n    pointer-events: none;\n    font-size: 120%;\n    right: -0.2em;\n    top: -0.2em;\n    text-shadow:0 1px 3px rgba( 0, 0, 0, 0.5 );\n    animation: pulseFade 1s linear infinite;\n    z-index: 10;\n  }\n}\n\n// common borders\n.border-top {\n  border-top: $lineWidth $lineStyle $lineColor;\n}\n.border-right {\n  border-right: $lineWidth $lineStyle $lineColor;\n}\n.border-bottom {\n  border-bottom: $lineWidth $lineStyle $lineColor;\n}\n.border-left {\n  border-left: $lineWidth $lineStyle $lineColor;\n}\n\n// media query helpers\n.if-small {\n  display: none;\n  @media #{$screenSmall} {\n    display: initial;\n  }\n}\n.if-medium {\n  display: none;\n  @media #{$screenMedium} {\n    display: initial;\n  }\n}\n.if-large {\n  display: none;\n  @media #{$screenLarge} {\n    display: initial;\n  }\n}\n\n","// topbar size\n$topbarH: 62px;\n$topbarHeight: 50px;\n\n// list icons fixed size (w|h px)\n$iconSize: 46px;\n\n// spacing and padding\n$padSpace: 1em;\n$padSpaceSmall: calc($padSpace / 2);\n$colSpace: 1.2em;\n$rowSpace: 1.2em;\n$listSpace: 0.4em;\n\n// borders and lines\n$lineWidth: 2px;\n$lineStyle: solid;\n$lineColor: rgba( white, 0.02 );\n$lineJoin: 6px;\n\n// common z-index values\n$zindexUnder: -1;\n$zindexElements: 100;\n$zindexModals: 8888;\n$zindexAlerts: 9999;\n\n// base font options\n$fontSize: 17px;\n$fontSpace: 1.4em;\n$fontWeight: normal;\n$fontFamily: 'Open Sans Condensed', 'Contrail One', Capriola, Consolas, Monaco, monospace;\n$fontFixed: Consolas, Monaco, monospace;\n\n// document colors\n$colorDocument: #192029;\n$colorDocumentText: #babbbc;\n$colorDocumentLight: lighten( $colorDocument, 3% );\n$colorDocumentDark: darken( $colorDocument, 6% );\n\n//scrollbar colors\n$colorScrollTrack: lighten( $colorDocument, 3% );\n$colorScrollThumb: darken( $colorDocument, 3% );\n\n// default colors\n$colorDefault: lightgray;\n$colorDefaultText: darken( $colorDefault, 40% );\n\n// primary colors\n$colorGain: darken( yellowgreen, 10% );\n$colorGainText: darken( $colorGain, 40% );\n\n// primary colors\n$colorLoss: desaturate( red, 30% );\n$colorLossText: darken( $colorLoss, 40% );\n\n// primary colors\n$colorPrimary: desaturate( orange, 10% );\n$colorPrimaryText: darken( $colorPrimary, 40% );\n\n// secondary colors\n$colorSecondary: steelblue;\n$colorSecondaryText: darken( $colorSecondary, 40% );\n\n// success colors\n$colorSuccess: desaturate( olivedrab, 10% );\n$colorSuccessText: lighten( $colorSuccess, 45% );\n\n// warning colors\n$colorWarning: desaturate( orange, 30% );\n$colorWarningText: lighten( $colorWarning, 40% );\n\n// danger colors\n$colorDanger: desaturate( firebrick, 10% );\n$colorDangerText: lighten( $colorDanger, 40% );\n\n// info colors\n$colorInfo: darken( slategray, 15% );\n$colorInfoText: lighten( $colorInfo, 45% );\n\n// grey colors\n$colorGrey: lightslategray;\n$colorGreyText: lighten( $colorGrey, 40% );\n\n// bright colors\n$colorBright: aliceblue;\n$colorBrightText: darken( $colorBright, 40% );\n\n// other colors\n$colorText: lightgray;\n$colorOverlay: rgba( 0, 0, 0, 0.5 );\n\n// common shadow styles\n$shadowHollow: inset 0 1px 4px rgba( 0, 0, 0, 0.15 );\n$shadowBubble: inset 0 -20px 20px rgba( 0, 0, 0, 0.1 );\n$shadowPaper: 0 1px 2px rgba( 0, 0, 0, 0.2 );\n$shadowDark: 0 1px 3px rgba( 0, 0, 0, 0.3 );\n$shadowGlow: 0 0 10px rgba( 0, 0, 0, 0.2 );\n$shadowBold: 0 2px 12px rgba( 0, 0, 0, 0.4 );\n$shadowText: 1px 1px 0 rgba( 0, 0, 0, 0.3 );\n\n// transition props\n$fxSpeed: 300ms;\n$fxEase: cubic-bezier( 0.215, 0.610, 0.355, 1.000 );\n$fxEaseBounce: cubic-bezier( 0.640, -0.280, 0.050, 1.405 );\n$fxSpeedOffset: calc( #{$fxSpeed} / 3 );\n$fxSlideDist: 20px;\n$fxShrinkScale: .4;\n$fxGrowScale: 1.4;\n$fxRotateAmount: 8deg;\n\n// screen sizes\n$sizeSmall: 420px;\n$sizeMedium: 720px;\n$sizeLarge: 1280px;\n\n// screen breakpoints\n$screenSmall: \"only screen and (min-width : #{$sizeSmall})\";\n$screenMedium: \"only screen and (min-width : #{$sizeMedium})\";\n$screenLarge: \"only screen and (min-width : #{$sizeLarge})\";\n","// animations on\r\n.fx {\r\n  position: relative;\r\n  animation-direction: normal;\r\n  animation-duration: $fxSpeed;\r\n  animation-timing-function: $fxEase;\r\n  animation-iteration-count: 1;\r\n  animation-fill-mode: forwards;\r\n}\r\n\r\n// disable transitions on element\r\n.fx-notx {\r\n  transition: none !important;\r\n}\r\n\r\n// convert inline elements into inline-block\r\n.fx-ibk {\r\n  display: inline-block !important;\r\n}\r\n\r\n// effect delays\r\n@for $i from 1 through 8 {\r\n  .fx-delay-#{$i} {\r\n    animation-delay: calc( #{$fxSpeedOffset} * #{$i} );\r\n  }\r\n}\r\n\r\n// spin right animation\r\n@keyframes spinRight {\r\n    0% { transform: rotate( 0deg ); }\r\n  100% { transform: rotate( 359deg ); }\r\n}\r\n.fx-spin-right {\r\n  animation-name: spinRight;\r\n  animation-duration: 1s;\r\n  animation-timing-function: linear;\r\n  animation-iteration-count: infinite;\r\n}\r\n\r\n// spin right animation\r\n@keyframes spinLeft {\r\n    0% { transform: rotate( 359deg ); }\r\n  100% { transform: rotate( 0deg ); }\r\n}\r\n.fx-spin-left {\r\n  animation-name: spinLeft;\r\n  animation-duration: 1s;\r\n  animation-timing-function: linear;\r\n  animation-iteration-count: infinite;\r\n}\r\n\r\n// fade-in animation\r\n@keyframes fadeIn {\r\n    0% { opacity: 0; }\r\n  100% { opacity: 1; }\r\n}\r\n.fx-fade-in {\r\n  opacity: 0;\r\n  animation-name: fadeIn;\r\n}\r\n\r\n// fade-out animation\r\n@keyframes fadeOut {\r\n    0% { opacity: 1; }\r\n  100% { opacity: 0; }\r\n}\r\n.fx-fade-out {\r\n  opacity: 1;\r\n  animation-name: fadeOut;\r\n}\r\n\r\n// drop-in animation (scale)\r\n@keyframes dropIn {\r\n    0% { opacity: 0; transform: scale( $fxGrowScale ); }\r\n  100% { opacity: 1; transform: scale( 1 ); }\r\n}\r\n.fx-drop-in {\r\n  opacity: 0;\r\n  transform: scale( $fxGrowScale );\r\n  animation-name: dropIn;\r\n}\r\n\r\n// zoom-in animation (modal, alert, etc)\r\n@keyframes zoomIn {\r\n    0% { opacity: 0; transform: scale( $fxShrinkScale ); }\r\n  100% { opacity: 1; transform: scale( 1 ); }\r\n}\r\n.fx-zoom-in {\r\n  opacity: 0;\r\n  transform: scale( $fxShrinkScale );\r\n  animation-name: zoomIn;\r\n}\r\n\r\n// zoom-out animation (modal, alert, etc)\r\n@keyframes zoomOut {\r\n    0% { opacity: 1; transform: scale( 1 ); }\r\n  100% { opacity: 0; transform: scale( $fxShrinkScale ); }\r\n}\r\n.fx-zoom-out {\r\n  opacity: 1;\r\n  transform: scale( 1 );\r\n  animation-name: zoomOut;\r\n}\r\n\r\n// slide in to the left\r\n@keyframes slideLeft {\r\n    0% { opacity: 0; transform: translateX( $fxSlideDist ); }\r\n  100% { opacity: 1; transform: translateX( 0 ); }\r\n}\r\n.fx-slide-left {\r\n  opacity: 0;\r\n  transform: translateX( $fxSlideDist );\r\n  animation-name: slideLeft;\r\n}\r\n\r\n// slide in to the right\r\n@keyframes slideRight {\r\n    0% { opacity: 0; transform: translateX( calc( -#{$fxSlideDist} ) ); }\r\n  100% { opacity: 1; transform: translateX( 0 ); }\r\n}\r\n.fx-slide-right {\r\n  opacity: 0;\r\n  transform: translateX( calc( -#{$fxSlideDist} ) );\r\n  animation-name: slideRight;\r\n}\r\n\r\n// slide in to the top\r\n@keyframes slideUp {\r\n    0% { opacity: 0; transform: translateY( $fxSlideDist ); }\r\n  100% { opacity: 1; transform: translateY( 0 ); }\r\n}\r\n.fx-slide-up {\r\n  opacity: 0;\r\n  transform: translateY( $fxSlideDist );\r\n  animation-name: slideUp;\r\n}\r\n\r\n// slide in to the bottom\r\n@keyframes slideDown {\r\n    0% { opacity: 0; transform: translateY( calc( -#{$fxSlideDist} ) ); }\r\n  100% { opacity: 1; transform: translateY( 0 ); }\r\n}\r\n.fx-slide-down {\r\n  opacity: 0;\r\n  transform: translateY( calc( -#{$fxSlideDist} ) );\r\n  animation-name: slideDown;\r\n}\r\n\r\n// pulse opacity\r\n@keyframes pulseFade {\r\n    0% { opacity: 0.7; }\r\n   50% { opacity: 1.0; }\r\n  100% { opacity: 0.7; }\r\n}\r\n.fx-pulse {\r\n  opacity: 0.7;\r\n  animation-name: pulseFade;\r\n  animation-duration: 1s;\r\n  animation-timing-function: linear;\r\n  animation-iteration-count: infinite;\r\n}\r\n","/**\n * Align children vertically (column)\n */\n.flex-column {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: nowrap;\n}\n\n/**\n * Align children horizontally (row)\n */\n.flex-row {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n}\n\n/**\n * Flex items alignment and space distribution\n */\n .flex-wrap {\n  flex-wrap: wrap;\n}\n.flex-left {\n  justify-content: flex-start;\n}\n.flex-center {\n  justify-content: center;\n}\n.flex-right {\n  justify-content: flex-end;\n}\n.flex-space {\n  justify-content: space-between;\n}\n.flex-around {\n  justify-content: space-around;\n}\n.flex-top {\n  align-items: flex-start;\n}\n.flex-middle {\n  align-items: center;\n}\n.flex-bottom {\n  align-items: flex-end;\n}\n\n/**\n * Flex items sizing\n */\n.flex-a {\n  flex: auto;\n}\n.flex-1 {\n  flex: 1;\n}\n.flex-2 {\n  flex: 2;\n}\n.flex-3 {\n  flex: 3;\n}\n.flex-4 {\n  flex: 4;\n}\n.flex-5 {\n  flex: 5;\n}\n@for $i from 1 through 10 {\n  $s: calc( 10 * $i );\n  $p: calc( 10% * $i );\n  .flex-#{$s} { flex: $p; width: $p; }\n}\n\n/**\n * Fixed with labels\n */\n.flex-label {\n  width: 100px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n}\n\n/**\n * Table-like lists\n */\n.flex-list {\n  display: block;\n  position: relative;\n\n  & > .flex-header,\n  & > .flex-item {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    align-items: center;\n    justify-content: stretch;\n    margin: 0 0 calc( $lineWidth * 2 ) 0;\n    padding: calc( $padSpace / 2 );\n    border-radius: $lineJoin;\n    background-color: rgba( 0, 0, 0, 0.1 );\n  }\n  & > .flex-item:hover {\n    background-color: rgba( 0, 0, 0, 0.3 );\n  }\n}\n\n/**\n * Basic grid\n */\n.flex-grid {\n  display: grid;\n  grid-gap: $padSpace;\n  grid-template-columns: repeat( auto-fill, minmax( 140px, 1fr ) );\n\n  &.flex-grid-sm {\n    grid-template-columns: repeat( auto-fill, minmax( 200px, 1fr ) );\n  }\n  &.flex-grid-md {\n    grid-template-columns: repeat( auto-fill, minmax( 300px, 1fr ) );\n  }\n  &.flex-grid-lg {\n    grid-template-columns: repeat( auto-fill, minmax( 400px, 1fr ) );\n  }\n}\n","/**\r\n * Emoji classes\r\n */\r\n[class^='e-']:before,\r\n[class*=' e-']:before {\r\n  display: inline-block;\r\n  margin: 0;\r\n  padding: 0;\r\n  width: 1em;\r\n  line-height: 1em;\r\n  vertical-align: baseline;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-variant: normal;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  text-transform: none;\r\n  text-shadow: none;\r\n  font-weight: normal;\r\n  outline: none;\r\n  transition: none;\r\n  transform: scale( 1.25 );\r\n}\r\n\r\n// space right\r\n.eLeft:before {\r\n  margin-right: .6em;\r\n}\r\n\r\n// characters\r\n.e-100:before { content: '💯'; }\r\n.e-fire:before { content: '🔥'; }\r\n.e-explode:before { content: '💥'; }\r\n.e-like:before { content: '👍'; }\r\n.e-dislike:before { content: '👎'; }\r\n.e-shocked:before { content: '😱'; }\r\n.e-confused:before { content: '🤔'; }\r\n.e-hyped:before { content: '🤪'; }\r\n.e-love:before { content: '😍'; }\r\n.e-hate:before { content: '🤬'; }\r\n.e-happy:before { content: '😀'; }\r\n.e-sad:before { content: '☹️'; }\r\n.e-sick:before { content: '😷'; }\r\n.e-dead:before { content: '😵'; }\r\n.e-chart:before { content: '📊'; }\r\n.e-gain:before { content: '📈'; }\r\n.e-loss:before { content: '📉'; }\r\n.e-up:before { content: '▲'; }\r\n.e-down:before { content: '▼'; }\r\n.e-clock:before { content: '⌚️'; }\r\n.e-time:before { content: '⏳'; }\r\n.e-lock:before { content: '🔓'; }\r\n.e-key:before { content: '🔑'; }\r\n.e-sound:before { content: '🔊'; }\r\n.e-bell:before { content: '🔔'; }\r\n.e-siren:before { content: '🚨'; }\r\n.e-alarm:before { content: '⏰'; }\r\n.e-alert:before { content: '⚠️'; }\r\n.e-heart:before { content: '❤️'; }\r\n.e-rocket:before { content: '🚀'; }\r\n.e-commet:before { content: '💬'; }\r\n.e-moon:before { content: '🌕'; }\r\n.e-star:before { content: '⭐️'; }\r\n.e-sun:before { content: '☀️'; }\r\n.e-globe:before { content: '🌎'; }\r\n.e-money:before { content: '💰'; }\r\n.e-comment:before { content: '☄️'; }\r\n.e-note:before { content: '📝'; }\r\n.e-mail:before { content: '📩'; }\r\n.e-chain:before { content: '🔗'; }\r\n.e-sos:before { content: '🆘'; }\r\n.e-denied:before { content: '🚫'; }\r\n.e-avoid:before { content: '⛔️'; }\r\n.e-connection:before { content: '📡'; }\r\n.e-battery:before { content: '🔋'; }\r\n.e-disk:before { content: '💽'; }\r\n.e-calendar:before { content: '📆'; }\r\n.e-bag:before { content: '👛'; }\r\n.e-users:before { content: '👥'; }\r\n.e-user:before { content: '👤'; }\r\n.e-check:before { content: '✔️'; }\r\n.e-close:before { content: '✖️'; }\r\n.e-pin:before { content: '📌'; }\r\n.e-location:before { content: '📍'; }\r\n.e-search:before { content: '🔎'; }\r\n.e-config:before { content: '⚙️'; }\r\n.e-gift:before { content: '🎁'; }\r\n","// links\na {\n    text-decoration: none;\n    color: $colorBright;\n    opacity: 1;\n\n    &:hover {\n      opacity: 0.8;\n    }\n  }\n// badge text containers\n.text-badge {\n  display: inline-block;\n  padding: 0 .5em;\n  font-size: 90%;\n  background-color: rgba( 0, 0, 0, 0.1 );\n  border-radius: 100px;\n}\n\n// pill style wrappers for text elements\n.text-pill {\n  display: inline-block;\n  font-size: 78%;\n  text-transform: uppercase;\n  line-height: 1.3em;\n  padding: 1px .8em 2px .8em;\n  background: $colorDefault linear-gradient( 180deg, transparent, rgba( #000, 0.2 ) );\n  color: $colorDefaultText;\n  border-radius: 100px;\n  box-shadow: $shadowPaper;\n}\n\n// button style text wrappers\n.text-btn {\n  display: inline-block;\n  overflow: hidden;\n  position: relative;\n  font-size: 70%;\n  text-transform: uppercase;\n  vertical-align: top;\n  line-height: 2em;\n  padding: 0 .8em;\n  background: $colorDefault linear-gradient( 180deg, transparent, rgba( #000, 0.2 ) );\n  color: $colorDefaultText;\n  border-radius: 3px;\n  box-shadow: $shadowPaper;\n}\n\n// text display styles\n.text-reset {\n  font-family: $fontFamily;\n  font-size: $fontSize;\n  font-style: normal;\n  font-weight: normal;\n  line-height: 1.5em;\n  text-transform: none;\n}\n.text-monospace {\n  font-family: $fontFixed;\n  font-weight: bold;\n  letter-spacing: -.5px;\n}\n.text-left {\n  text-align: left;\n}\n.text-center {\n  text-align: center;\n}\n.text-justify {\n  text-align: justify;\n}\n.text-top {\n  vertical-align: top;\n}\n.text-middle {\n  vertical-align: middle;\n}\n.text-bottom {\n  vertical-align: bottom;\n}\n.text-baseline {\n  vertical-align: baseline;\n}\n.text-uppercase {\n  text-transform: uppercase;\n}\n.text-lowercase {\n  text-transform: lowercase;\n}\n.text-capitalize {\n  text-transform: capitalize;\n}\n.text-underline {\n  text-decoration: underline;\n}\n.text-striked {\n  text-decoration: line-through;\n}\n.text-italic {\n  font-style: italic;\n}\n.text-bold {\n  font-weight: bold;\n}\n.text-wrap {\n  @include textWrapAll;\n}\n.text-nowrap {\n  @include textNoWrap;\n}\n.text-clip {\n  @include textClip;\n}\n.text-noselect {\n  @include textNoSelect;\n}\n.text-flip {\n  text-align: left;\n  direction: rtl;\n}\n.text-faded {\n  opacity: 0.5;\n}\n.text-big {\n  font-size: 120%;\n}\n.text-bigger {\n  font-size: 160%;\n}\n.text-huge {\n  font-size: 260%;\n}\n.text-small {\n  font-size: 90%;\n}\n.text-smaller {\n  font-size: 70%;\n}\n.text-tiny {\n  font-size: 50%;\n}\n.text-collapse {\n  line-height: 1em;\n}\n.text-label {\n  font: inherit;\n  font-size: 80%;\n  letter-spacing: 1px;\n  font-weight: normal;\n  text-transform: uppercase;\n  line-height: 1.5em;\n  color: $colorBright;\n  opacity: 0.4;\n}\n\n","\n// prevent text from being selected\n@mixin textNoSelect {\n  -webkit-touch-callout: none; /* iOS Safari */\n  -webkit-user-select: none; /* Safari */\n  -khtml-user-select: none; /* Konqueror HTML */\n  -moz-user-select: none; /* Firefox */\n  -ms-user-select: none; /* Internet Explorer/Edge */\n  user-select: none;\n}\n\n// wrap all long text\n@mixin textWrapAll {\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  -ms-word-break: break-all;\n  word-break: break-word;\n  -ms-hyphens: auto;\n  -moz-hyphens: auto;\n  -webkit-hyphens: auto;\n  hyphens: auto;\n}\n\n// prevent text from wrapping\n@mixin textNoWrap {\n  white-space: nowrap;\n}\n\n// clip text and add ellipsis\n@mixin textClip {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n// add light border to the bottom of containers\n@mixin borderAccent {\n  border-bottom: $lineWidth solid rgba( 0, 0, 0, 0.1 );\n}\n\n// common scrollable page wrapper\n@mixin contentScroller {\n  @include contentWrapper;\n  overflow-y: auto;\n}\n\n// common dropdown/select style containers\n@mixin commonDropdown {\n  display: none;\n  position: absolute;\n  transition: none;\n  left: 0;\n  top: 0;\n  min-width: 100px;\n  opacity: 0;\n  margin: 0;\n  padding: 0;\n  background-color: lighten( $colorDocument, 3% );\n  border-radius: $lineJoin;\n  box-shadow: $shadowBold;\n  z-index: calc( $zindexAlerts + 10 );\n\n  &.left { // show from left\n    left: 0;\n    right: auto;\n  }\n  &.right { // show from right\n    left: auto;\n    right: 0;\n  }\n  &.top { // show from top\n    top: 40%;\n    bottom: auto;\n    animation: slideUp calc( $fxSpeed / 2 ) $fxEase forwards;\n  }\n  &.bottom { // show from bottom\n    top: auto;\n    bottom: 40%;\n    animation: slideDown calc( $fxSpeed / 2 ) $fxEase forwards;\n  }\n  &.visible {\n    display: block;\n  }\n}\n\n// fullscreen modifiers\n@mixin fullScreen( $fixed: 0 ) {\n  display: block;\n  overflow: hidden;\n  @if $fixed == 1 { position: fixed; }\n  @else { position: absolute; }\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n}\n\n// radial gradient background color\n@mixin bgRadial( $color ) {\n  $dark: saturate( darken( $color, 8% ), 8% );\n  $image: radial-gradient( circle, $color 0%, $dark 55% );\n  background-color: $dark;\n  background-image: $image;\n  background-position: center center;\n  background-repeat: no-repeat;\n}\n\n// radial background image gradiant effect\n@mixin colorImage( $color, $text ) {\n  background-color: $color !important;\n  background-image: radial-gradient( circle, rgba( 255, 255, 255, 0 ) 0%, rgba( 255, 255, 255, 0.1 ) 100% ) !important;\n  background-position: center center !important;\n  background-repeat: no-repeat !important;\n  color: $text !important;\n}\n\n// change background and font color\n@mixin colorBg( $color, $text, $hover: 0 ) {\n  background-color: $color !important;\n  color: $text !important;\n  @if $hover == 1 {\n    &:hover {\n      background-color: darken( $color, 5% ) !important;\n      color: desaturate( darken( $text, 5% ), 10% ) !important;\n    }\n  }\n}\n\n// change border color\n@mixin colorBorder( $color, $hover: 0 ) {\n  border-color: $color !important;\n  @if $hover == 1 {\n    &:hover {\n      border-color: desaturate( darken( $color, 8% ), 10% ) !important;\n    }\n  }\n}\n\n// change text color\n@mixin colorText( $color, $hover: 0 ) {\n  color: lighten( $color, 5% ) !important;\n  @if $hover == 1 {\n    &:hover {\n      color: darken( $color, 8% ) !important;\n    }\n  }\n}\n\n","// select options\nselect {\n  & > option {\n    color: $colorDocument !important;\n  }\n}\n\n// clickable controls\nselect,\noption,\nbutton,\ninput[type=\"button\"],\ninput[type=\"reset\"],\ninput[type=\"submit\"],\ninput[type=\"range\"],\ninput[type=\"date\"] {\n  cursor: pointer;\n}\n\n// range sliders\n@mixin sliderTrack {\n  display: block;\n  width: 100%;\n  height: 3px;\n  background: $colorDocument;\n  color: transparent !important;\n  border-color: transparent !important;\n  border-radius: $lineJoin !important;\n  border: 0 !important;\n}\n@mixin sliderThumb {\n  display: block;\n  width: 1.2em;\n  height: 1.2em;\n  margin: -.55em 0 0 0;\n  border-radius: 50%;\n  box-shadow: $shadowPaper;\n  background: $colorSuccess;\n  color: transparent !important;\n  border-color: transparent !important;\n  border: 0 !important;\n}\ninput[type=\"range\"] {\n  width: 100%;\n  // track\n  &::-webkit-slider-runnable-track { @include sliderTrack; }\n  &::-moz-range-track { @include sliderTrack; }\n  &::-ms-track { @include sliderTrack; }\n  // thumb\n  &::-webkit-slider-thumb { -webkit-appearance: none; @include sliderThumb; }\n  &::-moz-range-thumb { @include sliderThumb; }\n  &::-ms-thumb { @include sliderThumb; }\n}\n\n// row container for a form element\n.form-row {\n  display: block;\n  margin: 0 0 calc( $padSpace / 2 ) 0;\n\n  &:last-of-type {\n    margin: 0;\n  }\n}\n\n// common form element label text style\n.form-label {\n  display: block;\n  text-transform: uppercase;\n  font-weight: normal;\n  font-size: 80%;\n  letter-spacing: 1px;\n  color: $colorPrimary;\n}\n\n// form buttons\n.form-btn {\n  display: inline-block;\n  padding: calc( $padSpace / 2 ) $padSpace;\n  line-height: inherit;\n  border-radius: 100px;\n  background-color: $colorInfo;\n  color: $colorInfoText;\n  box-shadow: $shadowPaper;\n  @include textNoWrap;\n\n  &:hover {\n    background-color: darken( $colorInfo, 5% );\n  }\n}\n\n// custom inputs\n.form-input {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  align-items: center;\n  justify-content: stretch;\n  padding: calc( $padSpace / 2 ) $padSpace;\n  line-height: inherit;\n  color: $colorBright;\n  background-color: darken( $colorDocument, 2% );\n  border-radius: 100px;\n  box-shadow: $shadowHollow;\n\n  &:hover, &:active, &:focus {\n    background-color: darken( $colorDocument, 4% );\n  }\n  &.light {\n    background-color: lighten( $colorDocument, 4% );\n\n    &:hover {\n      background-color: lighten( $colorDocument, 6% );\n    }\n  }\n}\ntextarea.form-input {\n  overflow: auto;\n  min-width: 100%;\n  max-width: 100%;\n  min-height: 80px;\n}\n","/**\r\n * Custom prompt box\r\n */\r\n.prompt-overlay {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: fixed;\r\n  overflow: hidden;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: $colorOverlay;\r\n  z-index: ( $zindexAlerts + 100 );\r\n  pointer-events: none;\r\n  opacity: 0;\r\n\r\n  .prompt-container {\r\n    margin: 0 auto;\r\n    width: calc( 100% - ( #{$padSpace} * 2 ) );\r\n    max-width: calc( #{$sizeSmall} + ( #{$padSpace} * 2 ) );\r\n    background-color: lighten( $colorDocumentLight, 4% );\r\n    border-radius: $lineJoin;\r\n    box-shadow: $shadowBold;\r\n    transform: scale( 0.5 );\r\n\r\n    .prompt-title {\r\n      color: $colorBright;\r\n      padding: $padSpace;\r\n      border-bottom: $lineWidth $lineStyle $lineColor;\r\n    }\r\n\r\n    .prompt-message {\r\n      padding: $padSpace;\r\n    }\r\n\r\n    .prompt-input {\r\n      display: block;\r\n      overflow: hidden;\r\n      font-size: inherit;\r\n      line-height: 1.4em;\r\n      min-width: 100%;\r\n      margin: 0;\r\n      padding: $padSpace;\r\n      color: darken( $colorPrimary, 6% );\r\n      background-color: transparent;\r\n      box-shadow: none;\r\n\r\n      &:active, &:focus {\r\n        color: $colorPrimary;\r\n      }\r\n    }\r\n\r\n    .prompt-buttons {\r\n      display: flex;\r\n      flex-direction: row;\r\n      align-items: center;\r\n      justify-content: stretch;\r\n      border-top: $lineWidth $lineStyle $lineColor;\r\n\r\n      button {\r\n        display: block;\r\n        flex: 1;\r\n        cursor: pointer;\r\n        color: $colorDocumentText;\r\n        text-align: center;\r\n        text-transform: uppercase;\r\n        font-size: 90%;\r\n        line-height: 1.2em;\r\n        margin: 0;\r\n        padding: $padSpace;\r\n        border-bottom: $lineWidth $lineStyle rgba( 0, 0, 0, 0.1 );\r\n      }\r\n      .prompt-accept-btn {\r\n        background-color: rgba( 0, 0, 0, 0.05 );\r\n        color: $colorGain;\r\n\r\n        &:hover, &:active, &:focus {\r\n          background-color: rgba( 0, 0, 0, 0 );\r\n        }\r\n      }\r\n      .prompt-cancel-btn {\r\n        background-color: rgba( 0, 0, 0, 0.15 );\r\n        color: $colorLoss;\r\n\r\n        &:hover, &:active, &:focus {\r\n          background-color: rgba( 0, 0, 0, 0.1 );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  &.prompt-visible {\r\n    pointer-events: auto;\r\n    opacity: 1;\r\n\r\n    .prompt-container {\r\n      transform: scale( 1 );\r\n    }\r\n  }\r\n}\r\n","/**\n * Tooltips\n */\n$tipColor: lighten( $colorDocument, 20% );\n$tipTextColor: lighten( $colorDocument, 60% );\n\n@keyframes tooltipShowLeft {\n    0%   { opacity: 0; transform: translateX( -20px ); }\n    100% { opacity: 1; transform: translateX( -10px ); }\n}\n@keyframes tooltipShowRight {\n    0%   { opacity: 0; transform: translateX( 20px ); }\n    100% { opacity: 1; transform: translateX( 10px ); }\n}\n@keyframes tooltipShowTop {\n    0%   { opacity: 0; transform: translateY( -20px ); }\n    100% { opacity: 1; transform: translateY( -10px ); }\n}\n@keyframes tooltipShowBottom {\n    0%   { opacity: 0; transform: translateY( 20px ); }\n    100% { opacity: 1; transform: translateY( 10px ); }\n}\n.tooltip-wrap {\n  display: block;\n  position: absolute;\n  text-align: center;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  pointer-events: none;\n  transition: none;\n  border: none;\n  border-radius: $lineJoin;\n  max-width: 500px;\n  margin: 0;\n  padding: calc( $padSpace / 2 ) $padSpace;\n  font-size: 80%;\n  line-height: 1.2em;\n  color: $tipTextColor;\n  background-color: $tipColor;\n  box-shadow: $shadowBold;\n  left: 0;\n  top: 0;\n  z-index: calc( $zindexAlerts + 10 );\n\n  &.tooltip-left { animation: tooltipShowLeft $fxSpeed $fxEaseBounce forwards; }\n  &.tooltip-right { animation: tooltipShowRight $fxSpeed $fxEaseBounce forwards; }\n  &.tooltip-top { animation: tooltipShowTop $fxSpeed $fxEaseBounce forwards; }\n  &.tooltip-bottom { animation: tooltipShowBottom $fxSpeed $fxEaseBounce forwards; }\n\n  &:after { // arrow\n    content: \" \";\n    position: absolute;\n    height: 0;\n    width: 0;\n    pointer-events: none;\n    transition: none;\n    border: solid transparent;\n    border-color: transparent;\n    border-width: 5px;\n  }\n\n  &.tooltip-left:after { // arrow on right\n    left: 100%;\n    top: 50%;\n    border-left-color: $tipColor;\n    margin-top: -5px;\n  }\n  &.tooltip-right:after { // arrow on left\n    right: 100%;\n    top: 50%;\n    border-right-color: $tipColor;\n    margin-top: -5px;\n  }\n  &.tooltip-top:after { // arrow on bottom\n    top: 100%;\n    left: 50%;\n    border-top-color: $tipColor;\n    margin-left: -5px;\n  }\n  &.tooltip-bottom:after { // arrow on top\n    bottom: 100%;\n    left: 50%;\n    border-bottom-color: $tipColor;\n    margin-left: -5px;\n  }\n}\n","/**\n * Radial gradient background image colors\n */\n.bg-document-image  { @include colorImage( $colorDocument,  $colorDocumentText  ); }\n.bg-default-image   { @include colorImage( $colorDefault,   $colorDefaultText   ); }\n.bg-gain-image      { @include colorImage( $colorGain,      $colorGainText      ); }\n.bg-loss-image      { @include colorImage( $colorLoss,      $colorLossText      ); }\n.bg-primary-image   { @include colorImage( $colorPrimary,   $colorPrimaryText   ); }\n.bg-secondary-image { @include colorImage( $colorSecondary, $colorSecondaryText ); }\n.bg-success-image   { @include colorImage( $colorSuccess,   $colorSuccessText   ); }\n.bg-warning-image   { @include colorImage( $colorWarning,   $colorWarningText   ); }\n.bg-danger-image    { @include colorImage( $colorDanger,    $colorDangerText    ); }\n.bg-info-image      { @include colorImage( $colorInfo,      $colorInfoText      ); }\n.bg-grey-image      { @include colorImage( $colorGrey,      $colorGreyText      ); }\n.bg-bright-image    { @include colorImage( $colorBright,    $colorBrightText    ); }\n\n/**\n * Solid background colors\n */\n.bg-document  { @include colorBg( $colorDocument,  $colorDocumentText   ); }\n.bg-default   { @include colorBg( $colorDefault,   $colorDefaultText    ); }\n.bg-gain      { @include colorBg( $colorGain,      $colorGainText       ); }\n.bg-loss      { @include colorBg( $colorLoss,      $colorLossText       ); }\n//.bg-primary   { @include colorBg( $colorPrimary,   $colorPrimaryText    ); }\n//.bg-secondary { @include colorBg( $colorSecondary, $colorSecondaryText  ); }\n//.bg-success   { @include colorBg( $colorSuccess,   $colorSuccessText    ); }\n//.bg-warning   { @include colorBg( $colorWarning,   $colorWarningText    ); }\n//.bg-danger    { @include colorBg( $colorDanger,    $colorDangerText     ); }\n//.bg-info      { @include colorBg( $colorInfo,      $colorInfoText       ); }\n.bg-grey      { @include colorBg( $colorGrey,      $colorGreyText       ); }\n.bg-bright    { @include colorBg( $colorBright,    $colorBrightText     ); }\n\n/**\n * Solid background colors with hover/active state\n */\n.bg-document-hover  { @include colorBg( $colorDocument,  $colorDocumentText,  1 ); }\n.bg-default-hover   { @include colorBg( $colorDefault,   $colorDefaultText,   1 ); }\n.bg-gain-hover      { @include colorBg( $colorGain,      $colorGainText,      1 ); }\n.bg-loss-hover      { @include colorBg( $colorLoss,      $colorLossText,      1 ); }\n.bg-primary-hover   { @include colorBg( $colorPrimary,   $colorPrimaryText,   1 ); }\n.bg-secondary-hover { @include colorBg( $colorSecondary, $colorSecondaryText, 1 ); }\n.bg-success-hover   { @include colorBg( $colorSuccess,   $colorSuccessText,   1 ); }\n.bg-warning-hover   { @include colorBg( $colorWarning,   $colorWarningText,   1 ); }\n.bg-danger-hover    { @include colorBg( $colorDanger,    $colorDangerText,    1 ); }\n.bg-info-hover      { @include colorBg( $colorInfo,      $colorInfoText,      1 ); }\n.bg-grey-hover      { @include colorBg( $colorGrey,      $colorGreyText,      1 ); }\n.bg-bright-hover    { @include colorBg( $colorBright,    $colorBrightText,    1 ); }\n\n/**\n * Solid border colors\n */\n.border-document  { @include colorBorder( $colorDocument  ); }\n.border-default   { @include colorBorder( $colorDefault   ); }\n.border-gain      { @include colorBorder( $colorGain      ); }\n.border-loss      { @include colorBorder( $colorLoss      ); }\n//.border-primary   { @include colorBorder( $colorPrimary   ); }\n//.border-secondary { @include colorBorder( $colorSecondary ); }\n//.border-success   { @include colorBorder( $colorSuccess   ); }\n//.border-warning   { @include colorBorder( $colorWarning   ); }\n//.border-danger    { @include colorBorder( $colorDanger    ); }\n//.border-info      { @include colorBorder( $colorInfo      ); }\n.border-grey      { @include colorBorder( $colorGrey      ); }\n.border-bright    { @include colorBorder( $colorBright    ); }\n\n/**\n * Solid border colors with hover/active state\n */\n.border-document-hover  { @include colorBorder( $colorDocument,  1 ); }\n.border-default-hover   { @include colorBorder( $colorDefault,   1 ); }\n.border-gain-hover      { @include colorBorder( $colorGain,      1 ); }\n.border-loss-hover      { @include colorBorder( $colorLoss,      1 ); }\n.border-primary-hover   { @include colorBorder( $colorPrimary,   1 ); }\n.border-secondary-hover { @include colorBorder( $colorSecondary, 1 ); }\n.border-success-hover   { @include colorBorder( $colorSuccess,   1 ); }\n.border-warning-hover   { @include colorBorder( $colorWarning,   1 ); }\n.border-danger-hover    { @include colorBorder( $colorDanger,    1 ); }\n.border-info-hover      { @include colorBorder( $colorInfo,      1 ); }\n.border-grey-hover      { @include colorBorder( $colorGrey,      1 ); }\n.border-bright-hover    { @include colorBorder( $colorBright,    1 ); }\n\n/**\n * Solid text colors\n */\n.text-document  { @include colorText( $colorDocument  ); }\n.text-default   { @include colorText( $colorDefault   ); }\n.text-gain      { @include colorText( $colorGain      ); }\n.text-loss      { @include colorText( $colorLoss      ); }\n//.text-primary   { @include colorText( $colorPrimary   ); }\n//.text-secondary { @include colorText( $colorSecondary ); }\n//.text-success   { @include colorText( $colorSuccess   ); }\n//.text-warning   { @include colorText( $colorWarning   ); }\n//.text-danger    { @include colorText( $colorDanger    ); }\n//.text-info      { @include colorText( $colorInfo      ); }\n.text-grey      { @include colorText( $colorGrey      ); }\n.text-bright    { @include colorText( $colorBright    ); }\n\n/**\n * Solid text colors with hover/active state\n */\n.text-document-hover  { @include colorText( $colorDocument,  1 ); }\n.text-default-hover   { @include colorText( $colorDefault,   1 ); }\n.text-gain-hover      { @include colorText( $colorGain,      1 ); }\n.text-loss-hover      { @include colorText( $colorLoss,      1 ); }\n.text-primary-hover   { @include colorText( $colorPrimary,   1 ); }\n.text-secondary-hover { @include colorText( $colorSecondary, 1 ); }\n.text-success-hover   { @include colorText( $colorSuccess,   1 ); }\n.text-warning-hover   { @include colorText( $colorWarning,   1 ); }\n.text-danger-hover    { @include colorText( $colorDanger,    1 ); }\n.text-info-hover      { @include colorText( $colorInfo,      1 ); }\n.text-grey-hover      { @include colorText( $colorGrey,      1 ); }\n.text-bright-hover    { @include colorText( $colorBright,    1 ); }\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Dropdown.vue?vue&type=style&index=0&lang=scss&":
/*!*****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Dropdown.vue?vue&type=style&index=0&lang=scss& ***!
  \*****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/laravel-mix/node_modules/css-loader/dist/runtime/cssWithMappingToString.js */ "./node_modules/laravel-mix/node_modules/css-loader/dist/runtime/cssWithMappingToString.js");
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/laravel-mix/node_modules/css-loader/dist/runtime/api.js */ "./node_modules/laravel-mix/node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".dropdown-trigger {\n  display: inline-block;\n  cursor: pointer;\n}\n.dropdown-container {\n  display: none;\n  position: absolute;\n  transition: none;\n  left: 0;\n  top: 0;\n  min-width: 100px;\n  opacity: 0;\n  margin: 0;\n  padding: 0;\n  background-color: #1f2733;\n  border-radius: 6px;\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.4);\n  z-index: 10009;\n  padding: 1em 0;\n  min-width: 240px;\n  max-width: 420px;\n}\n.dropdown-container.left {\n  left: 0;\n  right: auto;\n}\n.dropdown-container.right {\n  left: auto;\n  right: 0;\n}\n.dropdown-container.top {\n  top: 40%;\n  bottom: auto;\n  -webkit-animation: slideUp 150ms cubic-bezier(0.215, 0.61, 0.355, 1) forwards;\n          animation: slideUp 150ms cubic-bezier(0.215, 0.61, 0.355, 1) forwards;\n}\n.dropdown-container.bottom {\n  top: auto;\n  bottom: 40%;\n  -webkit-animation: slideDown 150ms cubic-bezier(0.215, 0.61, 0.355, 1) forwards;\n          animation: slideDown 150ms cubic-bezier(0.215, 0.61, 0.355, 1) forwards;\n}\n.dropdown-container.visible {\n  display: block;\n}\n.dropdown-container > ul {\n  display: block;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n.dropdown-container > ul > li {\n  display: block;\n  margin: 0;\n  text-align: left;\n  white-space: nowrap;\n}\n.dropdown-container > ul > li + li {\n  margin-top: 2px;\n}\n.dropdown-container > ul > li.heading {\n  margin: 0 0 1em 0;\n  padding: 0 1em;\n}\n.dropdown-container > ul > li.clickable {\n  padding: 0.5em 1.6em;\n  background-color: rgba(0, 0, 0, 0);\n  line-height: 1.2rem;\n}\n.dropdown-container > ul > li.clickable:hover {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.dropdown-container > ul > li.clickable.active {\n  background-color: rgba(0, 0, 0, 0.2);\n  color: #f2a10d;\n}\n.dropdown-container > ul > li input {\n  padding: 0;\n  border-radius: 0;\n  background-color: transparent;\n  box-shadow: none;\n  line-height: 2em;\n}", "",{"version":3,"sources":["webpack://./src/market/components/Dropdown.vue","webpack://./src/market/scss/mixins.scss","webpack://./src/market/scss/variables.scss"],"names":[],"mappings":"AAuEE;EACE,qBAAA;EACA,eAAA;AAtEJ;AAyEE;EC5BA,aAAA;EACA,kBAAA;EACA,gBAAA;EACA,OAAA;EACA,MAAA;EACA,gBAAA;EACA,UAAA;EACA,SAAA;EACA,UAAA;EACA,yBAAA;EACA,kBCxCS;EDyCT,yCCsCW;EDrCX,cAAA;EDkBE,cAAA;EACA,gBAAA;EACA,gBAAA;AA1DJ;ACwCE;EACE,OAAA;EACA,WAAA;ADtCJ;ACwCE;EACE,UAAA;EACA,QAAA;ADtCJ;ACwCE;EACE,QAAA;EACA,YAAA;EACA,6EAAA;UAAA,qEAAA;ADtCJ;ACwCE;EACE,SAAA;EACA,WAAA;EACA,+EAAA;UAAA,uEAAA;ADtCJ;ACwCE;EACE,cAAA;ADtCJ;AAuCI;EACE,cAAA;EACA,gBAAA;EACA,SAAA;EACA,UAAA;AArCN;AAwCM;EACE,cAAA;EACA,SAAA;EACA,gBAAA;EACA,mBAAA;AAtCR;AAwCQ;EACE,eEjFE;AF2CZ;AAyCQ;EACE,iBAAA;EACA,cAAA;AAvCV;AA0CQ;EACE,oBAAA;EACA,kCAAA;EACA,mBAAA;AAxCV;AA0CU;EACE,oCAAA;AAxCZ;AA0CU;EACE,oCAAA;EACA,cE1DG;AFkBf;AA4CQ;EACE,UAAA;EACA,gBAAA;EACA,6BAAA;EACA,gBAAA;EACA,gBAAA;AA1CV","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"../scss/variables\";\n@import \"../scss/mixins\";\n\n\n  .dropdown-trigger {\n    display: inline-block;\n    cursor: pointer;\n  }\n\n  .dropdown-container {\n    @include commonDropdown;\n    padding: $padSpace 0;\n    min-width: 240px;\n    max-width: 420px;\n\n    & > ul {\n      display: block;\n      list-style: none;\n      margin: 0;\n      padding: 0;\n\n      // dropdown list item\n      & > li {\n        display: block;\n        margin: 0;\n        text-align: left;\n        white-space: nowrap;\n\n        & + li {\n          margin-top: $lineWidth;\n        }\n\n        &.heading {\n          margin: 0 0 $padSpace 0;\n          padding: 0 $padSpace;\n        }\n\n        &.clickable {\n          padding: calc( $padSpace / 2 ) calc( $padSpace * 1.6 );\n          background-color: rgba( black, 0 );\n          line-height: 1.2rem;\n\n          &:hover {\n            background-color: rgba( black, .1 );\n          }\n          &.active {\n            background-color: rgba( black, .2 );\n            color: $colorPrimary;\n          }\n        }\n\n        input {\n          padding: 0;\n          border-radius: 0;\n          background-color: transparent;\n          box-shadow: none;\n          line-height: 2em;\n        }\n      }\n\n    }\n  }\n","\n// prevent text from being selected\n@mixin textNoSelect {\n  -webkit-touch-callout: none; /* iOS Safari */\n  -webkit-user-select: none; /* Safari */\n  -khtml-user-select: none; /* Konqueror HTML */\n  -moz-user-select: none; /* Firefox */\n  -ms-user-select: none; /* Internet Explorer/Edge */\n  user-select: none;\n}\n\n// wrap all long text\n@mixin textWrapAll {\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  -ms-word-break: break-all;\n  word-break: break-word;\n  -ms-hyphens: auto;\n  -moz-hyphens: auto;\n  -webkit-hyphens: auto;\n  hyphens: auto;\n}\n\n// prevent text from wrapping\n@mixin textNoWrap {\n  white-space: nowrap;\n}\n\n// clip text and add ellipsis\n@mixin textClip {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n// add light border to the bottom of containers\n@mixin borderAccent {\n  border-bottom: $lineWidth solid rgba( 0, 0, 0, 0.1 );\n}\n\n// common scrollable page wrapper\n@mixin contentScroller {\n  @include contentWrapper;\n  overflow-y: auto;\n}\n\n// common dropdown/select style containers\n@mixin commonDropdown {\n  display: none;\n  position: absolute;\n  transition: none;\n  left: 0;\n  top: 0;\n  min-width: 100px;\n  opacity: 0;\n  margin: 0;\n  padding: 0;\n  background-color: lighten( $colorDocument, 3% );\n  border-radius: $lineJoin;\n  box-shadow: $shadowBold;\n  z-index: calc( $zindexAlerts + 10 );\n\n  &.left { // show from left\n    left: 0;\n    right: auto;\n  }\n  &.right { // show from right\n    left: auto;\n    right: 0;\n  }\n  &.top { // show from top\n    top: 40%;\n    bottom: auto;\n    animation: slideUp calc( $fxSpeed / 2 ) $fxEase forwards;\n  }\n  &.bottom { // show from bottom\n    top: auto;\n    bottom: 40%;\n    animation: slideDown calc( $fxSpeed / 2 ) $fxEase forwards;\n  }\n  &.visible {\n    display: block;\n  }\n}\n\n// fullscreen modifiers\n@mixin fullScreen( $fixed: 0 ) {\n  display: block;\n  overflow: hidden;\n  @if $fixed == 1 { position: fixed; }\n  @else { position: absolute; }\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n}\n\n// radial gradient background color\n@mixin bgRadial( $color ) {\n  $dark: saturate( darken( $color, 8% ), 8% );\n  $image: radial-gradient( circle, $color 0%, $dark 55% );\n  background-color: $dark;\n  background-image: $image;\n  background-position: center center;\n  background-repeat: no-repeat;\n}\n\n// radial background image gradiant effect\n@mixin colorImage( $color, $text ) {\n  background-color: $color !important;\n  background-image: radial-gradient( circle, rgba( 255, 255, 255, 0 ) 0%, rgba( 255, 255, 255, 0.1 ) 100% ) !important;\n  background-position: center center !important;\n  background-repeat: no-repeat !important;\n  color: $text !important;\n}\n\n// change background and font color\n@mixin colorBg( $color, $text, $hover: 0 ) {\n  background-color: $color !important;\n  color: $text !important;\n  @if $hover == 1 {\n    &:hover {\n      background-color: darken( $color, 5% ) !important;\n      color: desaturate( darken( $text, 5% ), 10% ) !important;\n    }\n  }\n}\n\n// change border color\n@mixin colorBorder( $color, $hover: 0 ) {\n  border-color: $color !important;\n  @if $hover == 1 {\n    &:hover {\n      border-color: desaturate( darken( $color, 8% ), 10% ) !important;\n    }\n  }\n}\n\n// change text color\n@mixin colorText( $color, $hover: 0 ) {\n  color: lighten( $color, 5% ) !important;\n  @if $hover == 1 {\n    &:hover {\n      color: darken( $color, 8% ) !important;\n    }\n  }\n}\n\n","// topbar size\n$topbarH: 62px;\n$topbarHeight: 50px;\n\n// list icons fixed size (w|h px)\n$iconSize: 46px;\n\n// spacing and padding\n$padSpace: 1em;\n$padSpaceSmall: calc($padSpace / 2);\n$colSpace: 1.2em;\n$rowSpace: 1.2em;\n$listSpace: 0.4em;\n\n// borders and lines\n$lineWidth: 2px;\n$lineStyle: solid;\n$lineColor: rgba( white, 0.02 );\n$lineJoin: 6px;\n\n// common z-index values\n$zindexUnder: -1;\n$zindexElements: 100;\n$zindexModals: 8888;\n$zindexAlerts: 9999;\n\n// base font options\n$fontSize: 17px;\n$fontSpace: 1.4em;\n$fontWeight: normal;\n$fontFamily: 'Open Sans Condensed', 'Contrail One', Capriola, Consolas, Monaco, monospace;\n$fontFixed: Consolas, Monaco, monospace;\n\n// document colors\n$colorDocument: #192029;\n$colorDocumentText: #babbbc;\n$colorDocumentLight: lighten( $colorDocument, 3% );\n$colorDocumentDark: darken( $colorDocument, 6% );\n\n//scrollbar colors\n$colorScrollTrack: lighten( $colorDocument, 3% );\n$colorScrollThumb: darken( $colorDocument, 3% );\n\n// default colors\n$colorDefault: lightgray;\n$colorDefaultText: darken( $colorDefault, 40% );\n\n// primary colors\n$colorGain: darken( yellowgreen, 10% );\n$colorGainText: darken( $colorGain, 40% );\n\n// primary colors\n$colorLoss: desaturate( red, 30% );\n$colorLossText: darken( $colorLoss, 40% );\n\n// primary colors\n$colorPrimary: desaturate( orange, 10% );\n$colorPrimaryText: darken( $colorPrimary, 40% );\n\n// secondary colors\n$colorSecondary: steelblue;\n$colorSecondaryText: darken( $colorSecondary, 40% );\n\n// success colors\n$colorSuccess: desaturate( olivedrab, 10% );\n$colorSuccessText: lighten( $colorSuccess, 45% );\n\n// warning colors\n$colorWarning: desaturate( orange, 30% );\n$colorWarningText: lighten( $colorWarning, 40% );\n\n// danger colors\n$colorDanger: desaturate( firebrick, 10% );\n$colorDangerText: lighten( $colorDanger, 40% );\n\n// info colors\n$colorInfo: darken( slategray, 15% );\n$colorInfoText: lighten( $colorInfo, 45% );\n\n// grey colors\n$colorGrey: lightslategray;\n$colorGreyText: lighten( $colorGrey, 40% );\n\n// bright colors\n$colorBright: aliceblue;\n$colorBrightText: darken( $colorBright, 40% );\n\n// other colors\n$colorText: lightgray;\n$colorOverlay: rgba( 0, 0, 0, 0.5 );\n\n// common shadow styles\n$shadowHollow: inset 0 1px 4px rgba( 0, 0, 0, 0.15 );\n$shadowBubble: inset 0 -20px 20px rgba( 0, 0, 0, 0.1 );\n$shadowPaper: 0 1px 2px rgba( 0, 0, 0, 0.2 );\n$shadowDark: 0 1px 3px rgba( 0, 0, 0, 0.3 );\n$shadowGlow: 0 0 10px rgba( 0, 0, 0, 0.2 );\n$shadowBold: 0 2px 12px rgba( 0, 0, 0, 0.4 );\n$shadowText: 1px 1px 0 rgba( 0, 0, 0, 0.3 );\n\n// transition props\n$fxSpeed: 300ms;\n$fxEase: cubic-bezier( 0.215, 0.610, 0.355, 1.000 );\n$fxEaseBounce: cubic-bezier( 0.640, -0.280, 0.050, 1.405 );\n$fxSpeedOffset: calc( #{$fxSpeed} / 3 );\n$fxSlideDist: 20px;\n$fxShrinkScale: .4;\n$fxGrowScale: 1.4;\n$fxRotateAmount: 8deg;\n\n// screen sizes\n$sizeSmall: 420px;\n$sizeMedium: 720px;\n$sizeLarge: 1280px;\n\n// screen breakpoints\n$screenSmall: \"only screen and (min-width : #{$sizeSmall})\";\n$screenMedium: \"only screen and (min-width : #{$sizeMedium})\";\n$screenLarge: \"only screen and (min-width : #{$sizeLarge})\";\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Modal.vue?vue&type=style&index=0&lang=scss&":
/*!**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Modal.vue?vue&type=style&index=0&lang=scss& ***!
  \**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/laravel-mix/node_modules/css-loader/dist/runtime/cssWithMappingToString.js */ "./node_modules/laravel-mix/node_modules/css-loader/dist/runtime/cssWithMappingToString.js");
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/laravel-mix/node_modules/css-loader/dist/runtime/api.js */ "./node_modules/laravel-mix/node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".modal-overlay {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  position: fixed;\n  overflow: hidden;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  pointer-events: auto;\n  opacity: 0;\n  z-index: 8887;\n}\n.modal-overlay .modal-container {\n  margin: 0 auto;\n  width: calc(100% - ( 1em * 2 ));\n  max-width: calc( 720px + ( 1em * 2 ) );\n  background-color: #1f2733;\n  border-radius: 6px;\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.4);\n  transform: scale(0.5);\n}\n.modal-overlay .modal-container .modal-body {\n  display: block;\n  position: relative;\n  overflow: hidden;\n  overflow-y: auto;\n  margin: 1em 0;\n  padding: 0 1em;\n  min-height: 100px;\n  max-height: calc(100vh - 150px);\n}\n.modal-overlay .modal-container .card-body {\n  border-radius: 0 0 0.357rem 0.357rem !important;\n}\n.modal-overlay.visible {\n  opacity: 1;\n}\n.modal-overlay.visible .modal-container {\n  transform: scale(1);\n}\n.modal-overlay.under {\n  pointer-events: none;\n  z-index: -1;\n}", "",{"version":3,"sources":["webpack://./src/market/components/Modal.vue","webpack://./src/market/scss/variables.scss"],"names":[],"mappings":"AAyEA;EACE,aAAA;EACA,mBAAA;EACA,mBAAA;EACA,uBAAA;EACA,eAAA;EACA,gBAAA;EACA,OAAA;EACA,MAAA;EACA,WAAA;EACA,YAAA;EACA,oCCKa;EDJb,oBAAA;EACA,UAAA;EACA,aAAA;AAxEF;AA0EE;EACE,cAAA;EACA,+BAAA;EACA,sCAAA;EACA,yBCzDiB;ED0DjB,kBC5EO;ED6EP,yCCES;EDDT,qBAAA;AAxEJ;AA0EI;EACE,cAAA;EACA,kBAAA;EACA,gBAAA;EACA,gBAAA;EACA,aAAA;EACA,cAAA;EACA,iBAAA;EACA,+BAAA;AAxEN;AA0EI;EACE,+CAAA;AAxEN;AA6EA;EACE,UAAA;AA1EF;AA2EE;EACE,mBAAA;AAzEJ;AA6EA;EACE,oBAAA;EACA,WCtGY;AD4Bd","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"../scss/variables\";\n// modal overlay\n.modal-overlay {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  position: fixed;\n  overflow: hidden;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: $colorOverlay;\n  pointer-events: auto;\n  opacity: 0;\n  z-index: calc( $zindexModals - 1 );\n\n  .modal-container {\n    margin: 0 auto;\n    width: calc( 100% - ( #{$padSpace} * 2 ) );\n    max-width: calc( #{$sizeMedium} + ( #{$padSpace} * 2 ) );\n    background-color: $colorDocumentLight;\n    border-radius: $lineJoin;\n    box-shadow: $shadowBold;\n    transform: scale( 0.5 );\n\n    .modal-body {\n      display: block;\n      position: relative;\n      overflow: hidden;\n      overflow-y: auto;\n      margin: $padSpace 0;\n      padding: 0 $padSpace;\n      min-height: 100px;\n      max-height: calc( 100vh - 150px );\n    }\n    .card-body{\n      border-radius: 0 0 0.357rem 0.357rem!important;\n    }\n  }\n}\n// visible state\n.modal-overlay.visible {\n  opacity: 1;\n  .modal-container {\n    transform: scale( 1 );\n  }\n}\n// inactive state\n.modal-overlay.under {\n  pointer-events: none;\n  z-index: $zindexUnder;\n}\n","// topbar size\n$topbarH: 62px;\n$topbarHeight: 50px;\n\n// list icons fixed size (w|h px)\n$iconSize: 46px;\n\n// spacing and padding\n$padSpace: 1em;\n$padSpaceSmall: calc($padSpace / 2);\n$colSpace: 1.2em;\n$rowSpace: 1.2em;\n$listSpace: 0.4em;\n\n// borders and lines\n$lineWidth: 2px;\n$lineStyle: solid;\n$lineColor: rgba( white, 0.02 );\n$lineJoin: 6px;\n\n// common z-index values\n$zindexUnder: -1;\n$zindexElements: 100;\n$zindexModals: 8888;\n$zindexAlerts: 9999;\n\n// base font options\n$fontSize: 17px;\n$fontSpace: 1.4em;\n$fontWeight: normal;\n$fontFamily: 'Open Sans Condensed', 'Contrail One', Capriola, Consolas, Monaco, monospace;\n$fontFixed: Consolas, Monaco, monospace;\n\n// document colors\n$colorDocument: #192029;\n$colorDocumentText: #babbbc;\n$colorDocumentLight: lighten( $colorDocument, 3% );\n$colorDocumentDark: darken( $colorDocument, 6% );\n\n//scrollbar colors\n$colorScrollTrack: lighten( $colorDocument, 3% );\n$colorScrollThumb: darken( $colorDocument, 3% );\n\n// default colors\n$colorDefault: lightgray;\n$colorDefaultText: darken( $colorDefault, 40% );\n\n// primary colors\n$colorGain: darken( yellowgreen, 10% );\n$colorGainText: darken( $colorGain, 40% );\n\n// primary colors\n$colorLoss: desaturate( red, 30% );\n$colorLossText: darken( $colorLoss, 40% );\n\n// primary colors\n$colorPrimary: desaturate( orange, 10% );\n$colorPrimaryText: darken( $colorPrimary, 40% );\n\n// secondary colors\n$colorSecondary: steelblue;\n$colorSecondaryText: darken( $colorSecondary, 40% );\n\n// success colors\n$colorSuccess: desaturate( olivedrab, 10% );\n$colorSuccessText: lighten( $colorSuccess, 45% );\n\n// warning colors\n$colorWarning: desaturate( orange, 30% );\n$colorWarningText: lighten( $colorWarning, 40% );\n\n// danger colors\n$colorDanger: desaturate( firebrick, 10% );\n$colorDangerText: lighten( $colorDanger, 40% );\n\n// info colors\n$colorInfo: darken( slategray, 15% );\n$colorInfoText: lighten( $colorInfo, 45% );\n\n// grey colors\n$colorGrey: lightslategray;\n$colorGreyText: lighten( $colorGrey, 40% );\n\n// bright colors\n$colorBright: aliceblue;\n$colorBrightText: darken( $colorBright, 40% );\n\n// other colors\n$colorText: lightgray;\n$colorOverlay: rgba( 0, 0, 0, 0.5 );\n\n// common shadow styles\n$shadowHollow: inset 0 1px 4px rgba( 0, 0, 0, 0.15 );\n$shadowBubble: inset 0 -20px 20px rgba( 0, 0, 0, 0.1 );\n$shadowPaper: 0 1px 2px rgba( 0, 0, 0, 0.2 );\n$shadowDark: 0 1px 3px rgba( 0, 0, 0, 0.3 );\n$shadowGlow: 0 0 10px rgba( 0, 0, 0, 0.2 );\n$shadowBold: 0 2px 12px rgba( 0, 0, 0, 0.4 );\n$shadowText: 1px 1px 0 rgba( 0, 0, 0, 0.3 );\n\n// transition props\n$fxSpeed: 300ms;\n$fxEase: cubic-bezier( 0.215, 0.610, 0.355, 1.000 );\n$fxEaseBounce: cubic-bezier( 0.640, -0.280, 0.050, 1.405 );\n$fxSpeedOffset: calc( #{$fxSpeed} / 3 );\n$fxSlideDist: 20px;\n$fxShrinkScale: .4;\n$fxGrowScale: 1.4;\n$fxRotateAmount: 8deg;\n\n// screen sizes\n$sizeSmall: 420px;\n$sizeMedium: 720px;\n$sizeLarge: 1280px;\n\n// screen breakpoints\n$screenSmall: \"only screen and (min-width : #{$sizeSmall})\";\n$screenMedium: \"only screen and (min-width : #{$sizeMedium})\";\n$screenLarge: \"only screen and (min-width : #{$sizeLarge})\";\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Notify.vue?vue&type=style&index=0&lang=scss&":
/*!***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Notify.vue?vue&type=style&index=0&lang=scss& ***!
  \***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/laravel-mix/node_modules/css-loader/dist/runtime/cssWithMappingToString.js */ "./node_modules/laravel-mix/node_modules/css-loader/dist/runtime/cssWithMappingToString.js");
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/laravel-mix/node_modules/css-loader/dist/runtime/api.js */ "./node_modules/laravel-mix/node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".notify-wrap {\n  display: block;\n  position: fixed;\n  pointer-events: none;\n  width: 100%;\n  max-width: 720px;\n  padding: 0 1em;\n  left: 50%;\n  bottom: 0;\n  transition: none;\n  transform: translateX(-50%);\n  z-index: 9999;\n}\n.notify-wrap .notify-alert {\n  display: block;\n  position: relative;\n  pointer-events: auto;\n  margin: 0 0 1em 0;\n  padding: 1em 2em;\n  line-height: normal;\n  background-color: lightgray;\n  color: #6d6d6d;\n  border-radius: 6px;\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.4);\n  -webkit-animation: zoomIn 300ms cubic-bezier(0.215, 0.61, 0.355, 1) forwards;\n          animation: zoomIn 300ms cubic-bezier(0.215, 0.61, 0.355, 1) forwards;\n}\n.notify-wrap .notify-alert.notify-closed {\n  -webkit-animation: zoomOut 300ms cubic-bezier(0.215, 0.61, 0.355, 1) forwards;\n          animation: zoomOut 300ms cubic-bezier(0.215, 0.61, 0.355, 1) forwards;\n}\n.notify-wrap .notify-alert.notify-success {\n  background-color: #68852c;\n  color: #d4e5b1;\n}\n.notify-wrap .notify-alert.notify-warning {\n  background-color: #d99a26;\n  color: #f7ebd4;\n}\n.notify-wrap .notify-alert.notify-error {\n  background-color: #a72d2d;\n  color: #ebb5b5;\n}\n.notify-wrap .notify-alert.notify-info {\n  background-color: #4e5a65;\n  color: #c6cdd3;\n}\n.notify-wrap .notify-alert .notify-message {\n  font-weight: normal;\n}\n.notify-wrap .notify-alert .notify-close {\n  display: inline-block;\n  position: absolute;\n  cursor: pointer;\n  top: -10px;\n  right: -10px;\n  width: 2em;\n  line-height: 1em;\n  padding: 0.5em;\n  background-color: aliceblue;\n  color: #4e5a65;\n  border-radius: 100px;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n}\n.notify-wrap .notify-alert .notify-close:hover {\n  background-color: #bde0ff;\n}", "",{"version":3,"sources":["webpack://./src/market/components/Notify.vue","webpack://./src/market/scss/variables.scss"],"names":[],"mappings":"AAiFA;EACE,cAAA;EACA,eAAA;EACA,oBAAA;EACA,WAAA;EACA,gBC0BW;EDzBX,cAAA;EACA,SAAA;EACA,SAAA;EACA,gBAAA;EACA,2BAAA;EACA,aCpEa;ADZf;AAkFE;EACE,cAAA;EACA,kBAAA;EACA,oBAAA;EACA,iBAAA;EACA,gBAAA;EACA,mBAAA;EACA,2BCzDW;ED0DX,cCzDe;ED0Df,kBCrFO;EDsFP,yCCPS;EDQT,4EAAA;UAAA,oEAAA;AAhFJ;AAkFI;EACE,6EAAA;UAAA,qEAAA;AAhFN;AAkFI;EACE,yBC/CS;EDgDT,cC/Ca;ADjCnB;AAkFI;EACE,yBC/CS;EDgDT,cC/Ca;ADjCnB;AAkFI;EACE,yBC/CQ;EDgDR,cC/CY;ADjClB;AAkFI;EACE,yBC/CM;EDgDN,cC/CU;ADjChB;AAkFI;EACE,mBAAA;AAhFN;AAkFI;EACE,qBAAA;EACA,kBAAA;EACA,eAAA;EACA,UAAA;EACA,YAAA;EACA,UAAA;EACA,gBAAA;EACA,cAAA;EACA,2BCtDQ;EDuDR,cC/DM;EDgEN,oBAAA;EACA,wCC/CQ;ADjCd;AAkFM;EACE,yBAAA;AAhFR","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"../scss/variables\";\n.notify-wrap {\n  display: block;\n  position: fixed;\n  pointer-events: none;\n  width: 100%;\n  max-width: $sizeMedium;\n  padding: 0 $padSpace;\n  left: 50%;\n  bottom: 0;\n  transition: none;\n  transform: translateX( -50% );\n  z-index: $zindexAlerts;\n\n  .notify-alert {\n    display: block;\n    position: relative;\n    pointer-events: auto;\n    margin: 0 0 $padSpace 0;\n    padding: $padSpace calc( $padSpace * 2 );\n    line-height: normal;\n    background-color: $colorDefault;\n    color: $colorDefaultText;\n    border-radius: $lineJoin;\n    box-shadow: $shadowBold;\n    animation: zoomIn $fxSpeed $fxEase forwards;\n\n    &.notify-closed {\n      animation: zoomOut $fxSpeed $fxEase forwards;\n    }\n    &.notify-success {\n      background-color: $colorSuccess;\n      color: $colorSuccessText;\n    }\n    &.notify-warning {\n      background-color: $colorWarning;\n      color: $colorWarningText;\n    }\n    &.notify-error {\n      background-color: $colorDanger;\n      color: $colorDangerText;\n    }\n    &.notify-info {\n      background-color: $colorInfo;\n      color: $colorInfoText;\n    }\n    .notify-message {\n      font-weight: normal;\n    }\n    .notify-close {\n      display: inline-block;\n      position: absolute;\n      cursor: pointer;\n      top: -10px;\n      right: -10px;\n      width: 2em;\n      line-height: 1em;\n      padding: 0.5em;\n      background-color: $colorBright;\n      color: $colorInfo;\n      border-radius: 100px;\n      box-shadow: $shadowPaper;\n\n      &:hover {\n        background-color: darken( $colorBright, 10% );\n      }\n    }\n  }\n}\n\n","// topbar size\n$topbarH: 62px;\n$topbarHeight: 50px;\n\n// list icons fixed size (w|h px)\n$iconSize: 46px;\n\n// spacing and padding\n$padSpace: 1em;\n$padSpaceSmall: calc($padSpace / 2);\n$colSpace: 1.2em;\n$rowSpace: 1.2em;\n$listSpace: 0.4em;\n\n// borders and lines\n$lineWidth: 2px;\n$lineStyle: solid;\n$lineColor: rgba( white, 0.02 );\n$lineJoin: 6px;\n\n// common z-index values\n$zindexUnder: -1;\n$zindexElements: 100;\n$zindexModals: 8888;\n$zindexAlerts: 9999;\n\n// base font options\n$fontSize: 17px;\n$fontSpace: 1.4em;\n$fontWeight: normal;\n$fontFamily: 'Open Sans Condensed', 'Contrail One', Capriola, Consolas, Monaco, monospace;\n$fontFixed: Consolas, Monaco, monospace;\n\n// document colors\n$colorDocument: #192029;\n$colorDocumentText: #babbbc;\n$colorDocumentLight: lighten( $colorDocument, 3% );\n$colorDocumentDark: darken( $colorDocument, 6% );\n\n//scrollbar colors\n$colorScrollTrack: lighten( $colorDocument, 3% );\n$colorScrollThumb: darken( $colorDocument, 3% );\n\n// default colors\n$colorDefault: lightgray;\n$colorDefaultText: darken( $colorDefault, 40% );\n\n// primary colors\n$colorGain: darken( yellowgreen, 10% );\n$colorGainText: darken( $colorGain, 40% );\n\n// primary colors\n$colorLoss: desaturate( red, 30% );\n$colorLossText: darken( $colorLoss, 40% );\n\n// primary colors\n$colorPrimary: desaturate( orange, 10% );\n$colorPrimaryText: darken( $colorPrimary, 40% );\n\n// secondary colors\n$colorSecondary: steelblue;\n$colorSecondaryText: darken( $colorSecondary, 40% );\n\n// success colors\n$colorSuccess: desaturate( olivedrab, 10% );\n$colorSuccessText: lighten( $colorSuccess, 45% );\n\n// warning colors\n$colorWarning: desaturate( orange, 30% );\n$colorWarningText: lighten( $colorWarning, 40% );\n\n// danger colors\n$colorDanger: desaturate( firebrick, 10% );\n$colorDangerText: lighten( $colorDanger, 40% );\n\n// info colors\n$colorInfo: darken( slategray, 15% );\n$colorInfoText: lighten( $colorInfo, 45% );\n\n// grey colors\n$colorGrey: lightslategray;\n$colorGreyText: lighten( $colorGrey, 40% );\n\n// bright colors\n$colorBright: aliceblue;\n$colorBrightText: darken( $colorBright, 40% );\n\n// other colors\n$colorText: lightgray;\n$colorOverlay: rgba( 0, 0, 0, 0.5 );\n\n// common shadow styles\n$shadowHollow: inset 0 1px 4px rgba( 0, 0, 0, 0.15 );\n$shadowBubble: inset 0 -20px 20px rgba( 0, 0, 0, 0.1 );\n$shadowPaper: 0 1px 2px rgba( 0, 0, 0, 0.2 );\n$shadowDark: 0 1px 3px rgba( 0, 0, 0, 0.3 );\n$shadowGlow: 0 0 10px rgba( 0, 0, 0, 0.2 );\n$shadowBold: 0 2px 12px rgba( 0, 0, 0, 0.4 );\n$shadowText: 1px 1px 0 rgba( 0, 0, 0, 0.3 );\n\n// transition props\n$fxSpeed: 300ms;\n$fxEase: cubic-bezier( 0.215, 0.610, 0.355, 1.000 );\n$fxEaseBounce: cubic-bezier( 0.640, -0.280, 0.050, 1.405 );\n$fxSpeedOffset: calc( #{$fxSpeed} / 3 );\n$fxSlideDist: 20px;\n$fxShrinkScale: .4;\n$fxGrowScale: 1.4;\n$fxRotateAmount: 8deg;\n\n// screen sizes\n$sizeSmall: 420px;\n$sizeMedium: 720px;\n$sizeLarge: 1280px;\n\n// screen breakpoints\n$screenSmall: \"only screen and (min-width : #{$sizeSmall})\";\n$screenMedium: \"only screen and (min-width : #{$sizeMedium})\";\n$screenLarge: \"only screen and (min-width : #{$sizeLarge})\";\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/SelectMenu.vue?vue&type=style&index=0&lang=scss&":
/*!*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/SelectMenu.vue?vue&type=style&index=0&lang=scss& ***!
  \*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/laravel-mix/node_modules/css-loader/dist/runtime/cssWithMappingToString.js */ "./node_modules/laravel-mix/node_modules/css-loader/dist/runtime/cssWithMappingToString.js");
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/laravel-mix/node_modules/css-loader/dist/runtime/api.js */ "./node_modules/laravel-mix/node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".select-wrap {\n  display: block;\n  position: relative;\n  text-align: left;\n  white-space: nowrap;\n}\n.select-wrap .select-trigger {\n  display: block;\n  background-color: transparent;\n  color: aliceblue;\n  width: 100%;\n  cursor: pointer;\n}\n.select-wrap .select-container {\n  display: none;\n  position: absolute;\n  transition: none;\n  left: 0;\n  top: 0;\n  min-width: 100px;\n  opacity: 0;\n  margin: 0;\n  padding: 0;\n  background-color: #1f2733;\n  border-radius: 6px;\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.4);\n  z-index: 10009;\n  padding: 0.3em 0;\n  min-width: 100%;\n}\n.select-wrap .select-container.left {\n  left: 0;\n  right: auto;\n}\n.select-wrap .select-container.right {\n  left: auto;\n  right: 0;\n}\n.select-wrap .select-container.top {\n  top: 40%;\n  bottom: auto;\n  -webkit-animation: slideUp 150ms cubic-bezier(0.215, 0.61, 0.355, 1) forwards;\n          animation: slideUp 150ms cubic-bezier(0.215, 0.61, 0.355, 1) forwards;\n}\n.select-wrap .select-container.bottom {\n  top: auto;\n  bottom: 40%;\n  -webkit-animation: slideDown 150ms cubic-bezier(0.215, 0.61, 0.355, 1) forwards;\n          animation: slideDown 150ms cubic-bezier(0.215, 0.61, 0.355, 1) forwards;\n}\n.select-wrap .select-container.visible {\n  display: block;\n}\n.select-wrap .select-container .select-list {\n  display: block;\n  list-style: none;\n  overflow: hidden;\n  overflow-y: auto;\n  min-width: 100px;\n  max-height: 200px;\n}\n.select-wrap .select-container .select-list > li {\n  display: block;\n  margin: 0;\n  padding: 0.5em 1.6em;\n  background-color: rgba(0, 0, 0, 0);\n  line-height: 1.2rem;\n  cursor: pointer;\n}\n.select-wrap .select-container .select-list > li + li {\n  margin-top: 2px;\n}\n.select-wrap .select-container .select-list > li:hover {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.select-wrap .select-container .select-list > li.active {\n  background-color: rgba(0, 0, 0, 0.2);\n  color: #f2a10d;\n}\n.select-wrap .select-elements {\n  pointer-events: none;\n  overflow: hidden;\n  max-height: 0;\n  opacity: 0;\n}", "",{"version":3,"sources":["webpack://./src/market/components/SelectMenu.vue","webpack://./src/market/scss/variables.scss","webpack://./src/market/scss/mixins.scss"],"names":[],"mappings":"AAoMA;EACE,cAAA;EACA,kBAAA;EACA,gBAAA;EACA,mBAAA;AAnMF;AAqME;EACE,cAAA;EACA,6BAAA;EACA,gBCzHU;ED0HV,WAAA;EACA,eAAA;AAnMJ;AAsME;EElKA,aAAA;EACA,kBAAA;EACA,gBAAA;EACA,OAAA;EACA,MAAA;EACA,gBAAA;EACA,UAAA;EACA,SAAA;EACA,UAAA;EACA,yBAAA;EACA,kBDxCS;ECyCT,yCDsCW;ECrCX,cAAA;EFwJE,gBAAA;EACA,eAAA;AAxLJ;AEiCE;EACE,OAAA;EACA,WAAA;AF/BJ;AEiCE;EACE,UAAA;EACA,QAAA;AF/BJ;AEiCE;EACE,QAAA;EACA,YAAA;EACA,6EAAA;UAAA,qEAAA;AF/BJ;AEiCE;EACE,SAAA;EACA,WAAA;EACA,+EAAA;UAAA,uEAAA;AF/BJ;AEiCE;EACE,cAAA;AF/BJ;AAqKI;EACE,cAAA;EACA,gBAAA;EACA,gBAAA;EACA,gBAAA;EACA,gBAAA;EACA,iBAAA;AAnKN;AAqKM;EACE,cAAA;EACA,SAAA;EACA,oBAAA;EACA,kCAAA;EACA,mBAAA;EACA,eAAA;AAnKR;AAqKQ;EACE,eCzNE;ADsDZ;AAqKQ;EACE,oCAAA;AAnKV;AAqKQ;EACE,oCAAA;EACA,cCvLK;ADoBf;AA0KE;EACE,oBAAA;EACA,gBAAA;EACA,aAAA;EACA,UAAA;AAxKJ","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"../scss/variables\";\n@import \"../scss/mixins\";\n.select-wrap {\n  display: block;\n  position: relative;\n  text-align: left;\n  white-space: nowrap;\n\n  .select-trigger {\n    display: block;\n    background-color: transparent;\n    color: $colorBright;\n    width: 100%;\n    cursor: pointer;\n  }\n\n  .select-container {\n    @include commonDropdown;\n    padding: calc( $padSpace * .3 ) 0;\n    min-width: 100%;\n\n    .select-list {\n      display: block;\n      list-style: none;\n      overflow: hidden;\n      overflow-y: auto;\n      min-width: 100px;\n      max-height: 200px;\n\n      & > li {\n        display: block;\n        margin: 0;\n        padding: calc( $padSpace / 2 ) calc( $padSpace * 1.6 );\n        background-color: rgba( black, 0 );\n        line-height: 1.2rem;\n        cursor: pointer;\n\n        & + li {\n          margin-top: $lineWidth;\n        }\n        &:hover {\n          background-color: rgba( black, .1 );\n        }\n        &.active {\n          background-color: rgba( black, .2 );\n          color: $colorPrimary;\n        }\n      }\n\n    }\n  }\n\n  .select-elements {\n    pointer-events: none;\n    overflow: hidden;\n    max-height: 0;\n    opacity: 0;\n  }\n}\n","// topbar size\n$topbarH: 62px;\n$topbarHeight: 50px;\n\n// list icons fixed size (w|h px)\n$iconSize: 46px;\n\n// spacing and padding\n$padSpace: 1em;\n$padSpaceSmall: calc($padSpace / 2);\n$colSpace: 1.2em;\n$rowSpace: 1.2em;\n$listSpace: 0.4em;\n\n// borders and lines\n$lineWidth: 2px;\n$lineStyle: solid;\n$lineColor: rgba( white, 0.02 );\n$lineJoin: 6px;\n\n// common z-index values\n$zindexUnder: -1;\n$zindexElements: 100;\n$zindexModals: 8888;\n$zindexAlerts: 9999;\n\n// base font options\n$fontSize: 17px;\n$fontSpace: 1.4em;\n$fontWeight: normal;\n$fontFamily: 'Open Sans Condensed', 'Contrail One', Capriola, Consolas, Monaco, monospace;\n$fontFixed: Consolas, Monaco, monospace;\n\n// document colors\n$colorDocument: #192029;\n$colorDocumentText: #babbbc;\n$colorDocumentLight: lighten( $colorDocument, 3% );\n$colorDocumentDark: darken( $colorDocument, 6% );\n\n//scrollbar colors\n$colorScrollTrack: lighten( $colorDocument, 3% );\n$colorScrollThumb: darken( $colorDocument, 3% );\n\n// default colors\n$colorDefault: lightgray;\n$colorDefaultText: darken( $colorDefault, 40% );\n\n// primary colors\n$colorGain: darken( yellowgreen, 10% );\n$colorGainText: darken( $colorGain, 40% );\n\n// primary colors\n$colorLoss: desaturate( red, 30% );\n$colorLossText: darken( $colorLoss, 40% );\n\n// primary colors\n$colorPrimary: desaturate( orange, 10% );\n$colorPrimaryText: darken( $colorPrimary, 40% );\n\n// secondary colors\n$colorSecondary: steelblue;\n$colorSecondaryText: darken( $colorSecondary, 40% );\n\n// success colors\n$colorSuccess: desaturate( olivedrab, 10% );\n$colorSuccessText: lighten( $colorSuccess, 45% );\n\n// warning colors\n$colorWarning: desaturate( orange, 30% );\n$colorWarningText: lighten( $colorWarning, 40% );\n\n// danger colors\n$colorDanger: desaturate( firebrick, 10% );\n$colorDangerText: lighten( $colorDanger, 40% );\n\n// info colors\n$colorInfo: darken( slategray, 15% );\n$colorInfoText: lighten( $colorInfo, 45% );\n\n// grey colors\n$colorGrey: lightslategray;\n$colorGreyText: lighten( $colorGrey, 40% );\n\n// bright colors\n$colorBright: aliceblue;\n$colorBrightText: darken( $colorBright, 40% );\n\n// other colors\n$colorText: lightgray;\n$colorOverlay: rgba( 0, 0, 0, 0.5 );\n\n// common shadow styles\n$shadowHollow: inset 0 1px 4px rgba( 0, 0, 0, 0.15 );\n$shadowBubble: inset 0 -20px 20px rgba( 0, 0, 0, 0.1 );\n$shadowPaper: 0 1px 2px rgba( 0, 0, 0, 0.2 );\n$shadowDark: 0 1px 3px rgba( 0, 0, 0, 0.3 );\n$shadowGlow: 0 0 10px rgba( 0, 0, 0, 0.2 );\n$shadowBold: 0 2px 12px rgba( 0, 0, 0, 0.4 );\n$shadowText: 1px 1px 0 rgba( 0, 0, 0, 0.3 );\n\n// transition props\n$fxSpeed: 300ms;\n$fxEase: cubic-bezier( 0.215, 0.610, 0.355, 1.000 );\n$fxEaseBounce: cubic-bezier( 0.640, -0.280, 0.050, 1.405 );\n$fxSpeedOffset: calc( #{$fxSpeed} / 3 );\n$fxSlideDist: 20px;\n$fxShrinkScale: .4;\n$fxGrowScale: 1.4;\n$fxRotateAmount: 8deg;\n\n// screen sizes\n$sizeSmall: 420px;\n$sizeMedium: 720px;\n$sizeLarge: 1280px;\n\n// screen breakpoints\n$screenSmall: \"only screen and (min-width : #{$sizeSmall})\";\n$screenMedium: \"only screen and (min-width : #{$sizeMedium})\";\n$screenLarge: \"only screen and (min-width : #{$sizeLarge})\";\n","\n// prevent text from being selected\n@mixin textNoSelect {\n  -webkit-touch-callout: none; /* iOS Safari */\n  -webkit-user-select: none; /* Safari */\n  -khtml-user-select: none; /* Konqueror HTML */\n  -moz-user-select: none; /* Firefox */\n  -ms-user-select: none; /* Internet Explorer/Edge */\n  user-select: none;\n}\n\n// wrap all long text\n@mixin textWrapAll {\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  -ms-word-break: break-all;\n  word-break: break-word;\n  -ms-hyphens: auto;\n  -moz-hyphens: auto;\n  -webkit-hyphens: auto;\n  hyphens: auto;\n}\n\n// prevent text from wrapping\n@mixin textNoWrap {\n  white-space: nowrap;\n}\n\n// clip text and add ellipsis\n@mixin textClip {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n// add light border to the bottom of containers\n@mixin borderAccent {\n  border-bottom: $lineWidth solid rgba( 0, 0, 0, 0.1 );\n}\n\n// common scrollable page wrapper\n@mixin contentScroller {\n  @include contentWrapper;\n  overflow-y: auto;\n}\n\n// common dropdown/select style containers\n@mixin commonDropdown {\n  display: none;\n  position: absolute;\n  transition: none;\n  left: 0;\n  top: 0;\n  min-width: 100px;\n  opacity: 0;\n  margin: 0;\n  padding: 0;\n  background-color: lighten( $colorDocument, 3% );\n  border-radius: $lineJoin;\n  box-shadow: $shadowBold;\n  z-index: calc( $zindexAlerts + 10 );\n\n  &.left { // show from left\n    left: 0;\n    right: auto;\n  }\n  &.right { // show from right\n    left: auto;\n    right: 0;\n  }\n  &.top { // show from top\n    top: 40%;\n    bottom: auto;\n    animation: slideUp calc( $fxSpeed / 2 ) $fxEase forwards;\n  }\n  &.bottom { // show from bottom\n    top: auto;\n    bottom: 40%;\n    animation: slideDown calc( $fxSpeed / 2 ) $fxEase forwards;\n  }\n  &.visible {\n    display: block;\n  }\n}\n\n// fullscreen modifiers\n@mixin fullScreen( $fixed: 0 ) {\n  display: block;\n  overflow: hidden;\n  @if $fixed == 1 { position: fixed; }\n  @else { position: absolute; }\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n}\n\n// radial gradient background color\n@mixin bgRadial( $color ) {\n  $dark: saturate( darken( $color, 8% ), 8% );\n  $image: radial-gradient( circle, $color 0%, $dark 55% );\n  background-color: $dark;\n  background-image: $image;\n  background-position: center center;\n  background-repeat: no-repeat;\n}\n\n// radial background image gradiant effect\n@mixin colorImage( $color, $text ) {\n  background-color: $color !important;\n  background-image: radial-gradient( circle, rgba( 255, 255, 255, 0 ) 0%, rgba( 255, 255, 255, 0.1 ) 100% ) !important;\n  background-position: center center !important;\n  background-repeat: no-repeat !important;\n  color: $text !important;\n}\n\n// change background and font color\n@mixin colorBg( $color, $text, $hover: 0 ) {\n  background-color: $color !important;\n  color: $text !important;\n  @if $hover == 1 {\n    &:hover {\n      background-color: darken( $color, 5% ) !important;\n      color: desaturate( darken( $text, 5% ), 10% ) !important;\n    }\n  }\n}\n\n// change border color\n@mixin colorBorder( $color, $hover: 0 ) {\n  border-color: $color !important;\n  @if $hover == 1 {\n    &:hover {\n      border-color: desaturate( darken( $color, 8% ), 10% ) !important;\n    }\n  }\n}\n\n// change text color\n@mixin colorText( $color, $hover: 0 ) {\n  color: lighten( $color, 5% ) !important;\n  @if $hover == 1 {\n    &:hover {\n      color: darken( $color, 8% ) !important;\n    }\n  }\n}\n\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Spinner.vue?vue&type=style&index=0&lang=scss&":
/*!****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Spinner.vue?vue&type=style&index=0&lang=scss& ***!
  \****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/laravel-mix/node_modules/css-loader/dist/runtime/cssWithMappingToString.js */ "./node_modules/laravel-mix/node_modules/css-loader/dist/runtime/cssWithMappingToString.js");
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/laravel-mix/node_modules/css-loader/dist/runtime/api.js */ "./node_modules/laravel-mix/node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, "@-webkit-keyframes showSpinner {\n0% {\n    opacity: 0;\n}\n100% {\n    opacity: 1;\n}\n}\n@keyframes showSpinner {\n0% {\n    opacity: 0;\n}\n100% {\n    opacity: 1;\n}\n}\n@-webkit-keyframes spinRight {\n0% {\n    transform: rotate(0deg);\n}\n100% {\n    transform: rotate(359deg);\n}\n}\n@keyframes spinRight {\n0% {\n    transform: rotate(0deg);\n}\n100% {\n    transform: rotate(359deg);\n}\n}\n@-webkit-keyframes spinLeft {\n0% {\n    transform: rotate(359deg);\n}\n100% {\n    transform: rotate(0deg);\n}\n}\n@keyframes spinLeft {\n0% {\n    transform: rotate(359deg);\n}\n100% {\n    transform: rotate(0deg);\n}\n}\n.spinner-overlay {\n  display: none;\n  position: relative;\n  overflow: hidden;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  width: 100%;\n  height: 100%;\n  left: 0;\n  top: 0;\n}\n.spinner-overlay.visible {\n  display: flex;\n}\n.spinner-overlay.fixed {\n  position: fixed;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 9989;\n}\n.spinner-overlay.abs {\n  position: absolute;\n  background-color: rgba(0, 0, 0, 0.2);\n  z-index: auto;\n}\n.spinner-overlay.rounded {\n  border-radius: 6px;\n}\n.spinner-overlay .spinner-content {\n  position: relative;\n  -webkit-animation: showSpinner 300ms cubic-bezier(0.215, 0.61, 0.355, 1) forwards;\n          animation: showSpinner 300ms cubic-bezier(0.215, 0.61, 0.355, 1) forwards;\n}\n.spinner-overlay .spinner-content .spinner-wheel {\n  position: relative;\n  margin: 0 auto;\n  width: 42px;\n  height: 42px;\n  cursor: pointer;\n}\n.spinner-overlay .spinner-content .spinner-wheel:before, .spinner-overlay .spinner-content .spinner-wheel:after {\n  content: \"\";\n  display: block;\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  border: 4px solid #f2a10d;\n  border-radius: 100%;\n  transition: none;\n}\n.spinner-overlay .spinner-content .spinner-wheel:before {\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);\n  border-top-color: transparent;\n  opacity: 0.9;\n  z-index: 2;\n  -webkit-animation: spinRight 1s linear infinite;\n          animation: spinRight 1s linear infinite;\n}\n.spinner-overlay .spinner-content .spinner-wheel:after {\n  border-top-color: transparent;\n  border-bottom-color: transparent;\n  opacity: 0.2;\n  z-index: 1;\n  -webkit-animation: spinLeft 1.5s linear infinite;\n          animation: spinLeft 1.5s linear infinite;\n}\n.spinner-overlay .spinner-content .spinner-messge {\n  display: block;\n  pointer-events: none;\n  margin: 0.4em 0 0 0;\n  font-size: 80%;\n  line-height: 1em;\n  text-transform: uppercase;\n  color: #fff;\n  opacity: 0.4;\n}\n.spinner-overlay.failed .spinner-content .spinner-wheel:before,\n.spinner-overlay.failed .spinner-content .spinner-wheel:after {\n  -webkit-animation: none;\n          animation: none;\n  border-color: #a72d2d;\n}", "",{"version":3,"sources":["webpack://./src/market/components/Spinner.vue","webpack://./src/market/scss/variables.scss"],"names":[],"mappings":"AAyEA;AACI;IAAK,UAAA;AAvEP;AAwEA;IAAO,UAAA;AArEP;AACF;AAkEA;AACI;IAAK,UAAA;AAvEP;AAwEA;IAAO,UAAA;AArEP;AACF;AAsEA;AACI;IAAK,uBAAA;AAnEP;AAoEA;IAAO,yBAAA;AAjEP;AACF;AA8DA;AACI;IAAK,uBAAA;AAnEP;AAoEA;IAAO,yBAAA;AAjEP;AACF;AAkEA;AACI;IAAK,yBAAA;AA/DP;AAgEA;IAAO,uBAAA;AA7DP;AACF;AA0DA;AACI;IAAK,yBAAA;AA/DP;AAgEA;IAAO,uBAAA;AA7DP;AACF;AAgEA;EACE,aAAA;EACA,kBAAA;EACA,gBAAA;EACA,sBAAA;EACA,mBAAA;EACA,uBAAA;EACA,kBAAA;EACA,WAAA;EACA,YAAA;EACA,OAAA;EACA,MAAA;AA9DF;AAiEE;EACE,aAAA;AA/DJ;AAmEE;EACE,eAAA;EACA,oCCnBW;EDoBX,aAAA;AAjEJ;AAqEE;EACE,kBAAA;EACA,oCAAA;EACA,aAAA;AAnEJ;AAuEE;EACE,kBCvGO;ADkCX;AAyEE;EACE,kBAAA;EACA,iFAAA;UAAA,yEAAA;AAvEJ;AAyEI;EACE,kBAAA;EACA,cAAA;EACA,WAAA;EACA,YAAA;EACA,eAAA;AAvEN;AAyEM;EACE,WAAA;EACA,cAAA;EACA,kBAAA;EACA,OAAA;EACA,MAAA;EACA,WAAA;EACA,YAAA;EACA,yBAAA;EACA,mBAAA;EACA,gBAAA;AAvER;AAyEM;EACE,wCCtDK;EDuDL,6BAAA;EACA,YAAA;EACA,UAAA;EACA,+CAAA;UAAA,uCAAA;AAvER;AAyEM;EACE,6BAAA;EACA,gCAAA;EACA,YAAA;EACA,UAAA;EACA,gDAAA;UAAA,wCAAA;AAvER;AA2EI;EACE,cAAA;EACA,oBAAA;EACA,mBAAA;EACA,cAAA;EACA,gBAAA;EACA,yBAAA;EACA,WAAA;EACA,YAAA;AAzEN;AA+EI;;EAEE,uBAAA;UAAA,eAAA;EACA,qBC7GQ;ADgCd","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"../scss/variables\";\n@keyframes showSpinner {\n    0% { opacity: 0; }\n  100% { opacity: 1; }\n}\n@keyframes spinRight {\n    0% { transform: rotate( 0deg ); }\n  100% { transform: rotate( 359deg ); }\n}\n@keyframes spinLeft {\n    0% { transform: rotate( 359deg ); }\n  100% { transform: rotate( 0deg ); }\n}\n\n// inner content spinner\n.spinner-overlay {\n  display: none;\n  position: relative;\n  overflow: hidden;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n  width: 100%;\n  height: 100%;\n  left: 0;\n  top: 0;\n\n  // visible state\n  &.visible {\n    display: flex;\n  }\n\n  // full-page fixed spinner with overlay\n  &.fixed {\n    position: fixed;\n    background-color: $colorOverlay;\n    z-index: calc( $zindexAlerts - 10 );\n  }\n\n  // absolute positioned spinner with overlay\n  &.abs {\n    position: absolute;\n    background-color: rgba( black, .2 );\n    z-index: auto;\n  }\n\n  // rounded edges\n  &.rounded {\n    border-radius: $lineJoin;\n  }\n\n  // main flex centered content\n  .spinner-content {\n    position: relative;\n    animation: showSpinner $fxSpeed $fxEase forwards;\n\n    .spinner-wheel {\n      position: relative;\n      margin: 0 auto;\n      width: 42px;\n      height: 42px;\n      cursor: pointer;\n\n      &:before, &:after {\n        content: '';\n        display: block;\n        position: absolute;\n        left: 0;\n        top: 0;\n        width: 100%;\n        height: 100%;\n        border: 4px solid $colorPrimary;\n        border-radius: 100%;\n        transition: none;\n      }\n      &:before {\n        box-shadow: $shadowDark;\n        border-top-color: transparent;\n        opacity: 0.9;\n        z-index: 2;\n        animation: spinRight 1s linear infinite;\n      }\n      &:after {\n        border-top-color: transparent;\n        border-bottom-color: transparent;\n        opacity: 0.2;\n        z-index: 1;\n        animation: spinLeft 1.5s linear infinite;\n      }\n    }\n\n    .spinner-messge {\n      display: block;\n      pointer-events: none;\n      margin: .4em 0 0 0;\n      font-size: 80%;\n      line-height: 1em;\n      text-transform: uppercase;\n      color: #fff;\n      opacity: 0.4;\n    }\n  }\n\n  // failed state\n  &.failed {\n    .spinner-content .spinner-wheel:before,\n    .spinner-content .spinner-wheel:after {\n      animation: none;\n      border-color: $colorDanger;\n    }\n  }\n\n}\n","// topbar size\n$topbarH: 62px;\n$topbarHeight: 50px;\n\n// list icons fixed size (w|h px)\n$iconSize: 46px;\n\n// spacing and padding\n$padSpace: 1em;\n$padSpaceSmall: calc($padSpace / 2);\n$colSpace: 1.2em;\n$rowSpace: 1.2em;\n$listSpace: 0.4em;\n\n// borders and lines\n$lineWidth: 2px;\n$lineStyle: solid;\n$lineColor: rgba( white, 0.02 );\n$lineJoin: 6px;\n\n// common z-index values\n$zindexUnder: -1;\n$zindexElements: 100;\n$zindexModals: 8888;\n$zindexAlerts: 9999;\n\n// base font options\n$fontSize: 17px;\n$fontSpace: 1.4em;\n$fontWeight: normal;\n$fontFamily: 'Open Sans Condensed', 'Contrail One', Capriola, Consolas, Monaco, monospace;\n$fontFixed: Consolas, Monaco, monospace;\n\n// document colors\n$colorDocument: #192029;\n$colorDocumentText: #babbbc;\n$colorDocumentLight: lighten( $colorDocument, 3% );\n$colorDocumentDark: darken( $colorDocument, 6% );\n\n//scrollbar colors\n$colorScrollTrack: lighten( $colorDocument, 3% );\n$colorScrollThumb: darken( $colorDocument, 3% );\n\n// default colors\n$colorDefault: lightgray;\n$colorDefaultText: darken( $colorDefault, 40% );\n\n// primary colors\n$colorGain: darken( yellowgreen, 10% );\n$colorGainText: darken( $colorGain, 40% );\n\n// primary colors\n$colorLoss: desaturate( red, 30% );\n$colorLossText: darken( $colorLoss, 40% );\n\n// primary colors\n$colorPrimary: desaturate( orange, 10% );\n$colorPrimaryText: darken( $colorPrimary, 40% );\n\n// secondary colors\n$colorSecondary: steelblue;\n$colorSecondaryText: darken( $colorSecondary, 40% );\n\n// success colors\n$colorSuccess: desaturate( olivedrab, 10% );\n$colorSuccessText: lighten( $colorSuccess, 45% );\n\n// warning colors\n$colorWarning: desaturate( orange, 30% );\n$colorWarningText: lighten( $colorWarning, 40% );\n\n// danger colors\n$colorDanger: desaturate( firebrick, 10% );\n$colorDangerText: lighten( $colorDanger, 40% );\n\n// info colors\n$colorInfo: darken( slategray, 15% );\n$colorInfoText: lighten( $colorInfo, 45% );\n\n// grey colors\n$colorGrey: lightslategray;\n$colorGreyText: lighten( $colorGrey, 40% );\n\n// bright colors\n$colorBright: aliceblue;\n$colorBrightText: darken( $colorBright, 40% );\n\n// other colors\n$colorText: lightgray;\n$colorOverlay: rgba( 0, 0, 0, 0.5 );\n\n// common shadow styles\n$shadowHollow: inset 0 1px 4px rgba( 0, 0, 0, 0.15 );\n$shadowBubble: inset 0 -20px 20px rgba( 0, 0, 0, 0.1 );\n$shadowPaper: 0 1px 2px rgba( 0, 0, 0, 0.2 );\n$shadowDark: 0 1px 3px rgba( 0, 0, 0, 0.3 );\n$shadowGlow: 0 0 10px rgba( 0, 0, 0, 0.2 );\n$shadowBold: 0 2px 12px rgba( 0, 0, 0, 0.4 );\n$shadowText: 1px 1px 0 rgba( 0, 0, 0, 0.3 );\n\n// transition props\n$fxSpeed: 300ms;\n$fxEase: cubic-bezier( 0.215, 0.610, 0.355, 1.000 );\n$fxEaseBounce: cubic-bezier( 0.640, -0.280, 0.050, 1.405 );\n$fxSpeedOffset: calc( #{$fxSpeed} / 3 );\n$fxSlideDist: 20px;\n$fxShrinkScale: .4;\n$fxGrowScale: 1.4;\n$fxRotateAmount: 8deg;\n\n// screen sizes\n$sizeSmall: 420px;\n$sizeMedium: 720px;\n$sizeLarge: 1280px;\n\n// screen breakpoints\n$screenSmall: \"only screen and (min-width : #{$sizeSmall})\";\n$screenMedium: \"only screen and (min-width : #{$sizeMedium})\";\n$screenLarge: \"only screen and (min-width : #{$sizeLarge})\";\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Tabs.vue?vue&type=style&index=0&lang=scss&":
/*!*************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Tabs.vue?vue&type=style&index=0&lang=scss& ***!
  \*************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/laravel-mix/node_modules/css-loader/dist/runtime/cssWithMappingToString.js */ "./node_modules/laravel-mix/node_modules/css-loader/dist/runtime/cssWithMappingToString.js");
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/laravel-mix/node_modules/css-loader/dist/runtime/api.js */ "./node_modules/laravel-mix/node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, "@-webkit-keyframes showDropMenu {\n0% {\n    transform: scale(0.5);\n    opacity: 0;\n}\n100% {\n    transform: scale(1);\n    opacity: 1;\n}\n}\n@keyframes showDropMenu {\n0% {\n    transform: scale(0.5);\n    opacity: 0;\n}\n100% {\n    transform: scale(1);\n    opacity: 1;\n}\n}\n.tabs-wrap {\n  display: block;\n  position: relative;\n}\n.tabs-wrap .tabs-toggle {\n  display: block;\n  cursor: pointer;\n  padding: 0.6em 1em;\n  color: steelblue;\n  background-color: rgba(0, 0, 0, 0.1);\n  border-radius: 6px 6px 0 0;\n}\n.tabs-wrap .tabs-nav {\n  display: block;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n.tabs-wrap .tabs-nav button {\n  display: block;\n  text-align: center;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n.tabs-wrap .tabs-nav button.active {\n  color: aliceblue;\n}\n.tabs-wrap .tabs-drop {\n  display: none;\n  position: absolute;\n  padding: 0.5em 0;\n  left: 0;\n  top: 0;\n  background-color: #283442;\n  border-radius: 6px;\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.4);\n  -webkit-animation: showDropMenu 300ms cubic-bezier(0.64, -0.28, 0.05, 1.405) forwards;\n          animation: showDropMenu 300ms cubic-bezier(0.64, -0.28, 0.05, 1.405) forwards;\n  z-index: 2;\n}\n.tabs-wrap .tabs-drop.visible {\n  display: block;\n}\n.tabs-wrap .tabs-drop button {\n  width: 100%;\n  text-align: left;\n  padding: 0.5em 1em;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.02);\n  background-color: rgba(0, 0, 0, 0.0000001);\n}\n.tabs-wrap .tabs-drop button:last-of-type {\n  border: 0;\n}\n.tabs-wrap .tabs-drop button:hover, .tabs-wrap .tabs-drop button.active {\n  background-color: rgba(0, 0, 0, 0.05);\n}\n.tabs-wrap .tabs-inline {\n  display: flex;\n  flex-direction: row;\n  align-items: flex-end;\n  justify-content: stretch;\n}\n.tabs-wrap .tabs-inline button {\n  flex: 1;\n  padding: 0.6em 0;\n  border-bottom: 2px solid lightslategray;\n  background-color: rgba(0, 0, 0, 0.1);\n  border-radius: 6px 6px 0 0;\n}\n.tabs-wrap .tabs-inline button:hover {\n  background-color: rgba(0, 0, 0, 0.16);\n}\n.tabs-wrap .tabs-inline button.active {\n  background-color: rgba(0, 0, 0, 0.2);\n  border-color: steelblue;\n  color: steelblue;\n}\n.tabs-wrap .tabs-inline button + button {\n  margin-left: 2px;\n}\n.tabs-wrap .tabs-content {\n  display: block;\n  position: relative;\n  padding: 1em 0 0 0;\n  z-index: 1;\n}\n.tabs-wrap .tabs-content .tabs-slide {\n  display: none;\n  position: relative;\n  margin: 0;\n  padding: 0;\n}\n.tabs-wrap .tabs-content .tabs-slide.active {\n  display: block;\n}", "",{"version":3,"sources":["webpack://./src/market/components/Tabs.vue","webpack://./src/market/scss/variables.scss","webpack://./src/market/scss/mixins.scss"],"names":[],"mappings":"AAyKA;AACI;IAAK,qBAAA;IAAyB,UAAA;AAtKhC;AAuKA;IAAO,mBAAA;IAAuB,UAAA;AAnK9B;AACF;AAgKA;AACI;IAAK,qBAAA;IAAyB,UAAA;AAtKhC;AAuKA;IAAO,mBAAA;IAAuB,UAAA;AAnK9B;AACF;AAqKA;EACE,cAAA;EACA,kBAAA;AAnKF;AAqKE;EACE,cAAA;EACA,eAAA;EACA,kBAAA;EACA,gBC1Ha;ED2Hb,oCAAA;EACA,0BAAA;AAnKJ;AAsKE;EACE,cAAA;EACA,gBAAA;EACA,SAAA;EACA,UAAA;AApKJ;AAsKI;EACE,cAAA;EACA,kBAAA;EErKJ,gBAAA;EACA,uBAAA;EACA,mBAAA;AFEF;AAoKM;EACE,gBCnHM;AD/Cd;AAuKE;EACE,aAAA;EACA,kBAAA;EACA,gBAAA;EACA,OAAA;EACA,MAAA;EACA,yBAAA;EACA,kBCjMO;EDkMP,yCCnHS;EDoHT,qFAAA;UAAA,6EAAA;EACA,UAAA;AArKJ;AAuKI;EACE,cAAA;AArKN;AAuKI;EACE,WAAA;EACA,gBAAA;EACA,kBAAA;EACA,kDAAA;EACA,0CAAA;AArKN;AAuKM;EACE,SAAA;AArKR;AAuKM;EACE,qCAAA;AArKR;AA0KE;EACE,aAAA;EACA,mBAAA;EACA,qBAAA;EACA,wBAAA;AAxKJ;AA0KI;EACE,OAAA;EACA,gBAAA;EACA,uCAAA;EACA,oCAAA;EACA,0BAAA;AAxKN;AA0KM;EACE,qCAAA;AAxKR;AA0KM;EACE,oCAAA;EACA,uBCjMS;EDkMT,gBClMS;AD0BjB;AA0KM;EACE,gBClPI;AD0EZ;AA6KE;EACE,cAAA;EACA,kBAAA;EACA,kBAAA;EACA,UAAA;AA3KJ;AA6KI;EACE,aAAA;EACA,kBAAA;EACA,SAAA;EACA,UAAA;AA3KN;AA6KM;EACE,cAAA;AA3KR","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"../scss/variables\";\n@import \"../scss/mixins\";\n@keyframes showDropMenu {\n    0% { transform: scale( 0.5 ); opacity: 0; }\n  100% { transform: scale( 1 ); opacity: 1; }\n}\n\n.tabs-wrap {\n  display: block;\n  position: relative;\n\n  .tabs-toggle {\n    display: block;\n    cursor: pointer;\n    padding: calc( $padSpace * .6 ) $padSpace;\n    color: $colorSecondary;\n    background-color: rgba( black, 0.1 );\n    border-radius: $lineJoin $lineJoin 0 0;\n  }\n\n  .tabs-nav {\n    display: block;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n\n    button {\n      display: block;\n      text-align: center;\n      @include textClip;\n\n      &.active  {\n        color: $colorBright;\n      }\n    }\n  }\n\n  .tabs-drop {\n    display: none;\n    position: absolute;\n    padding: calc($padSpace / 2) 0;\n    left: 0;\n    top: 0;\n    background-color: lighten( $colorDocumentLight, 5% );\n    border-radius: $lineJoin;\n    box-shadow: $shadowBold;\n    animation: showDropMenu $fxSpeed $fxEaseBounce forwards;\n    z-index: 2;\n\n    &.visible {\n      display: block;\n    }\n    button {\n      width: 100%;\n      text-align: left;\n      padding: calc($padSpace / 2) $padSpace;\n      border-bottom: 1px $lineStyle $lineColor;\n      background-color: rgba( 0, 0, 0, 0.0000001 );\n\n      &:last-of-type {\n        border: 0;\n      }\n      &:hover, &.active {\n        background-color: rgba( 0, 0, 0, 0.05 );\n      }\n    }\n  }\n\n  .tabs-inline {\n    display: flex;\n    flex-direction: row;\n    align-items: flex-end;\n    justify-content: stretch;\n\n    button {\n      flex: 1;\n      padding: calc( $padSpace * .6 ) 0;\n      border-bottom: $lineWidth solid $colorGrey;\n      background-color: rgba( black, 0.1 );\n      border-radius: $lineJoin $lineJoin 0 0;\n\n      &:hover {\n        background-color: rgba( black, 0.16 );\n      }\n      &.active {\n        background-color: rgba( black, 0.2 );\n        border-color: $colorSecondary;\n        color: $colorSecondary;\n      }\n      & + button {\n        margin-left: $lineWidth;\n      }\n    }\n  }\n\n  .tabs-content {\n    display: block;\n    position: relative;\n    padding: $padSpace 0 0 0;\n    z-index: 1;\n\n    .tabs-slide {\n      display: none;\n      position: relative;\n      margin: 0;\n      padding: 0;\n\n      &.active {\n        display: block;\n      }\n    }\n  }\n}\n","// topbar size\n$topbarH: 62px;\n$topbarHeight: 50px;\n\n// list icons fixed size (w|h px)\n$iconSize: 46px;\n\n// spacing and padding\n$padSpace: 1em;\n$padSpaceSmall: calc($padSpace / 2);\n$colSpace: 1.2em;\n$rowSpace: 1.2em;\n$listSpace: 0.4em;\n\n// borders and lines\n$lineWidth: 2px;\n$lineStyle: solid;\n$lineColor: rgba( white, 0.02 );\n$lineJoin: 6px;\n\n// common z-index values\n$zindexUnder: -1;\n$zindexElements: 100;\n$zindexModals: 8888;\n$zindexAlerts: 9999;\n\n// base font options\n$fontSize: 17px;\n$fontSpace: 1.4em;\n$fontWeight: normal;\n$fontFamily: 'Open Sans Condensed', 'Contrail One', Capriola, Consolas, Monaco, monospace;\n$fontFixed: Consolas, Monaco, monospace;\n\n// document colors\n$colorDocument: #192029;\n$colorDocumentText: #babbbc;\n$colorDocumentLight: lighten( $colorDocument, 3% );\n$colorDocumentDark: darken( $colorDocument, 6% );\n\n//scrollbar colors\n$colorScrollTrack: lighten( $colorDocument, 3% );\n$colorScrollThumb: darken( $colorDocument, 3% );\n\n// default colors\n$colorDefault: lightgray;\n$colorDefaultText: darken( $colorDefault, 40% );\n\n// primary colors\n$colorGain: darken( yellowgreen, 10% );\n$colorGainText: darken( $colorGain, 40% );\n\n// primary colors\n$colorLoss: desaturate( red, 30% );\n$colorLossText: darken( $colorLoss, 40% );\n\n// primary colors\n$colorPrimary: desaturate( orange, 10% );\n$colorPrimaryText: darken( $colorPrimary, 40% );\n\n// secondary colors\n$colorSecondary: steelblue;\n$colorSecondaryText: darken( $colorSecondary, 40% );\n\n// success colors\n$colorSuccess: desaturate( olivedrab, 10% );\n$colorSuccessText: lighten( $colorSuccess, 45% );\n\n// warning colors\n$colorWarning: desaturate( orange, 30% );\n$colorWarningText: lighten( $colorWarning, 40% );\n\n// danger colors\n$colorDanger: desaturate( firebrick, 10% );\n$colorDangerText: lighten( $colorDanger, 40% );\n\n// info colors\n$colorInfo: darken( slategray, 15% );\n$colorInfoText: lighten( $colorInfo, 45% );\n\n// grey colors\n$colorGrey: lightslategray;\n$colorGreyText: lighten( $colorGrey, 40% );\n\n// bright colors\n$colorBright: aliceblue;\n$colorBrightText: darken( $colorBright, 40% );\n\n// other colors\n$colorText: lightgray;\n$colorOverlay: rgba( 0, 0, 0, 0.5 );\n\n// common shadow styles\n$shadowHollow: inset 0 1px 4px rgba( 0, 0, 0, 0.15 );\n$shadowBubble: inset 0 -20px 20px rgba( 0, 0, 0, 0.1 );\n$shadowPaper: 0 1px 2px rgba( 0, 0, 0, 0.2 );\n$shadowDark: 0 1px 3px rgba( 0, 0, 0, 0.3 );\n$shadowGlow: 0 0 10px rgba( 0, 0, 0, 0.2 );\n$shadowBold: 0 2px 12px rgba( 0, 0, 0, 0.4 );\n$shadowText: 1px 1px 0 rgba( 0, 0, 0, 0.3 );\n\n// transition props\n$fxSpeed: 300ms;\n$fxEase: cubic-bezier( 0.215, 0.610, 0.355, 1.000 );\n$fxEaseBounce: cubic-bezier( 0.640, -0.280, 0.050, 1.405 );\n$fxSpeedOffset: calc( #{$fxSpeed} / 3 );\n$fxSlideDist: 20px;\n$fxShrinkScale: .4;\n$fxGrowScale: 1.4;\n$fxRotateAmount: 8deg;\n\n// screen sizes\n$sizeSmall: 420px;\n$sizeMedium: 720px;\n$sizeLarge: 1280px;\n\n// screen breakpoints\n$screenSmall: \"only screen and (min-width : #{$sizeSmall})\";\n$screenMedium: \"only screen and (min-width : #{$sizeMedium})\";\n$screenLarge: \"only screen and (min-width : #{$sizeLarge})\";\n","\n// prevent text from being selected\n@mixin textNoSelect {\n  -webkit-touch-callout: none; /* iOS Safari */\n  -webkit-user-select: none; /* Safari */\n  -khtml-user-select: none; /* Konqueror HTML */\n  -moz-user-select: none; /* Firefox */\n  -ms-user-select: none; /* Internet Explorer/Edge */\n  user-select: none;\n}\n\n// wrap all long text\n@mixin textWrapAll {\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  -ms-word-break: break-all;\n  word-break: break-word;\n  -ms-hyphens: auto;\n  -moz-hyphens: auto;\n  -webkit-hyphens: auto;\n  hyphens: auto;\n}\n\n// prevent text from wrapping\n@mixin textNoWrap {\n  white-space: nowrap;\n}\n\n// clip text and add ellipsis\n@mixin textClip {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n// add light border to the bottom of containers\n@mixin borderAccent {\n  border-bottom: $lineWidth solid rgba( 0, 0, 0, 0.1 );\n}\n\n// common scrollable page wrapper\n@mixin contentScroller {\n  @include contentWrapper;\n  overflow-y: auto;\n}\n\n// common dropdown/select style containers\n@mixin commonDropdown {\n  display: none;\n  position: absolute;\n  transition: none;\n  left: 0;\n  top: 0;\n  min-width: 100px;\n  opacity: 0;\n  margin: 0;\n  padding: 0;\n  background-color: lighten( $colorDocument, 3% );\n  border-radius: $lineJoin;\n  box-shadow: $shadowBold;\n  z-index: calc( $zindexAlerts + 10 );\n\n  &.left { // show from left\n    left: 0;\n    right: auto;\n  }\n  &.right { // show from right\n    left: auto;\n    right: 0;\n  }\n  &.top { // show from top\n    top: 40%;\n    bottom: auto;\n    animation: slideUp calc( $fxSpeed / 2 ) $fxEase forwards;\n  }\n  &.bottom { // show from bottom\n    top: auto;\n    bottom: 40%;\n    animation: slideDown calc( $fxSpeed / 2 ) $fxEase forwards;\n  }\n  &.visible {\n    display: block;\n  }\n}\n\n// fullscreen modifiers\n@mixin fullScreen( $fixed: 0 ) {\n  display: block;\n  overflow: hidden;\n  @if $fixed == 1 { position: fixed; }\n  @else { position: absolute; }\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n}\n\n// radial gradient background color\n@mixin bgRadial( $color ) {\n  $dark: saturate( darken( $color, 8% ), 8% );\n  $image: radial-gradient( circle, $color 0%, $dark 55% );\n  background-color: $dark;\n  background-image: $image;\n  background-position: center center;\n  background-repeat: no-repeat;\n}\n\n// radial background image gradiant effect\n@mixin colorImage( $color, $text ) {\n  background-color: $color !important;\n  background-image: radial-gradient( circle, rgba( 255, 255, 255, 0 ) 0%, rgba( 255, 255, 255, 0.1 ) 100% ) !important;\n  background-position: center center !important;\n  background-repeat: no-repeat !important;\n  color: $text !important;\n}\n\n// change background and font color\n@mixin colorBg( $color, $text, $hover: 0 ) {\n  background-color: $color !important;\n  color: $text !important;\n  @if $hover == 1 {\n    &:hover {\n      background-color: darken( $color, 5% ) !important;\n      color: desaturate( darken( $text, 5% ), 10% ) !important;\n    }\n  }\n}\n\n// change border color\n@mixin colorBorder( $color, $hover: 0 ) {\n  border-color: $color !important;\n  @if $hover == 1 {\n    &:hover {\n      border-color: desaturate( darken( $color, 8% ), 10% ) !important;\n    }\n  }\n}\n\n// change text color\n@mixin colorText( $color, $hover: 0 ) {\n  color: lighten( $color, 5% ) !important;\n  @if $hover == 1 {\n    &:hover {\n      color: darken( $color, 8% ) !important;\n    }\n  }\n}\n\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Toggle.vue?vue&type=style&index=0&lang=scss&":
/*!***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Toggle.vue?vue&type=style&index=0&lang=scss& ***!
  \***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/laravel-mix/node_modules/css-loader/dist/runtime/cssWithMappingToString.js */ "./node_modules/laravel-mix/node_modules/css-loader/dist/runtime/cssWithMappingToString.js");
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/laravel-mix/node_modules/css-loader/dist/runtime/api.js */ "./node_modules/laravel-mix/node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".toggle-wrap {\n  display: flex;\n  position: relative;\n  flex-direction: row;\n  align-items: center;\n  justify-content: stretch;\n  width: 100%;\n  padding: 0.2em 0;\n  cursor: pointer;\n}\n.toggle-wrap .toggle-input {\n  display: inline-block;\n  position: absolute;\n  visibility: hidden;\n  max-width: 0;\n  max-height: 0;\n  left: -10000px;\n}\n.toggle-wrap .toggle-switch {\n  position: relative;\n  margin: 0 0.6em 0 0;\n  width: 2.8em;\n  border-radius: 100px;\n  background-color: #151b23;\n  box-shadow: inset 0 1px 4px rgba(0, 0, 0, 0.15);\n}\n.toggle-wrap .toggle-switch:before {\n  content: \"\";\n  display: block;\n  margin: 0 auto;\n  width: 1.4em;\n  height: 1.4em;\n  border-radius: 100%;\n  background-color: lightslategray;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n  transform: translateX(-50%);\n}\n.toggle-wrap .toggle-text {\n  -webkit-touch-callout: none;\n  /* iOS Safari */\n  -webkit-user-select: none;\n  /* Safari */\n  /* Konqueror HTML */\n  -moz-user-select: none;\n  /* Firefox */\n  -ms-user-select: none;\n  /* Internet Explorer/Edge */\n  user-select: none;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  margin: 0 0 0.15em 0;\n}\n.toggle-wrap .toggle-input:checked ~ .toggle-switch:before {\n  background-color: #68852c;\n  transform: translateX(50%);\n}", "",{"version":3,"sources":["webpack://./src/market/components/Toggle.vue","webpack://./src/market/scss/variables.scss","webpack://./src/market/scss/mixins.scss"],"names":[],"mappings":"AAoCA;EACE,aAAA;EACA,kBAAA;EACA,mBAAA;EACA,mBAAA;EACA,wBAAA;EACA,WAAA;EACA,gBAAA;EACA,eAAA;AAnCF;AAqCE;EACE,qBAAA;EACA,kBAAA;EACA,kBAAA;EACA,YAAA;EACA,aAAA;EACA,cAAA;AAnCJ;AAqCE;EACE,kBAAA;EACA,mBAAA;EACA,YAAA;EACA,oBAAA;EACA,yBAAA;EACA,+CCgCW;ADnEf;AAqCI;EACE,WAAA;EACA,cAAA;EACA,cAAA;EACA,YAAA;EACA,aAAA;EACA,mBAAA;EACA,gCCWM;EDVN,wCCwBQ;EDvBR,2BAAA;AAnCN;AAsCE;EEvEA,2BAAA;EAA6B,eAAA;EAC7B,yBAAA;EAA2B,WAAA;EACD,mBAAA;EAC1B,sBAAA;EAAwB,YAAA;EACxB,qBAAA;EAAuB,2BAAA;EACvB,iBAAA;EAsBA,gBAAA;EACA,uBAAA;EACA,mBAAA;EF6CE,oBAAA;AAxBJ;AA0BE;EACE,yBChBW;EDiBX,0BAAA;AAxBJ","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"../scss/variables\";\n@import \"../scss/mixins\";\n.toggle-wrap {\n  display: flex;\n  position: relative;\n  flex-direction: row;\n  align-items: center;\n  justify-content: stretch;\n  width: 100%;\n  padding: .2em 0;\n  cursor: pointer;\n\n  .toggle-input {\n    display: inline-block;\n    position: absolute;\n    visibility: hidden;\n    max-width: 0;\n    max-height: 0;\n    left: -10000px;\n  }\n  .toggle-switch {\n    position: relative;\n    margin: 0 .6em 0 0;\n    width: 2.8em;\n    border-radius: 100px;\n    background-color: darken( $colorDocument, 2% );\n    box-shadow: $shadowHollow;\n\n    &:before {\n      content: '';\n      display: block;\n      margin: 0 auto;\n      width: 1.4em;\n      height: 1.4em;\n      border-radius: 100%;\n      background-color: $colorGrey;\n      box-shadow: $shadowPaper;\n      transform: translateX( -50% );\n    }\n  }\n  .toggle-text {\n    @include textNoSelect;\n    @include textClip;\n    margin: 0 0 .15em 0;\n  }\n  .toggle-input:checked ~ .toggle-switch:before {\n    background-color: $colorSuccess;\n    transform: translateX( 50% );\n  }\n}\n","// topbar size\n$topbarH: 62px;\n$topbarHeight: 50px;\n\n// list icons fixed size (w|h px)\n$iconSize: 46px;\n\n// spacing and padding\n$padSpace: 1em;\n$padSpaceSmall: calc($padSpace / 2);\n$colSpace: 1.2em;\n$rowSpace: 1.2em;\n$listSpace: 0.4em;\n\n// borders and lines\n$lineWidth: 2px;\n$lineStyle: solid;\n$lineColor: rgba( white, 0.02 );\n$lineJoin: 6px;\n\n// common z-index values\n$zindexUnder: -1;\n$zindexElements: 100;\n$zindexModals: 8888;\n$zindexAlerts: 9999;\n\n// base font options\n$fontSize: 17px;\n$fontSpace: 1.4em;\n$fontWeight: normal;\n$fontFamily: 'Open Sans Condensed', 'Contrail One', Capriola, Consolas, Monaco, monospace;\n$fontFixed: Consolas, Monaco, monospace;\n\n// document colors\n$colorDocument: #192029;\n$colorDocumentText: #babbbc;\n$colorDocumentLight: lighten( $colorDocument, 3% );\n$colorDocumentDark: darken( $colorDocument, 6% );\n\n//scrollbar colors\n$colorScrollTrack: lighten( $colorDocument, 3% );\n$colorScrollThumb: darken( $colorDocument, 3% );\n\n// default colors\n$colorDefault: lightgray;\n$colorDefaultText: darken( $colorDefault, 40% );\n\n// primary colors\n$colorGain: darken( yellowgreen, 10% );\n$colorGainText: darken( $colorGain, 40% );\n\n// primary colors\n$colorLoss: desaturate( red, 30% );\n$colorLossText: darken( $colorLoss, 40% );\n\n// primary colors\n$colorPrimary: desaturate( orange, 10% );\n$colorPrimaryText: darken( $colorPrimary, 40% );\n\n// secondary colors\n$colorSecondary: steelblue;\n$colorSecondaryText: darken( $colorSecondary, 40% );\n\n// success colors\n$colorSuccess: desaturate( olivedrab, 10% );\n$colorSuccessText: lighten( $colorSuccess, 45% );\n\n// warning colors\n$colorWarning: desaturate( orange, 30% );\n$colorWarningText: lighten( $colorWarning, 40% );\n\n// danger colors\n$colorDanger: desaturate( firebrick, 10% );\n$colorDangerText: lighten( $colorDanger, 40% );\n\n// info colors\n$colorInfo: darken( slategray, 15% );\n$colorInfoText: lighten( $colorInfo, 45% );\n\n// grey colors\n$colorGrey: lightslategray;\n$colorGreyText: lighten( $colorGrey, 40% );\n\n// bright colors\n$colorBright: aliceblue;\n$colorBrightText: darken( $colorBright, 40% );\n\n// other colors\n$colorText: lightgray;\n$colorOverlay: rgba( 0, 0, 0, 0.5 );\n\n// common shadow styles\n$shadowHollow: inset 0 1px 4px rgba( 0, 0, 0, 0.15 );\n$shadowBubble: inset 0 -20px 20px rgba( 0, 0, 0, 0.1 );\n$shadowPaper: 0 1px 2px rgba( 0, 0, 0, 0.2 );\n$shadowDark: 0 1px 3px rgba( 0, 0, 0, 0.3 );\n$shadowGlow: 0 0 10px rgba( 0, 0, 0, 0.2 );\n$shadowBold: 0 2px 12px rgba( 0, 0, 0, 0.4 );\n$shadowText: 1px 1px 0 rgba( 0, 0, 0, 0.3 );\n\n// transition props\n$fxSpeed: 300ms;\n$fxEase: cubic-bezier( 0.215, 0.610, 0.355, 1.000 );\n$fxEaseBounce: cubic-bezier( 0.640, -0.280, 0.050, 1.405 );\n$fxSpeedOffset: calc( #{$fxSpeed} / 3 );\n$fxSlideDist: 20px;\n$fxShrinkScale: .4;\n$fxGrowScale: 1.4;\n$fxRotateAmount: 8deg;\n\n// screen sizes\n$sizeSmall: 420px;\n$sizeMedium: 720px;\n$sizeLarge: 1280px;\n\n// screen breakpoints\n$screenSmall: \"only screen and (min-width : #{$sizeSmall})\";\n$screenMedium: \"only screen and (min-width : #{$sizeMedium})\";\n$screenLarge: \"only screen and (min-width : #{$sizeLarge})\";\n","\n// prevent text from being selected\n@mixin textNoSelect {\n  -webkit-touch-callout: none; /* iOS Safari */\n  -webkit-user-select: none; /* Safari */\n  -khtml-user-select: none; /* Konqueror HTML */\n  -moz-user-select: none; /* Firefox */\n  -ms-user-select: none; /* Internet Explorer/Edge */\n  user-select: none;\n}\n\n// wrap all long text\n@mixin textWrapAll {\n  overflow-wrap: break-word;\n  word-wrap: break-word;\n  -ms-word-break: break-all;\n  word-break: break-word;\n  -ms-hyphens: auto;\n  -moz-hyphens: auto;\n  -webkit-hyphens: auto;\n  hyphens: auto;\n}\n\n// prevent text from wrapping\n@mixin textNoWrap {\n  white-space: nowrap;\n}\n\n// clip text and add ellipsis\n@mixin textClip {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n// add light border to the bottom of containers\n@mixin borderAccent {\n  border-bottom: $lineWidth solid rgba( 0, 0, 0, 0.1 );\n}\n\n// common scrollable page wrapper\n@mixin contentScroller {\n  @include contentWrapper;\n  overflow-y: auto;\n}\n\n// common dropdown/select style containers\n@mixin commonDropdown {\n  display: none;\n  position: absolute;\n  transition: none;\n  left: 0;\n  top: 0;\n  min-width: 100px;\n  opacity: 0;\n  margin: 0;\n  padding: 0;\n  background-color: lighten( $colorDocument, 3% );\n  border-radius: $lineJoin;\n  box-shadow: $shadowBold;\n  z-index: calc( $zindexAlerts + 10 );\n\n  &.left { // show from left\n    left: 0;\n    right: auto;\n  }\n  &.right { // show from right\n    left: auto;\n    right: 0;\n  }\n  &.top { // show from top\n    top: 40%;\n    bottom: auto;\n    animation: slideUp calc( $fxSpeed / 2 ) $fxEase forwards;\n  }\n  &.bottom { // show from bottom\n    top: auto;\n    bottom: 40%;\n    animation: slideDown calc( $fxSpeed / 2 ) $fxEase forwards;\n  }\n  &.visible {\n    display: block;\n  }\n}\n\n// fullscreen modifiers\n@mixin fullScreen( $fixed: 0 ) {\n  display: block;\n  overflow: hidden;\n  @if $fixed == 1 { position: fixed; }\n  @else { position: absolute; }\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n}\n\n// radial gradient background color\n@mixin bgRadial( $color ) {\n  $dark: saturate( darken( $color, 8% ), 8% );\n  $image: radial-gradient( circle, $color 0%, $dark 55% );\n  background-color: $dark;\n  background-image: $image;\n  background-position: center center;\n  background-repeat: no-repeat;\n}\n\n// radial background image gradiant effect\n@mixin colorImage( $color, $text ) {\n  background-color: $color !important;\n  background-image: radial-gradient( circle, rgba( 255, 255, 255, 0 ) 0%, rgba( 255, 255, 255, 0.1 ) 100% ) !important;\n  background-position: center center !important;\n  background-repeat: no-repeat !important;\n  color: $text !important;\n}\n\n// change background and font color\n@mixin colorBg( $color, $text, $hover: 0 ) {\n  background-color: $color !important;\n  color: $text !important;\n  @if $hover == 1 {\n    &:hover {\n      background-color: darken( $color, 5% ) !important;\n      color: desaturate( darken( $text, 5% ), 10% ) !important;\n    }\n  }\n}\n\n// change border color\n@mixin colorBorder( $color, $hover: 0 ) {\n  border-color: $color !important;\n  @if $hover == 1 {\n    &:hover {\n      border-color: desaturate( darken( $color, 8% ), 10% ) !important;\n    }\n  }\n}\n\n// change text color\n@mixin colorText( $color, $hover: 0 ) {\n  color: lighten( $color, 5% ) !important;\n  @if $hover == 1 {\n    &:hover {\n      color: darken( $color, 8% ) !important;\n    }\n  }\n}\n\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/TokenIcon.vue?vue&type=style&index=0&lang=scss&":
/*!******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/TokenIcon.vue?vue&type=style&index=0&lang=scss& ***!
  \******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/laravel-mix/node_modules/css-loader/dist/runtime/cssWithMappingToString.js */ "./node_modules/laravel-mix/node_modules/css-loader/dist/runtime/cssWithMappingToString.js");
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/laravel-mix/node_modules/css-loader/dist/runtime/api.js */ "./node_modules/laravel-mix/node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".tokenicon-wrap {\n  display: block;\n  position: relative;\n  width: 46px;\n  min-height: 46px;\n}\n.tokenicon-wrap .tokenicon-image {\n  display: block;\n  position: relative;\n  overflow: hidden;\n  text-align: center;\n  width: 46px;\n  height: auto;\n}\n.tokenicon-wrap .tokenicon-image.default {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n  color: #c6cdd3;\n  background-color: #4e5a65;\n  border-radius: 100%;\n  height: 46px;\n  line-height: 46px;\n  letter-spacing: -1px;\n  transform: rotate(-25deg);\n}", "",{"version":3,"sources":["webpack://./src/market/components/TokenIcon.vue"],"names":[],"mappings":"AAkCA;EACE,cAAA;EACA,kBAAA;EACA,WATS;EAUT,gBAVS;AAvBX;AAmCE;EACE,cAAA;EACA,kBAAA;EACA,gBAAA;EACA,kBAAA;EACA,WAjBO;EAkBP,YAAA;AAjCJ;AAmCI;EACE,aAAA;EACA,mBAAA;EACA,mBAAA;EACA,uBAAA;EACA,cAtBU;EAuBV,yBAxBM;EAyBN,mBAAA;EACA,YA5BK;EA6BL,iBA7BK;EA8BL,oBAAA;EACA,yBAAA;AAjCN","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n$iconSize: 46px;\n// info colors\n$colorInfo: darken( slategray, 15% );\n$colorInfoText: lighten( $colorInfo, 45% );\n\n// comp wrapper\n.tokenicon-wrap {\n  display: block;\n  position: relative;\n  width: $iconSize;\n  min-height: $iconSize;\n\n  .tokenicon-image {\n    display: block;\n    position: relative;\n    overflow: hidden;\n    text-align: center;\n    width: $iconSize;\n    height: auto;\n\n    &.default {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      justify-content: center;\n      color: $colorInfoText;\n      background-color: $colorInfo;\n      border-radius: 100%;\n      height: $iconSize;\n      line-height: $iconSize;\n      letter-spacing: -1px;\n      transform: rotate( -25deg );\n    }\n  }\n}\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/TokenList.vue?vue&type=style&index=0&lang=scss&":
/*!******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/TokenList.vue?vue&type=style&index=0&lang=scss& ***!
  \******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/laravel-mix/node_modules/css-loader/dist/runtime/cssWithMappingToString.js */ "./node_modules/laravel-mix/node_modules/css-loader/dist/runtime/cssWithMappingToString.js");
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/laravel-mix/node_modules/css-loader/dist/runtime/api.js */ "./node_modules/laravel-mix/node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".pagelist-item-chart {\n  padding: 0.5em;\n  background-image: radial-gradient(ellipse at top right, rgba(0, 0, 0, 0.2) 0%, rgba(0, 0, 0, 0) 100%);\n  border-radius: 6px;\n}", "",{"version":3,"sources":["webpack://./src/market/components/TokenList.vue","webpack://./src/market/scss/variables.scss"],"names":[],"mappings":"AAoXA;EACE,cAAA;EACA,qGAAA;EACA,kBCrWS;ADdX","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"../scss/variables\";\n.pagelist-item-chart {\n  padding: .5em;\n  background-image: radial-gradient( ellipse at top right, rgba( #000, 0.2 ) 0%, rgba( #000, 0 ) 100% );\n  border-radius: $lineJoin;\n}\n","// topbar size\n$topbarH: 62px;\n$topbarHeight: 50px;\n\n// list icons fixed size (w|h px)\n$iconSize: 46px;\n\n// spacing and padding\n$padSpace: 1em;\n$padSpaceSmall: calc($padSpace / 2);\n$colSpace: 1.2em;\n$rowSpace: 1.2em;\n$listSpace: 0.4em;\n\n// borders and lines\n$lineWidth: 2px;\n$lineStyle: solid;\n$lineColor: rgba( white, 0.02 );\n$lineJoin: 6px;\n\n// common z-index values\n$zindexUnder: -1;\n$zindexElements: 100;\n$zindexModals: 8888;\n$zindexAlerts: 9999;\n\n// base font options\n$fontSize: 17px;\n$fontSpace: 1.4em;\n$fontWeight: normal;\n$fontFamily: 'Open Sans Condensed', 'Contrail One', Capriola, Consolas, Monaco, monospace;\n$fontFixed: Consolas, Monaco, monospace;\n\n// document colors\n$colorDocument: #192029;\n$colorDocumentText: #babbbc;\n$colorDocumentLight: lighten( $colorDocument, 3% );\n$colorDocumentDark: darken( $colorDocument, 6% );\n\n//scrollbar colors\n$colorScrollTrack: lighten( $colorDocument, 3% );\n$colorScrollThumb: darken( $colorDocument, 3% );\n\n// default colors\n$colorDefault: lightgray;\n$colorDefaultText: darken( $colorDefault, 40% );\n\n// primary colors\n$colorGain: darken( yellowgreen, 10% );\n$colorGainText: darken( $colorGain, 40% );\n\n// primary colors\n$colorLoss: desaturate( red, 30% );\n$colorLossText: darken( $colorLoss, 40% );\n\n// primary colors\n$colorPrimary: desaturate( orange, 10% );\n$colorPrimaryText: darken( $colorPrimary, 40% );\n\n// secondary colors\n$colorSecondary: steelblue;\n$colorSecondaryText: darken( $colorSecondary, 40% );\n\n// success colors\n$colorSuccess: desaturate( olivedrab, 10% );\n$colorSuccessText: lighten( $colorSuccess, 45% );\n\n// warning colors\n$colorWarning: desaturate( orange, 30% );\n$colorWarningText: lighten( $colorWarning, 40% );\n\n// danger colors\n$colorDanger: desaturate( firebrick, 10% );\n$colorDangerText: lighten( $colorDanger, 40% );\n\n// info colors\n$colorInfo: darken( slategray, 15% );\n$colorInfoText: lighten( $colorInfo, 45% );\n\n// grey colors\n$colorGrey: lightslategray;\n$colorGreyText: lighten( $colorGrey, 40% );\n\n// bright colors\n$colorBright: aliceblue;\n$colorBrightText: darken( $colorBright, 40% );\n\n// other colors\n$colorText: lightgray;\n$colorOverlay: rgba( 0, 0, 0, 0.5 );\n\n// common shadow styles\n$shadowHollow: inset 0 1px 4px rgba( 0, 0, 0, 0.15 );\n$shadowBubble: inset 0 -20px 20px rgba( 0, 0, 0, 0.1 );\n$shadowPaper: 0 1px 2px rgba( 0, 0, 0, 0.2 );\n$shadowDark: 0 1px 3px rgba( 0, 0, 0, 0.3 );\n$shadowGlow: 0 0 10px rgba( 0, 0, 0, 0.2 );\n$shadowBold: 0 2px 12px rgba( 0, 0, 0, 0.4 );\n$shadowText: 1px 1px 0 rgba( 0, 0, 0, 0.3 );\n\n// transition props\n$fxSpeed: 300ms;\n$fxEase: cubic-bezier( 0.215, 0.610, 0.355, 1.000 );\n$fxEaseBounce: cubic-bezier( 0.640, -0.280, 0.050, 1.405 );\n$fxSpeedOffset: calc( #{$fxSpeed} / 3 );\n$fxSlideDist: 20px;\n$fxShrinkScale: .4;\n$fxGrowScale: 1.4;\n$fxRotateAmount: 8deg;\n\n// screen sizes\n$sizeSmall: 420px;\n$sizeMedium: 720px;\n$sizeLarge: 1280px;\n\n// screen breakpoints\n$screenSmall: \"only screen and (min-width : #{$sizeSmall})\";\n$screenMedium: \"only screen and (min-width : #{$sizeMedium})\";\n$screenLarge: \"only screen and (min-width : #{$sizeLarge})\";\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Topbar.vue?vue&type=style&index=0&lang=scss&":
/*!***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Topbar.vue?vue&type=style&index=0&lang=scss& ***!
  \***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/laravel-mix/node_modules/css-loader/dist/runtime/cssWithMappingToString.js */ "./node_modules/laravel-mix/node_modules/css-loader/dist/runtime/cssWithMappingToString.js");
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/laravel-mix/node_modules/css-loader/dist/runtime/api.js */ "./node_modules/laravel-mix/node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".topbar-wrap {\n  display: block;\n  position: relative;\n  left: 0;\n  top: 0;\n  width: 100%;\n  z-index: 110;\n}\n.topbar-wrap .topbar-main {\n  height: 50px;\n}\n.topbar-wrap .topbar-main .topbar-prices {\n  font-size: 80%;\n  line-height: 1.1em;\n  letter-spacing: 0;\n  font-weight: normal;\n}\n.topbar-wrap .topbar-main .topbar-prices > div {\n  margin-left: 0.6666666667em;\n  padding-left: 0.6666666667em;\n  border-left: 2px solid rgba(255, 255, 255, 0.02);\n}\n@media only screen and (min-width : 420px) {\n.topbar-wrap .topbar-main .topbar-prices {\n    letter-spacing: 1px;\n}\n.topbar-wrap .topbar-main .topbar-prices > div {\n    margin-left: 1em;\n    padding-left: 1em;\n}\n}\n@media (max-width: 576px) {\n.topbar-wrap .topbar-main .topbar-prices {\n    display: none;\n}\n.topbar-wrap .topbar-main .topbar-btn {\n    float: right;\n}\n}\n.topbar-wrap .topbar-main .topbar-btn {\n  display: inline-block;\n  margin: 0 0 0 0.5em;\n  font-size: 180%;\n  line-height: 1em;\n  color: lightgray;\n}\n.topbar-wrap .topbar-main .topbar-btn.pulse {\n  -webkit-animation: pulseFade 1s linear infinite;\n          animation: pulseFade 1s linear infinite;\n}\n.topbar-wrap .topbar-main .topbar-btn:before {\n  opacity: 1;\n}\n.topbar-wrap .topbar-main .topbar-btn:hover:before {\n  opacity: 0.8;\n}\n.topbar-wrap .topbar-main .topbar-dropdown {\n  display: inline-block;\n  position: relative;\n}\n.topbar-wrap.collapsed {\n  transform: translateY(-50px);\n}", "",{"version":3,"sources":["webpack://./src/market/components/Topbar.vue","webpack://./src/market/scss/variables.scss"],"names":[],"mappings":"AAmLA;EACE,cAAA;EACA,kBAAA;EACA,OAAA;EACA,MAAA;EACA,WAAA;EACA,YAAA;AAlLF;AAqLE;EACE,YC3LW;ADQf;AAsLI;EACE,cAAA;EACA,kBAAA;EACA,iBAAA;EACA,mBAAA;AApLN;AAsLM;EACE,2BAAA;EACA,4BAAA;EACA,gDAAA;AApLR;AAuLO;AAZH;IAaI,mBAAA;AApLN;AAsLM;IACE,gBCxMC;IDyMD,iBCzMC;ADqBT;AACF;AAuLI;AACI;IACI,aAAA;AArLV;AAuLM;IACI,YAAA;AArLV;AACF;AAwLI;EACE,qBAAA;EACA,mBAAA;EACA,eAAA;EACA,gBAAA;EACA,gBCvLS;ADCf;AAwLM;EACE,+CAAA;UAAA,uCAAA;AAtLR;AAyLM;EACE,UAAA;AAvLR;AAyLM;EACE,YAAA;AAvLR;AA2LI;EACE,qBAAA;EACA,kBAAA;AAzLN;AA8LE;EACE,4BAAA;AA5LJ","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"../scss/variables\";\n// topbar wrapper\n.topbar-wrap {\n  display: block;\n  position: relative;\n  left: 0;\n  top: 0;\n  width: 100%;\n  z-index: ( $zindexElements + 10 );\n\n  // main topbar container\n  .topbar-main {\n    height: $topbarHeight;\n\n    // top asset prices\n    .topbar-prices {\n      font-size: 80%;\n      line-height: 1.1em;\n      letter-spacing: 0;\n      font-weight: normal;\n\n      & > div {\n        margin-left: calc($padSpace / 1.5);\n        padding-left: calc($padSpace / 1.5);\n        border-left: $lineWidth $lineStyle $lineColor;\n      }\n\n       @media #{$screenSmall} {\n        letter-spacing: 1px;\n\n        & > div {\n          margin-left: $padSpace;\n          padding-left: $padSpace;\n        }\n      }\n    }\n    @media (max-width: 576px) {\n        .topbar-prices {\n            display: none;\n        }\n        .topbar-btn {\n            float: right;\n        }\n    }\n    // button/links\n    .topbar-btn {\n      display: inline-block;\n      margin: 0 0 0 .5em;\n      font-size: 180%;\n      line-height: 1em;\n      color: $colorDefault;\n\n      &.pulse {\n        animation: pulseFade 1s linear infinite;\n      }\n\n      &:before {\n        opacity: 1;\n      }\n      &:hover:before {\n        opacity: .8;\n      }\n    }\n    // dropdown component\n    .topbar-dropdown {\n      display: inline-block;\n      position: relative;\n    }\n  }\n\n  // collapsed mode\n  &.collapsed {\n    transform: translateY( -#{$topbarHeight} );\n  }\n}\n","// topbar size\n$topbarH: 62px;\n$topbarHeight: 50px;\n\n// list icons fixed size (w|h px)\n$iconSize: 46px;\n\n// spacing and padding\n$padSpace: 1em;\n$padSpaceSmall: calc($padSpace / 2);\n$colSpace: 1.2em;\n$rowSpace: 1.2em;\n$listSpace: 0.4em;\n\n// borders and lines\n$lineWidth: 2px;\n$lineStyle: solid;\n$lineColor: rgba( white, 0.02 );\n$lineJoin: 6px;\n\n// common z-index values\n$zindexUnder: -1;\n$zindexElements: 100;\n$zindexModals: 8888;\n$zindexAlerts: 9999;\n\n// base font options\n$fontSize: 17px;\n$fontSpace: 1.4em;\n$fontWeight: normal;\n$fontFamily: 'Open Sans Condensed', 'Contrail One', Capriola, Consolas, Monaco, monospace;\n$fontFixed: Consolas, Monaco, monospace;\n\n// document colors\n$colorDocument: #192029;\n$colorDocumentText: #babbbc;\n$colorDocumentLight: lighten( $colorDocument, 3% );\n$colorDocumentDark: darken( $colorDocument, 6% );\n\n//scrollbar colors\n$colorScrollTrack: lighten( $colorDocument, 3% );\n$colorScrollThumb: darken( $colorDocument, 3% );\n\n// default colors\n$colorDefault: lightgray;\n$colorDefaultText: darken( $colorDefault, 40% );\n\n// primary colors\n$colorGain: darken( yellowgreen, 10% );\n$colorGainText: darken( $colorGain, 40% );\n\n// primary colors\n$colorLoss: desaturate( red, 30% );\n$colorLossText: darken( $colorLoss, 40% );\n\n// primary colors\n$colorPrimary: desaturate( orange, 10% );\n$colorPrimaryText: darken( $colorPrimary, 40% );\n\n// secondary colors\n$colorSecondary: steelblue;\n$colorSecondaryText: darken( $colorSecondary, 40% );\n\n// success colors\n$colorSuccess: desaturate( olivedrab, 10% );\n$colorSuccessText: lighten( $colorSuccess, 45% );\n\n// warning colors\n$colorWarning: desaturate( orange, 30% );\n$colorWarningText: lighten( $colorWarning, 40% );\n\n// danger colors\n$colorDanger: desaturate( firebrick, 10% );\n$colorDangerText: lighten( $colorDanger, 40% );\n\n// info colors\n$colorInfo: darken( slategray, 15% );\n$colorInfoText: lighten( $colorInfo, 45% );\n\n// grey colors\n$colorGrey: lightslategray;\n$colorGreyText: lighten( $colorGrey, 40% );\n\n// bright colors\n$colorBright: aliceblue;\n$colorBrightText: darken( $colorBright, 40% );\n\n// other colors\n$colorText: lightgray;\n$colorOverlay: rgba( 0, 0, 0, 0.5 );\n\n// common shadow styles\n$shadowHollow: inset 0 1px 4px rgba( 0, 0, 0, 0.15 );\n$shadowBubble: inset 0 -20px 20px rgba( 0, 0, 0, 0.1 );\n$shadowPaper: 0 1px 2px rgba( 0, 0, 0, 0.2 );\n$shadowDark: 0 1px 3px rgba( 0, 0, 0, 0.3 );\n$shadowGlow: 0 0 10px rgba( 0, 0, 0, 0.2 );\n$shadowBold: 0 2px 12px rgba( 0, 0, 0, 0.4 );\n$shadowText: 1px 1px 0 rgba( 0, 0, 0, 0.3 );\n\n// transition props\n$fxSpeed: 300ms;\n$fxEase: cubic-bezier( 0.215, 0.610, 0.355, 1.000 );\n$fxEaseBounce: cubic-bezier( 0.640, -0.280, 0.050, 1.405 );\n$fxSpeedOffset: calc( #{$fxSpeed} / 3 );\n$fxSlideDist: 20px;\n$fxShrinkScale: .4;\n$fxGrowScale: 1.4;\n$fxRotateAmount: 8deg;\n\n// screen sizes\n$sizeSmall: 420px;\n$sizeMedium: 720px;\n$sizeLarge: 1280px;\n\n// screen breakpoints\n$screenSmall: \"only screen and (min-width : #{$sizeSmall})\";\n$screenMedium: \"only screen and (min-width : #{$sizeMedium})\";\n$screenLarge: \"only screen and (min-width : #{$sizeLarge})\";\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/WatchForm.vue?vue&type=style&index=0&lang=scss&":
/*!******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/WatchForm.vue?vue&type=style&index=0&lang=scss& ***!
  \******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/laravel-mix/node_modules/css-loader/dist/runtime/cssWithMappingToString.js */ "./node_modules/laravel-mix/node_modules/css-loader/dist/runtime/cssWithMappingToString.js");
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/laravel-mix/node_modules/css-loader/dist/runtime/api.js */ "./node_modules/laravel-mix/node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_laravel_mix_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_laravel_mix_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".watchform-overlay {\n  display: block;\n  position: fixed;\n  overflow: hidden;\n  top: calc(62px + 50px);\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0);\n  z-index: 105;\n}\n.watchform-overlay .watchform-wrap {\n  display: block;\n  position: relative;\n  background-color: #1b222c;\n}\n.watchform-overlay .watchform-wrap.collapsed {\n  position: -webkit-sticky;\n  position: sticky;\n}\n.watchform-overlay .watchform-wrap .watchform-close {\n  display: block;\n  position: absolute;\n  width: auto;\n  left: 50%;\n  top: 100%;\n  padding: 0 2em 0.6em 2em;\n  text-align: center;\n  background-color: #1b222c;\n  border-radius: 0 0 100px 100px;\n  transform: translateX(-50%);\n  box-shadow: 0 8px 4px rgba(0, 0, 0, 0.2);\n  opacity: 0;\n}\n.watchform-overlay .watchform-wrap .watchform-container {\n  display: block;\n  overflow: hidden;\n  transition: max-height 300ms cubic-bezier(0.215, 0.61, 0.355, 1);\n  max-height: 0;\n}\n.watchform-overlay .watchform-wrap .watchform-container .container {\n  padding-top: 1em;\n  padding-bottom: 2em;\n}\n.watchform-overlay.visible {\n  pointer-events: auto;\n  background-color: rgba(0, 0, 0, 0.5);\n}\n.watchform-overlay.visible .watchform-wrap {\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);\n}\n.watchform-overlay.visible .watchform-close {\n  opacity: 1;\n}\n.watchform-overlay.overflow .watchform-container {\n  overflow: visible;\n}\n.watchform-overlay.under {\n  pointer-events: none;\n  z-index: -1;\n}", "",{"version":3,"sources":["webpack://./src/market/components/WatchForm.vue","webpack://./src/market/scss/variables.scss"],"names":[],"mappings":"AA4YA;EACE,cAAA;EACA,eAAA;EACA,gBAAA;EACA,sBAAA;EACA,WAAA;EACA,YAAA;EACA,kCAAA;EACA,YAAA;AA3YF;AA8YE;EACE,cAAA;EACA,kBAAA;EACA,yBAAA;AA5YJ;AA+YI;EAGE,wBAAA;EAAA,gBAAA;AA/YN;AAmZI;EACE,cAAA;EACA,kBAAA;EACA,WAAA;EACA,SAAA;EACA,SAAA;EACA,wBAAA;EACA,kBAAA;EACA,yBAAA;EACA,8BAAA;EACA,2BAAA;EACA,wCAAA;EACA,UAAA;AAjZN;AAqZI;EACE,cAAA;EACA,gBAAA;EACA,gEAAA;EACA,aAAA;AAnZN;AAqZM;EACE,gBAAA;EACA,mBAAA;AAnZR;AAyZE;EACE,oBAAA;EACA,oCC3WW;AD5Cf;AAwZI;EAAkB,wCCvWR;AD9Cd;AAsZI;EAAmB,UAAA;AAnZvB;AAwZI;EAAuB,iBAAA;AArZ3B;AAyZE;EACE,oBAAA;EACA,WC5bU;ADqCd","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"../scss/variables\";\n// watchform\n.watchform-overlay {\n  display: block;\n  position: fixed;\n  overflow: hidden;\n  top: calc(#{$topbarH} + #{$topbarHeight});\n  width: 100%;\n  height: 100%;\n  background-color: rgba( $colorOverlay, 0 );\n  z-index: calc( $zindexElements + 5 );\n\n  // main wrapper\n  .watchform-wrap {\n    display: block;\n    position: relative;\n    background-color: darken( $colorDocumentLight, 2% );\n\n    // collapsed mode\n    &.collapsed {\n      //transform: translateY( -#{$topbarHeight} );\n      //top: -#{$topbarHeight};\n      position: sticky;\n    }\n\n    // close button\n    .watchform-close {\n      display: block;\n      position: absolute;\n      width: auto;\n      left: 50%;\n      top: 100%;\n      padding: 0 2em .6em 2em;\n      text-align: center;\n      background-color: darken( $colorDocumentLight, 2% );\n      border-radius: 0 0 100px 100px;\n      transform: translateX( -50% );\n      box-shadow: 0 8px 4px rgba( 0, 0, 0, 0.2 );\n      opacity: 0;\n    }\n\n    // main form container\n    .watchform-container {\n      display: block;\n      overflow: hidden;\n      transition: max-height $fxSpeed $fxEase;\n      max-height: 0;\n\n      .container {\n        padding-top: 1em;\n        padding-bottom: 2em;\n      }\n    }\n  }\n\n  // visible state\n  &.visible {\n    pointer-events: auto;\n    background-color: $colorOverlay;\n    .watchform-wrap { box-shadow: $shadowPaper; }\n    .watchform-close { opacity: 1; }\n  }\n\n  // allow overflow\n  &.overflow {\n    .watchform-container { overflow: visible; }\n  }\n\n  // hidden state\n  &.under {\n    pointer-events: none;\n    z-index: $zindexUnder;\n  }\n}\n","// topbar size\n$topbarH: 62px;\n$topbarHeight: 50px;\n\n// list icons fixed size (w|h px)\n$iconSize: 46px;\n\n// spacing and padding\n$padSpace: 1em;\n$padSpaceSmall: calc($padSpace / 2);\n$colSpace: 1.2em;\n$rowSpace: 1.2em;\n$listSpace: 0.4em;\n\n// borders and lines\n$lineWidth: 2px;\n$lineStyle: solid;\n$lineColor: rgba( white, 0.02 );\n$lineJoin: 6px;\n\n// common z-index values\n$zindexUnder: -1;\n$zindexElements: 100;\n$zindexModals: 8888;\n$zindexAlerts: 9999;\n\n// base font options\n$fontSize: 17px;\n$fontSpace: 1.4em;\n$fontWeight: normal;\n$fontFamily: 'Open Sans Condensed', 'Contrail One', Capriola, Consolas, Monaco, monospace;\n$fontFixed: Consolas, Monaco, monospace;\n\n// document colors\n$colorDocument: #192029;\n$colorDocumentText: #babbbc;\n$colorDocumentLight: lighten( $colorDocument, 3% );\n$colorDocumentDark: darken( $colorDocument, 6% );\n\n//scrollbar colors\n$colorScrollTrack: lighten( $colorDocument, 3% );\n$colorScrollThumb: darken( $colorDocument, 3% );\n\n// default colors\n$colorDefault: lightgray;\n$colorDefaultText: darken( $colorDefault, 40% );\n\n// primary colors\n$colorGain: darken( yellowgreen, 10% );\n$colorGainText: darken( $colorGain, 40% );\n\n// primary colors\n$colorLoss: desaturate( red, 30% );\n$colorLossText: darken( $colorLoss, 40% );\n\n// primary colors\n$colorPrimary: desaturate( orange, 10% );\n$colorPrimaryText: darken( $colorPrimary, 40% );\n\n// secondary colors\n$colorSecondary: steelblue;\n$colorSecondaryText: darken( $colorSecondary, 40% );\n\n// success colors\n$colorSuccess: desaturate( olivedrab, 10% );\n$colorSuccessText: lighten( $colorSuccess, 45% );\n\n// warning colors\n$colorWarning: desaturate( orange, 30% );\n$colorWarningText: lighten( $colorWarning, 40% );\n\n// danger colors\n$colorDanger: desaturate( firebrick, 10% );\n$colorDangerText: lighten( $colorDanger, 40% );\n\n// info colors\n$colorInfo: darken( slategray, 15% );\n$colorInfoText: lighten( $colorInfo, 45% );\n\n// grey colors\n$colorGrey: lightslategray;\n$colorGreyText: lighten( $colorGrey, 40% );\n\n// bright colors\n$colorBright: aliceblue;\n$colorBrightText: darken( $colorBright, 40% );\n\n// other colors\n$colorText: lightgray;\n$colorOverlay: rgba( 0, 0, 0, 0.5 );\n\n// common shadow styles\n$shadowHollow: inset 0 1px 4px rgba( 0, 0, 0, 0.15 );\n$shadowBubble: inset 0 -20px 20px rgba( 0, 0, 0, 0.1 );\n$shadowPaper: 0 1px 2px rgba( 0, 0, 0, 0.2 );\n$shadowDark: 0 1px 3px rgba( 0, 0, 0, 0.3 );\n$shadowGlow: 0 0 10px rgba( 0, 0, 0, 0.2 );\n$shadowBold: 0 2px 12px rgba( 0, 0, 0, 0.4 );\n$shadowText: 1px 1px 0 rgba( 0, 0, 0, 0.3 );\n\n// transition props\n$fxSpeed: 300ms;\n$fxEase: cubic-bezier( 0.215, 0.610, 0.355, 1.000 );\n$fxEaseBounce: cubic-bezier( 0.640, -0.280, 0.050, 1.405 );\n$fxSpeedOffset: calc( #{$fxSpeed} / 3 );\n$fxSlideDist: 20px;\n$fxShrinkScale: .4;\n$fxGrowScale: 1.4;\n$fxRotateAmount: 8deg;\n\n// screen sizes\n$sizeSmall: 420px;\n$sizeMedium: 720px;\n$sizeLarge: 1280px;\n\n// screen breakpoints\n$screenSmall: \"only screen and (min-width : #{$sizeSmall})\";\n$screenMedium: \"only screen and (min-width : #{$sizeMedium})\";\n$screenLarge: \"only screen and (min-width : #{$sizeLarge})\";\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/laravel-mix/node_modules/css-loader/dist/runtime/api.js":
/*!******************************************************************************!*\
  !*** ./node_modules/laravel-mix/node_modules/css-loader/dist/runtime/api.js ***!
  \******************************************************************************/
/***/ ((module) => {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
// eslint-disable-next-line func-names
module.exports = function (cssWithMappingToString) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item);

      if (item[2]) {
        return "@media ".concat(item[2], " {").concat(content, "}");
      }

      return content;
    }).join("");
  }; // import a list of modules into the list
  // eslint-disable-next-line func-names


  list.i = function (modules, mediaQuery, dedupe) {
    if (typeof modules === "string") {
      // eslint-disable-next-line no-param-reassign
      modules = [[null, modules, ""]];
    }

    var alreadyImportedModules = {};

    if (dedupe) {
      for (var i = 0; i < this.length; i++) {
        // eslint-disable-next-line prefer-destructuring
        var id = this[i][0];

        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }

    for (var _i = 0; _i < modules.length; _i++) {
      var item = [].concat(modules[_i]);

      if (dedupe && alreadyImportedModules[item[0]]) {
        // eslint-disable-next-line no-continue
        continue;
      }

      if (mediaQuery) {
        if (!item[2]) {
          item[2] = mediaQuery;
        } else {
          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);
        }
      }

      list.push(item);
    }
  };

  return list;
};

/***/ }),

/***/ "./node_modules/laravel-mix/node_modules/css-loader/dist/runtime/cssWithMappingToString.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/laravel-mix/node_modules/css-loader/dist/runtime/cssWithMappingToString.js ***!
  \*************************************************************************************************/
/***/ ((module) => {

"use strict";


function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

module.exports = function cssWithMappingToString(item) {
  var _item = _slicedToArray(item, 4),
      content = _item[1],
      cssMapping = _item[3];

  if (!cssMapping) {
    return content;
  }

  if (typeof btoa === "function") {
    // eslint-disable-next-line no-undef
    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));
    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
    var sourceMapping = "/*# ".concat(data, " */");
    var sourceURLs = cssMapping.sources.map(function (source) {
      return "/*# sourceURL=".concat(cssMapping.sourceRoot || "").concat(source, " */");
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join("\n");
  }

  return [content].join("\n");
};

/***/ }),

/***/ "./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/App.vue?vue&type=style&index=0&lang=scss&":
/*!****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/App.vue?vue&type=style&index=0&lang=scss& ***!
  \****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../../node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss& */ "./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/App.vue?vue&type=style&index=0&lang=scss&");

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__["default"], options);



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__["default"].locals || {});

/***/ }),

/***/ "./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Dropdown.vue?vue&type=style&index=0&lang=scss&":
/*!*********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Dropdown.vue?vue&type=style&index=0&lang=scss& ***!
  \*********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_Dropdown_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../../node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dropdown.vue?vue&type=style&index=0&lang=scss& */ "./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Dropdown.vue?vue&type=style&index=0&lang=scss&");

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_Dropdown_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__["default"], options);



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_Dropdown_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__["default"].locals || {});

/***/ }),

/***/ "./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Modal.vue?vue&type=style&index=0&lang=scss&":
/*!******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Modal.vue?vue&type=style&index=0&lang=scss& ***!
  \******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_Modal_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../../node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Modal.vue?vue&type=style&index=0&lang=scss& */ "./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Modal.vue?vue&type=style&index=0&lang=scss&");

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_Modal_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__["default"], options);



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_Modal_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__["default"].locals || {});

/***/ }),

/***/ "./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Notify.vue?vue&type=style&index=0&lang=scss&":
/*!*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Notify.vue?vue&type=style&index=0&lang=scss& ***!
  \*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_Notify_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../../node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Notify.vue?vue&type=style&index=0&lang=scss& */ "./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Notify.vue?vue&type=style&index=0&lang=scss&");

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_Notify_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__["default"], options);



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_Notify_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__["default"].locals || {});

/***/ }),

/***/ "./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/SelectMenu.vue?vue&type=style&index=0&lang=scss&":
/*!***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/SelectMenu.vue?vue&type=style&index=0&lang=scss& ***!
  \***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_SelectMenu_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../../node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SelectMenu.vue?vue&type=style&index=0&lang=scss& */ "./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/SelectMenu.vue?vue&type=style&index=0&lang=scss&");

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_SelectMenu_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__["default"], options);



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_SelectMenu_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__["default"].locals || {});

/***/ }),

/***/ "./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Spinner.vue?vue&type=style&index=0&lang=scss&":
/*!********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Spinner.vue?vue&type=style&index=0&lang=scss& ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_Spinner_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../../node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Spinner.vue?vue&type=style&index=0&lang=scss& */ "./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Spinner.vue?vue&type=style&index=0&lang=scss&");

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_Spinner_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__["default"], options);



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_Spinner_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__["default"].locals || {});

/***/ }),

/***/ "./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Tabs.vue?vue&type=style&index=0&lang=scss&":
/*!*****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Tabs.vue?vue&type=style&index=0&lang=scss& ***!
  \*****************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_Tabs_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../../node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tabs.vue?vue&type=style&index=0&lang=scss& */ "./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Tabs.vue?vue&type=style&index=0&lang=scss&");

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_Tabs_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__["default"], options);



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_Tabs_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__["default"].locals || {});

/***/ }),

/***/ "./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Toggle.vue?vue&type=style&index=0&lang=scss&":
/*!*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Toggle.vue?vue&type=style&index=0&lang=scss& ***!
  \*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_Toggle_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../../node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Toggle.vue?vue&type=style&index=0&lang=scss& */ "./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Toggle.vue?vue&type=style&index=0&lang=scss&");

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_Toggle_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__["default"], options);



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_Toggle_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__["default"].locals || {});

/***/ }),

/***/ "./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/TokenIcon.vue?vue&type=style&index=0&lang=scss&":
/*!**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/TokenIcon.vue?vue&type=style&index=0&lang=scss& ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_TokenIcon_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../../node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TokenIcon.vue?vue&type=style&index=0&lang=scss& */ "./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/TokenIcon.vue?vue&type=style&index=0&lang=scss&");

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_TokenIcon_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__["default"], options);



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_TokenIcon_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__["default"].locals || {});

/***/ }),

/***/ "./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/TokenList.vue?vue&type=style&index=0&lang=scss&":
/*!**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/TokenList.vue?vue&type=style&index=0&lang=scss& ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_TokenList_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../../node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TokenList.vue?vue&type=style&index=0&lang=scss& */ "./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/TokenList.vue?vue&type=style&index=0&lang=scss&");

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_TokenList_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__["default"], options);



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_TokenList_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__["default"].locals || {});

/***/ }),

/***/ "./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Topbar.vue?vue&type=style&index=0&lang=scss&":
/*!*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Topbar.vue?vue&type=style&index=0&lang=scss& ***!
  \*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_Topbar_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../../node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Topbar.vue?vue&type=style&index=0&lang=scss& */ "./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Topbar.vue?vue&type=style&index=0&lang=scss&");

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_Topbar_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__["default"], options);



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_Topbar_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__["default"].locals || {});

/***/ }),

/***/ "./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/WatchForm.vue?vue&type=style&index=0&lang=scss&":
/*!**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/WatchForm.vue?vue&type=style&index=0&lang=scss& ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_WatchForm_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../../node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WatchForm.vue?vue&type=style&index=0&lang=scss& */ "./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/WatchForm.vue?vue&type=style&index=0&lang=scss&");

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_WatchForm_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__["default"], options);



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_WatchForm_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_1__["default"].locals || {});

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var isOldIE = function isOldIE() {
  var memo;
  return function memorize() {
    if (typeof memo === 'undefined') {
      // Test for IE <= 9 as proposed by Browserhacks
      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
      // Tests for existence of standard globals is to allow style-loader
      // to operate correctly into non-standard environments
      // @see https://github.com/webpack-contrib/style-loader/issues/177
      memo = Boolean(window && document && document.all && !window.atob);
    }

    return memo;
  };
}();

var getTarget = function getTarget() {
  var memo = {};
  return function memorize(target) {
    if (typeof memo[target] === 'undefined') {
      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself

      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
        try {
          // This will throw an exception if access to iframe is blocked
          // due to cross-origin restrictions
          styleTarget = styleTarget.contentDocument.head;
        } catch (e) {
          // istanbul ignore next
          styleTarget = null;
        }
      }

      memo[target] = styleTarget;
    }

    return memo[target];
  };
}();

var stylesInDom = [];

function getIndexByIdentifier(identifier) {
  var result = -1;

  for (var i = 0; i < stylesInDom.length; i++) {
    if (stylesInDom[i].identifier === identifier) {
      result = i;
      break;
    }
  }

  return result;
}

function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];

  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var index = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3]
    };

    if (index !== -1) {
      stylesInDom[index].references++;
      stylesInDom[index].updater(obj);
    } else {
      stylesInDom.push({
        identifier: identifier,
        updater: addStyle(obj, options),
        references: 1
      });
    }

    identifiers.push(identifier);
  }

  return identifiers;
}

function insertStyleElement(options) {
  var style = document.createElement('style');
  var attributes = options.attributes || {};

  if (typeof attributes.nonce === 'undefined') {
    var nonce =  true ? __webpack_require__.nc : 0;

    if (nonce) {
      attributes.nonce = nonce;
    }
  }

  Object.keys(attributes).forEach(function (key) {
    style.setAttribute(key, attributes[key]);
  });

  if (typeof options.insert === 'function') {
    options.insert(style);
  } else {
    var target = getTarget(options.insert || 'head');

    if (!target) {
      throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
    }

    target.appendChild(style);
  }

  return style;
}

function removeStyleElement(style) {
  // istanbul ignore if
  if (style.parentNode === null) {
    return false;
  }

  style.parentNode.removeChild(style);
}
/* istanbul ignore next  */


var replaceText = function replaceText() {
  var textStore = [];
  return function replace(index, replacement) {
    textStore[index] = replacement;
    return textStore.filter(Boolean).join('\n');
  };
}();

function applyToSingletonTag(style, index, remove, obj) {
  var css = remove ? '' : obj.media ? "@media ".concat(obj.media, " {").concat(obj.css, "}") : obj.css; // For old IE

  /* istanbul ignore if  */

  if (style.styleSheet) {
    style.styleSheet.cssText = replaceText(index, css);
  } else {
    var cssNode = document.createTextNode(css);
    var childNodes = style.childNodes;

    if (childNodes[index]) {
      style.removeChild(childNodes[index]);
    }

    if (childNodes.length) {
      style.insertBefore(cssNode, childNodes[index]);
    } else {
      style.appendChild(cssNode);
    }
  }
}

function applyToTag(style, options, obj) {
  var css = obj.css;
  var media = obj.media;
  var sourceMap = obj.sourceMap;

  if (media) {
    style.setAttribute('media', media);
  } else {
    style.removeAttribute('media');
  }

  if (sourceMap && typeof btoa !== 'undefined') {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  } // For old IE

  /* istanbul ignore if  */


  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    while (style.firstChild) {
      style.removeChild(style.firstChild);
    }

    style.appendChild(document.createTextNode(css));
  }
}

var singleton = null;
var singletonCounter = 0;

function addStyle(obj, options) {
  var style;
  var update;
  var remove;

  if (options.singleton) {
    var styleIndex = singletonCounter++;
    style = singleton || (singleton = insertStyleElement(options));
    update = applyToSingletonTag.bind(null, style, styleIndex, false);
    remove = applyToSingletonTag.bind(null, style, styleIndex, true);
  } else {
    style = insertStyleElement(options);
    update = applyToTag.bind(null, style, options);

    remove = function remove() {
      removeStyleElement(style);
    };
  }

  update(obj);
  return function updateStyle(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {
        return;
      }

      update(obj = newObj);
    } else {
      remove();
    }
  };
}

module.exports = function (list, options) {
  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
  // tags it will allow on a page

  if (!options.singleton && typeof options.singleton !== 'boolean') {
    options.singleton = isOldIE();
  }

  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];

    if (Object.prototype.toString.call(newList) !== '[object Array]') {
      return;
    }

    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDom[index].references--;
    }

    var newLastIdentifiers = modulesToDom(newList, options);

    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];

      var _index = getIndexByIdentifier(_identifier);

      if (stylesInDom[_index].references === 0) {
        stylesInDom[_index].updater();

        stylesInDom.splice(_index, 1);
      }
    }

    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ }),

/***/ "./src/market/components/AlarmsList.vue":
/*!**********************************************!*\
  !*** ./src/market/components/AlarmsList.vue ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _AlarmsList_vue_vue_type_template_id_380b5b02___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AlarmsList.vue?vue&type=template&id=380b5b02& */ "./src/market/components/AlarmsList.vue?vue&type=template&id=380b5b02&");
/* harmony import */ var _AlarmsList_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AlarmsList.vue?vue&type=script&lang=js& */ "./src/market/components/AlarmsList.vue?vue&type=script&lang=js&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */
;
var component = (0,_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _AlarmsList_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _AlarmsList_vue_vue_type_template_id_380b5b02___WEBPACK_IMPORTED_MODULE_0__.render,
  _AlarmsList_vue_vue_type_template_id_380b5b02___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "src/market/components/AlarmsList.vue"
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (component.exports);

/***/ }),

/***/ "./src/market/components/App.vue":
/*!***************************************!*\
  !*** ./src/market/components/App.vue ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _App_vue_vue_type_template_id_35b71e32___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./App.vue?vue&type=template&id=35b71e32& */ "./src/market/components/App.vue?vue&type=template&id=35b71e32&");
/* harmony import */ var _App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./App.vue?vue&type=script&lang=js& */ "./src/market/components/App.vue?vue&type=script&lang=js&");
/* harmony import */ var _App_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./App.vue?vue&type=style&index=0&lang=scss& */ "./src/market/components/App.vue?vue&type=style&index=0&lang=scss&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");



;


/* normalize component */

var component = (0,_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__["default"])(
  _App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _App_vue_vue_type_template_id_35b71e32___WEBPACK_IMPORTED_MODULE_0__.render,
  _App_vue_vue_type_template_id_35b71e32___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "src/market/components/App.vue"
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (component.exports);

/***/ }),

/***/ "./src/market/components/Dropdown.vue":
/*!********************************************!*\
  !*** ./src/market/components/Dropdown.vue ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Dropdown_vue_vue_type_template_id_6b38efd0___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Dropdown.vue?vue&type=template&id=6b38efd0& */ "./src/market/components/Dropdown.vue?vue&type=template&id=6b38efd0&");
/* harmony import */ var _Dropdown_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Dropdown.vue?vue&type=script&lang=js& */ "./src/market/components/Dropdown.vue?vue&type=script&lang=js&");
/* harmony import */ var _Dropdown_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Dropdown.vue?vue&type=style&index=0&lang=scss& */ "./src/market/components/Dropdown.vue?vue&type=style&index=0&lang=scss&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");



;


/* normalize component */

var component = (0,_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__["default"])(
  _Dropdown_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _Dropdown_vue_vue_type_template_id_6b38efd0___WEBPACK_IMPORTED_MODULE_0__.render,
  _Dropdown_vue_vue_type_template_id_6b38efd0___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "src/market/components/Dropdown.vue"
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (component.exports);

/***/ }),

/***/ "./src/market/components/HistoryPage.vue":
/*!***********************************************!*\
  !*** ./src/market/components/HistoryPage.vue ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _HistoryPage_vue_vue_type_template_id_d73ce958___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./HistoryPage.vue?vue&type=template&id=d73ce958& */ "./src/market/components/HistoryPage.vue?vue&type=template&id=d73ce958&");
/* harmony import */ var _HistoryPage_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./HistoryPage.vue?vue&type=script&lang=js& */ "./src/market/components/HistoryPage.vue?vue&type=script&lang=js&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */
;
var component = (0,_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _HistoryPage_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _HistoryPage_vue_vue_type_template_id_d73ce958___WEBPACK_IMPORTED_MODULE_0__.render,
  _HistoryPage_vue_vue_type_template_id_d73ce958___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "src/market/components/HistoryPage.vue"
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (component.exports);

/***/ }),

/***/ "./src/market/components/LineChart.vue":
/*!*********************************************!*\
  !*** ./src/market/components/LineChart.vue ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _LineChart_vue_vue_type_template_id_bd094dca___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./LineChart.vue?vue&type=template&id=bd094dca& */ "./src/market/components/LineChart.vue?vue&type=template&id=bd094dca&");
/* harmony import */ var _LineChart_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./LineChart.vue?vue&type=script&lang=js& */ "./src/market/components/LineChart.vue?vue&type=script&lang=js&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */
;
var component = (0,_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _LineChart_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _LineChart_vue_vue_type_template_id_bd094dca___WEBPACK_IMPORTED_MODULE_0__.render,
  _LineChart_vue_vue_type_template_id_bd094dca___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "src/market/components/LineChart.vue"
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (component.exports);

/***/ }),

/***/ "./src/market/components/Modal.vue":
/*!*****************************************!*\
  !*** ./src/market/components/Modal.vue ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Modal_vue_vue_type_template_id_0b4bde7e___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Modal.vue?vue&type=template&id=0b4bde7e& */ "./src/market/components/Modal.vue?vue&type=template&id=0b4bde7e&");
/* harmony import */ var _Modal_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Modal.vue?vue&type=script&lang=js& */ "./src/market/components/Modal.vue?vue&type=script&lang=js&");
/* harmony import */ var _Modal_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Modal.vue?vue&type=style&index=0&lang=scss& */ "./src/market/components/Modal.vue?vue&type=style&index=0&lang=scss&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");



;


/* normalize component */

var component = (0,_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__["default"])(
  _Modal_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _Modal_vue_vue_type_template_id_0b4bde7e___WEBPACK_IMPORTED_MODULE_0__.render,
  _Modal_vue_vue_type_template_id_0b4bde7e___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "src/market/components/Modal.vue"
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (component.exports);

/***/ }),

/***/ "./src/market/components/Notify.vue":
/*!******************************************!*\
  !*** ./src/market/components/Notify.vue ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Notify_vue_vue_type_template_id_718124c8___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Notify.vue?vue&type=template&id=718124c8& */ "./src/market/components/Notify.vue?vue&type=template&id=718124c8&");
/* harmony import */ var _Notify_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Notify.vue?vue&type=script&lang=js& */ "./src/market/components/Notify.vue?vue&type=script&lang=js&");
/* harmony import */ var _Notify_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Notify.vue?vue&type=style&index=0&lang=scss& */ "./src/market/components/Notify.vue?vue&type=style&index=0&lang=scss&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");



;


/* normalize component */

var component = (0,_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__["default"])(
  _Notify_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _Notify_vue_vue_type_template_id_718124c8___WEBPACK_IMPORTED_MODULE_0__.render,
  _Notify_vue_vue_type_template_id_718124c8___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "src/market/components/Notify.vue"
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (component.exports);

/***/ }),

/***/ "./src/market/components/OptionsPage.vue":
/*!***********************************************!*\
  !*** ./src/market/components/OptionsPage.vue ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _OptionsPage_vue_vue_type_template_id_f4daf944___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./OptionsPage.vue?vue&type=template&id=f4daf944& */ "./src/market/components/OptionsPage.vue?vue&type=template&id=f4daf944&");
/* harmony import */ var _OptionsPage_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./OptionsPage.vue?vue&type=script&lang=js& */ "./src/market/components/OptionsPage.vue?vue&type=script&lang=js&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */
;
var component = (0,_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _OptionsPage_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _OptionsPage_vue_vue_type_template_id_f4daf944___WEBPACK_IMPORTED_MODULE_0__.render,
  _OptionsPage_vue_vue_type_template_id_f4daf944___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "src/market/components/OptionsPage.vue"
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (component.exports);

/***/ }),

/***/ "./src/market/components/OptionsPageAdmin.vue":
/*!****************************************************!*\
  !*** ./src/market/components/OptionsPageAdmin.vue ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _OptionsPageAdmin_vue_vue_type_template_id_69f45141___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./OptionsPageAdmin.vue?vue&type=template&id=69f45141& */ "./src/market/components/OptionsPageAdmin.vue?vue&type=template&id=69f45141&");
/* harmony import */ var _OptionsPageAdmin_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./OptionsPageAdmin.vue?vue&type=script&lang=js& */ "./src/market/components/OptionsPageAdmin.vue?vue&type=script&lang=js&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */
;
var component = (0,_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _OptionsPageAdmin_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _OptionsPageAdmin_vue_vue_type_template_id_69f45141___WEBPACK_IMPORTED_MODULE_0__.render,
  _OptionsPageAdmin_vue_vue_type_template_id_69f45141___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "src/market/components/OptionsPageAdmin.vue"
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (component.exports);

/***/ }),

/***/ "./src/market/components/Search.vue":
/*!******************************************!*\
  !*** ./src/market/components/Search.vue ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Search_vue_vue_type_template_id_e6d0a8b2___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Search.vue?vue&type=template&id=e6d0a8b2& */ "./src/market/components/Search.vue?vue&type=template&id=e6d0a8b2&");
/* harmony import */ var _Search_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Search.vue?vue&type=script&lang=js& */ "./src/market/components/Search.vue?vue&type=script&lang=js&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */
;
var component = (0,_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _Search_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _Search_vue_vue_type_template_id_e6d0a8b2___WEBPACK_IMPORTED_MODULE_0__.render,
  _Search_vue_vue_type_template_id_e6d0a8b2___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "src/market/components/Search.vue"
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (component.exports);

/***/ }),

/***/ "./src/market/components/SelectMenu.vue":
/*!**********************************************!*\
  !*** ./src/market/components/SelectMenu.vue ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _SelectMenu_vue_vue_type_template_id_cb930d0c___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SelectMenu.vue?vue&type=template&id=cb930d0c& */ "./src/market/components/SelectMenu.vue?vue&type=template&id=cb930d0c&");
/* harmony import */ var _SelectMenu_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SelectMenu.vue?vue&type=script&lang=js& */ "./src/market/components/SelectMenu.vue?vue&type=script&lang=js&");
/* harmony import */ var _SelectMenu_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SelectMenu.vue?vue&type=style&index=0&lang=scss& */ "./src/market/components/SelectMenu.vue?vue&type=style&index=0&lang=scss&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");



;


/* normalize component */

var component = (0,_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__["default"])(
  _SelectMenu_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _SelectMenu_vue_vue_type_template_id_cb930d0c___WEBPACK_IMPORTED_MODULE_0__.render,
  _SelectMenu_vue_vue_type_template_id_cb930d0c___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "src/market/components/SelectMenu.vue"
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (component.exports);

/***/ }),

/***/ "./src/market/components/Spinner.vue":
/*!*******************************************!*\
  !*** ./src/market/components/Spinner.vue ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Spinner_vue_vue_type_template_id_66f014ac___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Spinner.vue?vue&type=template&id=66f014ac& */ "./src/market/components/Spinner.vue?vue&type=template&id=66f014ac&");
/* harmony import */ var _Spinner_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Spinner.vue?vue&type=script&lang=js& */ "./src/market/components/Spinner.vue?vue&type=script&lang=js&");
/* harmony import */ var _Spinner_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Spinner.vue?vue&type=style&index=0&lang=scss& */ "./src/market/components/Spinner.vue?vue&type=style&index=0&lang=scss&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");



;


/* normalize component */

var component = (0,_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__["default"])(
  _Spinner_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _Spinner_vue_vue_type_template_id_66f014ac___WEBPACK_IMPORTED_MODULE_0__.render,
  _Spinner_vue_vue_type_template_id_66f014ac___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "src/market/components/Spinner.vue"
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (component.exports);

/***/ }),

/***/ "./src/market/components/Tabs.vue":
/*!****************************************!*\
  !*** ./src/market/components/Tabs.vue ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Tabs_vue_vue_type_template_id_092d4c3d___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Tabs.vue?vue&type=template&id=092d4c3d& */ "./src/market/components/Tabs.vue?vue&type=template&id=092d4c3d&");
/* harmony import */ var _Tabs_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Tabs.vue?vue&type=script&lang=js& */ "./src/market/components/Tabs.vue?vue&type=script&lang=js&");
/* harmony import */ var _Tabs_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tabs.vue?vue&type=style&index=0&lang=scss& */ "./src/market/components/Tabs.vue?vue&type=style&index=0&lang=scss&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");



;


/* normalize component */

var component = (0,_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__["default"])(
  _Tabs_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _Tabs_vue_vue_type_template_id_092d4c3d___WEBPACK_IMPORTED_MODULE_0__.render,
  _Tabs_vue_vue_type_template_id_092d4c3d___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "src/market/components/Tabs.vue"
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (component.exports);

/***/ }),

/***/ "./src/market/components/Toggle.vue":
/*!******************************************!*\
  !*** ./src/market/components/Toggle.vue ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Toggle_vue_vue_type_template_id_f7bd695a___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Toggle.vue?vue&type=template&id=f7bd695a& */ "./src/market/components/Toggle.vue?vue&type=template&id=f7bd695a&");
/* harmony import */ var _Toggle_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Toggle.vue?vue&type=script&lang=js& */ "./src/market/components/Toggle.vue?vue&type=script&lang=js&");
/* harmony import */ var _Toggle_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Toggle.vue?vue&type=style&index=0&lang=scss& */ "./src/market/components/Toggle.vue?vue&type=style&index=0&lang=scss&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");



;


/* normalize component */

var component = (0,_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__["default"])(
  _Toggle_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _Toggle_vue_vue_type_template_id_f7bd695a___WEBPACK_IMPORTED_MODULE_0__.render,
  _Toggle_vue_vue_type_template_id_f7bd695a___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "src/market/components/Toggle.vue"
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (component.exports);

/***/ }),

/***/ "./src/market/components/TokenIcon.vue":
/*!*********************************************!*\
  !*** ./src/market/components/TokenIcon.vue ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _TokenIcon_vue_vue_type_template_id_3ca2eae3___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TokenIcon.vue?vue&type=template&id=3ca2eae3& */ "./src/market/components/TokenIcon.vue?vue&type=template&id=3ca2eae3&");
/* harmony import */ var _TokenIcon_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TokenIcon.vue?vue&type=script&lang=js& */ "./src/market/components/TokenIcon.vue?vue&type=script&lang=js&");
/* harmony import */ var _TokenIcon_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TokenIcon.vue?vue&type=style&index=0&lang=scss& */ "./src/market/components/TokenIcon.vue?vue&type=style&index=0&lang=scss&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");



;


/* normalize component */

var component = (0,_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__["default"])(
  _TokenIcon_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _TokenIcon_vue_vue_type_template_id_3ca2eae3___WEBPACK_IMPORTED_MODULE_0__.render,
  _TokenIcon_vue_vue_type_template_id_3ca2eae3___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "src/market/components/TokenIcon.vue"
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (component.exports);

/***/ }),

/***/ "./src/market/components/TokenList.vue":
/*!*********************************************!*\
  !*** ./src/market/components/TokenList.vue ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _TokenList_vue_vue_type_template_id_8e5876f0___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TokenList.vue?vue&type=template&id=8e5876f0& */ "./src/market/components/TokenList.vue?vue&type=template&id=8e5876f0&");
/* harmony import */ var _TokenList_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TokenList.vue?vue&type=script&lang=js& */ "./src/market/components/TokenList.vue?vue&type=script&lang=js&");
/* harmony import */ var _TokenList_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TokenList.vue?vue&type=style&index=0&lang=scss& */ "./src/market/components/TokenList.vue?vue&type=style&index=0&lang=scss&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");



;


/* normalize component */

var component = (0,_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__["default"])(
  _TokenList_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _TokenList_vue_vue_type_template_id_8e5876f0___WEBPACK_IMPORTED_MODULE_0__.render,
  _TokenList_vue_vue_type_template_id_8e5876f0___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "src/market/components/TokenList.vue"
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (component.exports);

/***/ }),

/***/ "./src/market/components/TokenPage.vue":
/*!*********************************************!*\
  !*** ./src/market/components/TokenPage.vue ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _TokenPage_vue_vue_type_template_id_c84dd40e___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TokenPage.vue?vue&type=template&id=c84dd40e& */ "./src/market/components/TokenPage.vue?vue&type=template&id=c84dd40e&");
/* harmony import */ var _TokenPage_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TokenPage.vue?vue&type=script&lang=js& */ "./src/market/components/TokenPage.vue?vue&type=script&lang=js&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");





/* normalize component */
;
var component = (0,_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__["default"])(
  _TokenPage_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _TokenPage_vue_vue_type_template_id_c84dd40e___WEBPACK_IMPORTED_MODULE_0__.render,
  _TokenPage_vue_vue_type_template_id_c84dd40e___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "src/market/components/TokenPage.vue"
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (component.exports);

/***/ }),

/***/ "./src/market/components/Topbar.vue":
/*!******************************************!*\
  !*** ./src/market/components/Topbar.vue ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Topbar_vue_vue_type_template_id_107e999d___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Topbar.vue?vue&type=template&id=107e999d& */ "./src/market/components/Topbar.vue?vue&type=template&id=107e999d&");
/* harmony import */ var _Topbar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Topbar.vue?vue&type=script&lang=js& */ "./src/market/components/Topbar.vue?vue&type=script&lang=js&");
/* harmony import */ var _Topbar_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Topbar.vue?vue&type=style&index=0&lang=scss& */ "./src/market/components/Topbar.vue?vue&type=style&index=0&lang=scss&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");



;


/* normalize component */

var component = (0,_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__["default"])(
  _Topbar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _Topbar_vue_vue_type_template_id_107e999d___WEBPACK_IMPORTED_MODULE_0__.render,
  _Topbar_vue_vue_type_template_id_107e999d___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "src/market/components/Topbar.vue"
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (component.exports);

/***/ }),

/***/ "./src/market/components/WatchForm.vue":
/*!*********************************************!*\
  !*** ./src/market/components/WatchForm.vue ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _WatchForm_vue_vue_type_template_id_82ed1af8___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./WatchForm.vue?vue&type=template&id=82ed1af8& */ "./src/market/components/WatchForm.vue?vue&type=template&id=82ed1af8&");
/* harmony import */ var _WatchForm_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./WatchForm.vue?vue&type=script&lang=js& */ "./src/market/components/WatchForm.vue?vue&type=script&lang=js&");
/* harmony import */ var _WatchForm_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./WatchForm.vue?vue&type=style&index=0&lang=scss& */ "./src/market/components/WatchForm.vue?vue&type=style&index=0&lang=scss&");
/* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js");



;


/* normalize component */

var component = (0,_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_3__["default"])(
  _WatchForm_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__["default"],
  _WatchForm_vue_vue_type_template_id_82ed1af8___WEBPACK_IMPORTED_MODULE_0__.render,
  _WatchForm_vue_vue_type_template_id_82ed1af8___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns,
  false,
  null,
  null,
  null
  
)

/* hot reload */
if (false) { var api; }
component.options.__file = "src/market/components/WatchForm.vue"
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (component.exports);

/***/ }),

/***/ "./src/market/components/AlarmsList.vue?vue&type=script&lang=js&":
/*!***********************************************************************!*\
  !*** ./src/market/components/AlarmsList.vue?vue&type=script&lang=js& ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_AlarmsList_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AlarmsList.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/AlarmsList.vue?vue&type=script&lang=js&");
 /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_AlarmsList_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./src/market/components/App.vue?vue&type=script&lang=js&":
/*!****************************************************************!*\
  !*** ./src/market/components/App.vue?vue&type=script&lang=js& ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/App.vue?vue&type=script&lang=js&");
 /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./src/market/components/Dropdown.vue?vue&type=script&lang=js&":
/*!*********************************************************************!*\
  !*** ./src/market/components/Dropdown.vue?vue&type=script&lang=js& ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Dropdown_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dropdown.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Dropdown.vue?vue&type=script&lang=js&");
 /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Dropdown_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./src/market/components/HistoryPage.vue?vue&type=script&lang=js&":
/*!************************************************************************!*\
  !*** ./src/market/components/HistoryPage.vue?vue&type=script&lang=js& ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_HistoryPage_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HistoryPage.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/HistoryPage.vue?vue&type=script&lang=js&");
 /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_HistoryPage_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./src/market/components/LineChart.vue?vue&type=script&lang=js&":
/*!**********************************************************************!*\
  !*** ./src/market/components/LineChart.vue?vue&type=script&lang=js& ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_LineChart_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LineChart.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/LineChart.vue?vue&type=script&lang=js&");
 /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_LineChart_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./src/market/components/Modal.vue?vue&type=script&lang=js&":
/*!******************************************************************!*\
  !*** ./src/market/components/Modal.vue?vue&type=script&lang=js& ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Modal_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Modal.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Modal.vue?vue&type=script&lang=js&");
 /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Modal_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./src/market/components/Notify.vue?vue&type=script&lang=js&":
/*!*******************************************************************!*\
  !*** ./src/market/components/Notify.vue?vue&type=script&lang=js& ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Notify_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Notify.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Notify.vue?vue&type=script&lang=js&");
 /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Notify_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./src/market/components/OptionsPage.vue?vue&type=script&lang=js&":
/*!************************************************************************!*\
  !*** ./src/market/components/OptionsPage.vue?vue&type=script&lang=js& ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_OptionsPage_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OptionsPage.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/OptionsPage.vue?vue&type=script&lang=js&");
 /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_OptionsPage_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./src/market/components/OptionsPageAdmin.vue?vue&type=script&lang=js&":
/*!*****************************************************************************!*\
  !*** ./src/market/components/OptionsPageAdmin.vue?vue&type=script&lang=js& ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_OptionsPageAdmin_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OptionsPageAdmin.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/OptionsPageAdmin.vue?vue&type=script&lang=js&");
 /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_OptionsPageAdmin_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./src/market/components/Search.vue?vue&type=script&lang=js&":
/*!*******************************************************************!*\
  !*** ./src/market/components/Search.vue?vue&type=script&lang=js& ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Search_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Search.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Search.vue?vue&type=script&lang=js&");
 /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Search_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./src/market/components/SelectMenu.vue?vue&type=script&lang=js&":
/*!***********************************************************************!*\
  !*** ./src/market/components/SelectMenu.vue?vue&type=script&lang=js& ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SelectMenu_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SelectMenu.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/SelectMenu.vue?vue&type=script&lang=js&");
 /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SelectMenu_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./src/market/components/Spinner.vue?vue&type=script&lang=js&":
/*!********************************************************************!*\
  !*** ./src/market/components/Spinner.vue?vue&type=script&lang=js& ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Spinner_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Spinner.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Spinner.vue?vue&type=script&lang=js&");
 /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Spinner_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./src/market/components/Tabs.vue?vue&type=script&lang=js&":
/*!*****************************************************************!*\
  !*** ./src/market/components/Tabs.vue?vue&type=script&lang=js& ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Tabs_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tabs.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Tabs.vue?vue&type=script&lang=js&");
 /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Tabs_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./src/market/components/Toggle.vue?vue&type=script&lang=js&":
/*!*******************************************************************!*\
  !*** ./src/market/components/Toggle.vue?vue&type=script&lang=js& ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Toggle_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Toggle.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Toggle.vue?vue&type=script&lang=js&");
 /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Toggle_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./src/market/components/TokenIcon.vue?vue&type=script&lang=js&":
/*!**********************************************************************!*\
  !*** ./src/market/components/TokenIcon.vue?vue&type=script&lang=js& ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TokenIcon_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TokenIcon.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/TokenIcon.vue?vue&type=script&lang=js&");
 /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TokenIcon_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./src/market/components/TokenList.vue?vue&type=script&lang=js&":
/*!**********************************************************************!*\
  !*** ./src/market/components/TokenList.vue?vue&type=script&lang=js& ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TokenList_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TokenList.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/TokenList.vue?vue&type=script&lang=js&");
 /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TokenList_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./src/market/components/TokenPage.vue?vue&type=script&lang=js&":
/*!**********************************************************************!*\
  !*** ./src/market/components/TokenPage.vue?vue&type=script&lang=js& ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TokenPage_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TokenPage.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/TokenPage.vue?vue&type=script&lang=js&");
 /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TokenPage_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./src/market/components/Topbar.vue?vue&type=script&lang=js&":
/*!*******************************************************************!*\
  !*** ./src/market/components/Topbar.vue?vue&type=script&lang=js& ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Topbar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Topbar.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Topbar.vue?vue&type=script&lang=js&");
 /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Topbar_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./src/market/components/WatchForm.vue?vue&type=script&lang=js&":
/*!**********************************************************************!*\
  !*** ./src/market/components/WatchForm.vue?vue&type=script&lang=js& ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_WatchForm_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WatchForm.vue?vue&type=script&lang=js& */ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5[0].rules[0].use[0]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/WatchForm.vue?vue&type=script&lang=js&");
 /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_babel_loader_lib_index_js_clonedRuleSet_5_0_rules_0_use_0_node_modules_vue_loader_lib_index_js_vue_loader_options_WatchForm_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__["default"]); 

/***/ }),

/***/ "./src/market/components/App.vue?vue&type=style&index=0&lang=scss&":
/*!*************************************************************************!*\
  !*** ./src/market/components/App.vue?vue&type=style&index=0&lang=scss& ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_style_loader_dist_cjs_js_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/style-loader/dist/cjs.js!../../../node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss& */ "./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/App.vue?vue&type=style&index=0&lang=scss&");


/***/ }),

/***/ "./src/market/components/Dropdown.vue?vue&type=style&index=0&lang=scss&":
/*!******************************************************************************!*\
  !*** ./src/market/components/Dropdown.vue?vue&type=style&index=0&lang=scss& ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_style_loader_dist_cjs_js_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_Dropdown_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/style-loader/dist/cjs.js!../../../node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dropdown.vue?vue&type=style&index=0&lang=scss& */ "./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Dropdown.vue?vue&type=style&index=0&lang=scss&");


/***/ }),

/***/ "./src/market/components/Modal.vue?vue&type=style&index=0&lang=scss&":
/*!***************************************************************************!*\
  !*** ./src/market/components/Modal.vue?vue&type=style&index=0&lang=scss& ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_style_loader_dist_cjs_js_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_Modal_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/style-loader/dist/cjs.js!../../../node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Modal.vue?vue&type=style&index=0&lang=scss& */ "./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Modal.vue?vue&type=style&index=0&lang=scss&");


/***/ }),

/***/ "./src/market/components/Notify.vue?vue&type=style&index=0&lang=scss&":
/*!****************************************************************************!*\
  !*** ./src/market/components/Notify.vue?vue&type=style&index=0&lang=scss& ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_style_loader_dist_cjs_js_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_Notify_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/style-loader/dist/cjs.js!../../../node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Notify.vue?vue&type=style&index=0&lang=scss& */ "./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Notify.vue?vue&type=style&index=0&lang=scss&");


/***/ }),

/***/ "./src/market/components/SelectMenu.vue?vue&type=style&index=0&lang=scss&":
/*!********************************************************************************!*\
  !*** ./src/market/components/SelectMenu.vue?vue&type=style&index=0&lang=scss& ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_style_loader_dist_cjs_js_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_SelectMenu_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/style-loader/dist/cjs.js!../../../node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SelectMenu.vue?vue&type=style&index=0&lang=scss& */ "./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/SelectMenu.vue?vue&type=style&index=0&lang=scss&");


/***/ }),

/***/ "./src/market/components/Spinner.vue?vue&type=style&index=0&lang=scss&":
/*!*****************************************************************************!*\
  !*** ./src/market/components/Spinner.vue?vue&type=style&index=0&lang=scss& ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_style_loader_dist_cjs_js_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_Spinner_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/style-loader/dist/cjs.js!../../../node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Spinner.vue?vue&type=style&index=0&lang=scss& */ "./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Spinner.vue?vue&type=style&index=0&lang=scss&");


/***/ }),

/***/ "./src/market/components/Tabs.vue?vue&type=style&index=0&lang=scss&":
/*!**************************************************************************!*\
  !*** ./src/market/components/Tabs.vue?vue&type=style&index=0&lang=scss& ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_style_loader_dist_cjs_js_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_Tabs_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/style-loader/dist/cjs.js!../../../node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tabs.vue?vue&type=style&index=0&lang=scss& */ "./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Tabs.vue?vue&type=style&index=0&lang=scss&");


/***/ }),

/***/ "./src/market/components/Toggle.vue?vue&type=style&index=0&lang=scss&":
/*!****************************************************************************!*\
  !*** ./src/market/components/Toggle.vue?vue&type=style&index=0&lang=scss& ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_style_loader_dist_cjs_js_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_Toggle_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/style-loader/dist/cjs.js!../../../node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Toggle.vue?vue&type=style&index=0&lang=scss& */ "./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Toggle.vue?vue&type=style&index=0&lang=scss&");


/***/ }),

/***/ "./src/market/components/TokenIcon.vue?vue&type=style&index=0&lang=scss&":
/*!*******************************************************************************!*\
  !*** ./src/market/components/TokenIcon.vue?vue&type=style&index=0&lang=scss& ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_style_loader_dist_cjs_js_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_TokenIcon_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/style-loader/dist/cjs.js!../../../node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TokenIcon.vue?vue&type=style&index=0&lang=scss& */ "./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/TokenIcon.vue?vue&type=style&index=0&lang=scss&");


/***/ }),

/***/ "./src/market/components/TokenList.vue?vue&type=style&index=0&lang=scss&":
/*!*******************************************************************************!*\
  !*** ./src/market/components/TokenList.vue?vue&type=style&index=0&lang=scss& ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_style_loader_dist_cjs_js_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_TokenList_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/style-loader/dist/cjs.js!../../../node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TokenList.vue?vue&type=style&index=0&lang=scss& */ "./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/TokenList.vue?vue&type=style&index=0&lang=scss&");


/***/ }),

/***/ "./src/market/components/Topbar.vue?vue&type=style&index=0&lang=scss&":
/*!****************************************************************************!*\
  !*** ./src/market/components/Topbar.vue?vue&type=style&index=0&lang=scss& ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_style_loader_dist_cjs_js_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_Topbar_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/style-loader/dist/cjs.js!../../../node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Topbar.vue?vue&type=style&index=0&lang=scss& */ "./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Topbar.vue?vue&type=style&index=0&lang=scss&");


/***/ }),

/***/ "./src/market/components/WatchForm.vue?vue&type=style&index=0&lang=scss&":
/*!*******************************************************************************!*\
  !*** ./src/market/components/WatchForm.vue?vue&type=style&index=0&lang=scss& ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_style_loader_dist_cjs_js_node_modules_laravel_mix_node_modules_css_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_2_node_modules_sass_loader_dist_cjs_js_clonedRuleSet_72_0_rules_0_use_3_node_modules_vue_loader_lib_index_js_vue_loader_options_WatchForm_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/style-loader/dist/cjs.js!../../../node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WatchForm.vue?vue&type=style&index=0&lang=scss& */ "./node_modules/style-loader/dist/cjs.js!./node_modules/laravel-mix/node_modules/css-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[1]!./node_modules/vue-loader/lib/loaders/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[2]!./node_modules/sass-loader/dist/cjs.js??clonedRuleSet-72[0].rules[0].use[3]!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/WatchForm.vue?vue&type=style&index=0&lang=scss&");


/***/ }),

/***/ "./src/market/components/AlarmsList.vue?vue&type=template&id=380b5b02&":
/*!*****************************************************************************!*\
  !*** ./src/market/components/AlarmsList.vue?vue&type=template&id=380b5b02& ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_AlarmsList_vue_vue_type_template_id_380b5b02___WEBPACK_IMPORTED_MODULE_0__.render),
/* harmony export */   "staticRenderFns": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_AlarmsList_vue_vue_type_template_id_380b5b02___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns)
/* harmony export */ });
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_AlarmsList_vue_vue_type_template_id_380b5b02___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AlarmsList.vue?vue&type=template&id=380b5b02& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/AlarmsList.vue?vue&type=template&id=380b5b02&");


/***/ }),

/***/ "./src/market/components/App.vue?vue&type=template&id=35b71e32&":
/*!**********************************************************************!*\
  !*** ./src/market/components/App.vue?vue&type=template&id=35b71e32& ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_template_id_35b71e32___WEBPACK_IMPORTED_MODULE_0__.render),
/* harmony export */   "staticRenderFns": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_template_id_35b71e32___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns)
/* harmony export */ });
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_template_id_35b71e32___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=template&id=35b71e32& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/App.vue?vue&type=template&id=35b71e32&");


/***/ }),

/***/ "./src/market/components/Dropdown.vue?vue&type=template&id=6b38efd0&":
/*!***************************************************************************!*\
  !*** ./src/market/components/Dropdown.vue?vue&type=template&id=6b38efd0& ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Dropdown_vue_vue_type_template_id_6b38efd0___WEBPACK_IMPORTED_MODULE_0__.render),
/* harmony export */   "staticRenderFns": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Dropdown_vue_vue_type_template_id_6b38efd0___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns)
/* harmony export */ });
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Dropdown_vue_vue_type_template_id_6b38efd0___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dropdown.vue?vue&type=template&id=6b38efd0& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Dropdown.vue?vue&type=template&id=6b38efd0&");


/***/ }),

/***/ "./src/market/components/HistoryPage.vue?vue&type=template&id=d73ce958&":
/*!******************************************************************************!*\
  !*** ./src/market/components/HistoryPage.vue?vue&type=template&id=d73ce958& ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_HistoryPage_vue_vue_type_template_id_d73ce958___WEBPACK_IMPORTED_MODULE_0__.render),
/* harmony export */   "staticRenderFns": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_HistoryPage_vue_vue_type_template_id_d73ce958___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns)
/* harmony export */ });
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_HistoryPage_vue_vue_type_template_id_d73ce958___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./HistoryPage.vue?vue&type=template&id=d73ce958& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/HistoryPage.vue?vue&type=template&id=d73ce958&");


/***/ }),

/***/ "./src/market/components/LineChart.vue?vue&type=template&id=bd094dca&":
/*!****************************************************************************!*\
  !*** ./src/market/components/LineChart.vue?vue&type=template&id=bd094dca& ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_LineChart_vue_vue_type_template_id_bd094dca___WEBPACK_IMPORTED_MODULE_0__.render),
/* harmony export */   "staticRenderFns": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_LineChart_vue_vue_type_template_id_bd094dca___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns)
/* harmony export */ });
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_LineChart_vue_vue_type_template_id_bd094dca___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LineChart.vue?vue&type=template&id=bd094dca& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/LineChart.vue?vue&type=template&id=bd094dca&");


/***/ }),

/***/ "./src/market/components/Modal.vue?vue&type=template&id=0b4bde7e&":
/*!************************************************************************!*\
  !*** ./src/market/components/Modal.vue?vue&type=template&id=0b4bde7e& ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Modal_vue_vue_type_template_id_0b4bde7e___WEBPACK_IMPORTED_MODULE_0__.render),
/* harmony export */   "staticRenderFns": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Modal_vue_vue_type_template_id_0b4bde7e___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns)
/* harmony export */ });
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Modal_vue_vue_type_template_id_0b4bde7e___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Modal.vue?vue&type=template&id=0b4bde7e& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Modal.vue?vue&type=template&id=0b4bde7e&");


/***/ }),

/***/ "./src/market/components/Notify.vue?vue&type=template&id=718124c8&":
/*!*************************************************************************!*\
  !*** ./src/market/components/Notify.vue?vue&type=template&id=718124c8& ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Notify_vue_vue_type_template_id_718124c8___WEBPACK_IMPORTED_MODULE_0__.render),
/* harmony export */   "staticRenderFns": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Notify_vue_vue_type_template_id_718124c8___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns)
/* harmony export */ });
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Notify_vue_vue_type_template_id_718124c8___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Notify.vue?vue&type=template&id=718124c8& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Notify.vue?vue&type=template&id=718124c8&");


/***/ }),

/***/ "./src/market/components/OptionsPage.vue?vue&type=template&id=f4daf944&":
/*!******************************************************************************!*\
  !*** ./src/market/components/OptionsPage.vue?vue&type=template&id=f4daf944& ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_OptionsPage_vue_vue_type_template_id_f4daf944___WEBPACK_IMPORTED_MODULE_0__.render),
/* harmony export */   "staticRenderFns": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_OptionsPage_vue_vue_type_template_id_f4daf944___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns)
/* harmony export */ });
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_OptionsPage_vue_vue_type_template_id_f4daf944___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OptionsPage.vue?vue&type=template&id=f4daf944& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/OptionsPage.vue?vue&type=template&id=f4daf944&");


/***/ }),

/***/ "./src/market/components/OptionsPageAdmin.vue?vue&type=template&id=69f45141&":
/*!***********************************************************************************!*\
  !*** ./src/market/components/OptionsPageAdmin.vue?vue&type=template&id=69f45141& ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_OptionsPageAdmin_vue_vue_type_template_id_69f45141___WEBPACK_IMPORTED_MODULE_0__.render),
/* harmony export */   "staticRenderFns": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_OptionsPageAdmin_vue_vue_type_template_id_69f45141___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns)
/* harmony export */ });
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_OptionsPageAdmin_vue_vue_type_template_id_69f45141___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./OptionsPageAdmin.vue?vue&type=template&id=69f45141& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/OptionsPageAdmin.vue?vue&type=template&id=69f45141&");


/***/ }),

/***/ "./src/market/components/Search.vue?vue&type=template&id=e6d0a8b2&":
/*!*************************************************************************!*\
  !*** ./src/market/components/Search.vue?vue&type=template&id=e6d0a8b2& ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Search_vue_vue_type_template_id_e6d0a8b2___WEBPACK_IMPORTED_MODULE_0__.render),
/* harmony export */   "staticRenderFns": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Search_vue_vue_type_template_id_e6d0a8b2___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns)
/* harmony export */ });
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Search_vue_vue_type_template_id_e6d0a8b2___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Search.vue?vue&type=template&id=e6d0a8b2& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Search.vue?vue&type=template&id=e6d0a8b2&");


/***/ }),

/***/ "./src/market/components/SelectMenu.vue?vue&type=template&id=cb930d0c&":
/*!*****************************************************************************!*\
  !*** ./src/market/components/SelectMenu.vue?vue&type=template&id=cb930d0c& ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SelectMenu_vue_vue_type_template_id_cb930d0c___WEBPACK_IMPORTED_MODULE_0__.render),
/* harmony export */   "staticRenderFns": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SelectMenu_vue_vue_type_template_id_cb930d0c___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns)
/* harmony export */ });
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_SelectMenu_vue_vue_type_template_id_cb930d0c___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SelectMenu.vue?vue&type=template&id=cb930d0c& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/SelectMenu.vue?vue&type=template&id=cb930d0c&");


/***/ }),

/***/ "./src/market/components/Spinner.vue?vue&type=template&id=66f014ac&":
/*!**************************************************************************!*\
  !*** ./src/market/components/Spinner.vue?vue&type=template&id=66f014ac& ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Spinner_vue_vue_type_template_id_66f014ac___WEBPACK_IMPORTED_MODULE_0__.render),
/* harmony export */   "staticRenderFns": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Spinner_vue_vue_type_template_id_66f014ac___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns)
/* harmony export */ });
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Spinner_vue_vue_type_template_id_66f014ac___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Spinner.vue?vue&type=template&id=66f014ac& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Spinner.vue?vue&type=template&id=66f014ac&");


/***/ }),

/***/ "./src/market/components/Tabs.vue?vue&type=template&id=092d4c3d&":
/*!***********************************************************************!*\
  !*** ./src/market/components/Tabs.vue?vue&type=template&id=092d4c3d& ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Tabs_vue_vue_type_template_id_092d4c3d___WEBPACK_IMPORTED_MODULE_0__.render),
/* harmony export */   "staticRenderFns": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Tabs_vue_vue_type_template_id_092d4c3d___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns)
/* harmony export */ });
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Tabs_vue_vue_type_template_id_092d4c3d___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tabs.vue?vue&type=template&id=092d4c3d& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Tabs.vue?vue&type=template&id=092d4c3d&");


/***/ }),

/***/ "./src/market/components/Toggle.vue?vue&type=template&id=f7bd695a&":
/*!*************************************************************************!*\
  !*** ./src/market/components/Toggle.vue?vue&type=template&id=f7bd695a& ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Toggle_vue_vue_type_template_id_f7bd695a___WEBPACK_IMPORTED_MODULE_0__.render),
/* harmony export */   "staticRenderFns": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Toggle_vue_vue_type_template_id_f7bd695a___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns)
/* harmony export */ });
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Toggle_vue_vue_type_template_id_f7bd695a___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Toggle.vue?vue&type=template&id=f7bd695a& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Toggle.vue?vue&type=template&id=f7bd695a&");


/***/ }),

/***/ "./src/market/components/TokenIcon.vue?vue&type=template&id=3ca2eae3&":
/*!****************************************************************************!*\
  !*** ./src/market/components/TokenIcon.vue?vue&type=template&id=3ca2eae3& ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_TokenIcon_vue_vue_type_template_id_3ca2eae3___WEBPACK_IMPORTED_MODULE_0__.render),
/* harmony export */   "staticRenderFns": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_TokenIcon_vue_vue_type_template_id_3ca2eae3___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns)
/* harmony export */ });
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_TokenIcon_vue_vue_type_template_id_3ca2eae3___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TokenIcon.vue?vue&type=template&id=3ca2eae3& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/TokenIcon.vue?vue&type=template&id=3ca2eae3&");


/***/ }),

/***/ "./src/market/components/TokenList.vue?vue&type=template&id=8e5876f0&":
/*!****************************************************************************!*\
  !*** ./src/market/components/TokenList.vue?vue&type=template&id=8e5876f0& ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_TokenList_vue_vue_type_template_id_8e5876f0___WEBPACK_IMPORTED_MODULE_0__.render),
/* harmony export */   "staticRenderFns": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_TokenList_vue_vue_type_template_id_8e5876f0___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns)
/* harmony export */ });
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_TokenList_vue_vue_type_template_id_8e5876f0___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TokenList.vue?vue&type=template&id=8e5876f0& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/TokenList.vue?vue&type=template&id=8e5876f0&");


/***/ }),

/***/ "./src/market/components/TokenPage.vue?vue&type=template&id=c84dd40e&":
/*!****************************************************************************!*\
  !*** ./src/market/components/TokenPage.vue?vue&type=template&id=c84dd40e& ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_TokenPage_vue_vue_type_template_id_c84dd40e___WEBPACK_IMPORTED_MODULE_0__.render),
/* harmony export */   "staticRenderFns": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_TokenPage_vue_vue_type_template_id_c84dd40e___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns)
/* harmony export */ });
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_TokenPage_vue_vue_type_template_id_c84dd40e___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TokenPage.vue?vue&type=template&id=c84dd40e& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/TokenPage.vue?vue&type=template&id=c84dd40e&");


/***/ }),

/***/ "./src/market/components/Topbar.vue?vue&type=template&id=107e999d&":
/*!*************************************************************************!*\
  !*** ./src/market/components/Topbar.vue?vue&type=template&id=107e999d& ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Topbar_vue_vue_type_template_id_107e999d___WEBPACK_IMPORTED_MODULE_0__.render),
/* harmony export */   "staticRenderFns": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Topbar_vue_vue_type_template_id_107e999d___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns)
/* harmony export */ });
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_Topbar_vue_vue_type_template_id_107e999d___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Topbar.vue?vue&type=template&id=107e999d& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Topbar.vue?vue&type=template&id=107e999d&");


/***/ }),

/***/ "./src/market/components/WatchForm.vue?vue&type=template&id=82ed1af8&":
/*!****************************************************************************!*\
  !*** ./src/market/components/WatchForm.vue?vue&type=template&id=82ed1af8& ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_WatchForm_vue_vue_type_template_id_82ed1af8___WEBPACK_IMPORTED_MODULE_0__.render),
/* harmony export */   "staticRenderFns": () => (/* reexport safe */ _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_WatchForm_vue_vue_type_template_id_82ed1af8___WEBPACK_IMPORTED_MODULE_0__.staticRenderFns)
/* harmony export */ });
/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_WatchForm_vue_vue_type_template_id_82ed1af8___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WatchForm.vue?vue&type=template&id=82ed1af8& */ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/WatchForm.vue?vue&type=template&id=82ed1af8&");


/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/AlarmsList.vue?vue&type=template&id=380b5b02&":
/*!********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/AlarmsList.vue?vue&type=template&id=380b5b02& ***!
  \********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* binding */ render),
/* harmony export */   "staticRenderFns": () => (/* binding */ staticRenderFns)
/* harmony export */ });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("section", [
    _vm.pairData.symbol
      ? _c(
          "form",
          {
            staticClass: "flex-row flex-middle flex-stretch mb-1",
            attrs: { action: "#" },
            on: {
              submit: function ($event) {
                $event.preventDefault()
                return _vm.saveAlarm.apply(null, arguments)
              },
            },
          },
          [
            _c(
              "div",
              {
                staticClass: "form-input flex-1 me-1",
                staticStyle: { background: "rgb(255 255 255 / 6%)" },
              },
              [
                _c("i", { staticClass: "bi bi-graph-up me-1 text-dark" }),
                _vm._v(" "),
                _c("input", {
                  directives: [
                    {
                      name: "model",
                      rawName: "v-model",
                      value: _vm.curPrice,
                      expression: "curPrice",
                    },
                  ],
                  staticClass: "me-1 text-dark",
                  attrs: { placeholder: "0.00000000", name: "price" },
                  domProps: { value: _vm.curPrice },
                  on: {
                    input: function ($event) {
                      if ($event.target.composing) {
                        return
                      }
                      _vm.curPrice = $event.target.value
                    },
                  },
                }),
                _vm._v(" "),
                _c("div", { staticClass: "text-dark" }, [
                  _vm._v(_vm._s(_vm.pairData.asset)),
                ]),
              ]
            ),
            _vm._v(" "),
            _c(
              "button",
              {
                staticClass: "btn btn-sm btn-success bi bi-plus-lg iconLeft",
                attrs: { type: "submit" },
              },
              [_vm._v(" Set Alarm")]
            ),
          ]
        )
      : _vm._e(),
    _vm._v(" "),
    _c(
      "div",
      { staticClass: "flex-list" },
      [
        _c("div", { staticClass: "flex-header" }, [
          _vm._m(0),
          _vm._v(" "),
          _c("div", { staticClass: "flex-1 me-1" }, [_vm._v("Symbol")]),
          _vm._v(" "),
          _c("div", { staticClass: "flex-1 me-1" }, [_vm._v("Alarm")]),
          _vm._v(" "),
          _c("div", { staticClass: "flex-1 me-1" }, [_vm._v("Status")]),
          _vm._v(" "),
          _c("div", { staticClass: "flex-1 me-1" }, [_vm._v("Created")]),
          _vm._v(" "),
          _c("div", [
            _c("button", {
              directives: [{ name: "tooltip", rawName: "v-tooltip" }],
              staticClass: "bi bi-x-lg text-danger-hover",
              attrs: { title: "Delete All" },
              on: { click: _vm.flushAlarms },
            }),
          ]),
        ]),
        _vm._v(" "),
        !_vm.alarmsList.length
          ? _c("div", { staticClass: "flex-item" }, [
              _c("div", { staticClass: "flex-1 text-secondary text-faded" }, [
                _c("span", { staticClass: "bi bi-info-circle" }, [_vm._v(" ")]),
                _vm._v(" "),
                _vm.pairData.symbol
                  ? _c("span", [
                      _vm._v(
                        "There are no alarms for " +
                          _vm._s(_vm.pairData.symbol) +
                          "."
                      ),
                    ])
                  : _c("span", [_vm._v("There are no alarms.")]),
              ]),
            ])
          : _vm._e(),
        _vm._v(" "),
        _vm._l(_vm.alarmsList, function (a) {
          return _c("div", { key: a.id, staticClass: "flex-item" }, [
            _c("div", { staticClass: "me-1" }, [
              _c("button", {
                directives: [{ name: "tooltip", rawName: "v-tooltip" }],
                staticClass: "bi bi-alarm",
                class: { "text-gain": a.active, "text-secondary": !a.active },
                attrs: { title: "Toggle" },
                on: {
                  click: function ($event) {
                    return _vm.toggleAlarm(a.id, a.symbol, !a.active)
                  },
                },
              }),
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "flex-1 me-1" }, [
              _c(
                "button",
                {
                  staticClass: "text-dark",
                  on: {
                    click: function ($event) {
                      return _vm.$bus.emit("setRoute", "/symbol/" + a.symbol)
                    },
                  },
                },
                [_vm._v(_vm._s(a.pair))]
              ),
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "flex-1 me-1" }, [
              _c(
                "span",
                { staticClass: "text-big", class: ["text-" + a.check] },
                [_vm._v(_vm._s(a.sign))]
              ),
              _vm._v(" "),
              _c("span", { staticClass: "text-dark" }, [
                _vm._v(_vm._s(_vm._f("toFixed")(a.price, a.asset))),
              ]),
              _vm._v(" "),
              _c("span", { staticClass: "text-secondary" }, [
                _vm._v(_vm._s(a.asset)),
              ]),
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "flex-1 me-1" }, [
              _c(
                "span",
                {
                  class: {
                    "text-success": a.active,
                    "text-secondary": !a.active,
                  },
                },
                [_vm._v(_vm._s(a.active ? "Active" : "Triggered"))]
              ),
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "flex-1 me-1" }, [
              _c("span", { staticClass: "text-grey" }, [
                _vm._v(_vm._s(_vm._f("toDate")(a.time))),
              ]),
            ]),
            _vm._v(" "),
            _c("div", [
              _c("button", {
                directives: [{ name: "tooltip", rawName: "v-tooltip" }],
                staticClass: "bi bi-x-lg text-dark",
                attrs: { title: "Delete" },
                on: {
                  click: function ($event) {
                    return _vm.deleteAlarm(a.id, a.symbol)
                  },
                },
              }),
            ]),
          ])
        }),
      ],
      2
    ),
  ])
}
var staticRenderFns = [
  function () {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "me-1" }, [
      _c("span", { staticClass: "bi bi-alarm text-faded" }),
    ])
  },
]
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/App.vue?vue&type=template&id=35b71e32&":
/*!*************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/App.vue?vue&type=template&id=35b71e32& ***!
  \*************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* binding */ render),
/* harmony export */   "staticRenderFns": () => (/* binding */ staticRenderFns)
/* harmony export */ });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    { staticClass: "app-wrap" },
    [
      _c("Topbar", {
        attrs: {
          header: _vm.header,
          options: _vm.options,
          tickerStatus: _vm.tickerStatus,
          tickerTime: _vm.tickerTime,
          priceData: _vm.priceData,
          historyData: _vm.historyData,
          alarmsData: _vm.alarmsData,
          newsEntries: _vm.newsEntries,
        },
      }),
      _vm._v(" "),
      _c("WatchForm", {
        attrs: {
          header: _vm.header,
          options: _vm.options,
          tickerStatus: _vm.tickerStatus,
          assetsList: _vm.assetsList,
          marketsData: _vm.marketsData,
          priceData: _vm.priceData,
        },
      }),
      _vm._v(" "),
      _c(
        "div",
        { staticClass: "app-main" },
        [
          _c(
            "keep-alive",
            [
              _c(_vm.mainComp, {
                key: _vm.mainComp,
                tag: "component",
                staticClass: "fx fx-fade-in",
                attrs: {
                  header: _vm.header,
                  options: _vm.options,
                  sortData: _vm.sortData,
                  tickerStatus: _vm.tickerStatus,
                  assetsList: _vm.assetsList,
                  marketsData: _vm.marketsData,
                  priceData: _vm.priceData,
                  newsHandlers: _vm.newsHandlers,
                  newsEntries: _vm.newsEntries,
                  coinsData: _vm.coinsData,
                },
              }),
            ],
            1
          ),
        ],
        1
      ),
      _vm._v(" "),
      _c(
        "Modal",
        { ref: "modal", on: { onDone: _vm.modalDone } },
        [
          _c(_vm.modalComp, {
            tag: "component",
            attrs: {
              options: _vm.options,
              sortData: _vm.sortData,
              modalData: _vm.modalData,
              historyData: _vm.historyData,
              alarmsData: _vm.alarmsData,
              newsEntries: _vm.newsEntries,
            },
          }),
        ],
        1
      ),
      _vm._v(" "),
      _c("Notify", { ref: "notify" }),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Dropdown.vue?vue&type=template&id=6b38efd0&":
/*!******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Dropdown.vue?vue&type=template&id=6b38efd0& ***!
  \******************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* binding */ render),
/* harmony export */   "staticRenderFns": () => (/* binding */ staticRenderFns)
/* harmony export */ });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      ref: "menu",
      staticClass: "dropdown-menu",
      on: { mouseleave: _vm.listHide },
    },
    [
      _c(
        "div",
        {
          ref: "trigger",
          staticClass: "dropdown-trigger clickable",
          on: { click: _vm.listShow },
        },
        [_vm._t("trigger")],
        2
      ),
      _vm._v(" "),
      _c(
        "div",
        {
          staticClass: "dropdown-container",
          class: {
            visible: _vm.visible,
            top: _vm.top,
            right: _vm.right,
            bottom: _vm.bottom,
            left: _vm.left,
          },
          on: {
            click: function ($event) {
              $event.stopPropagation()
            },
          },
        },
        [_vm._t("list")],
        2
      ),
    ]
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/HistoryPage.vue?vue&type=template&id=d73ce958&":
/*!*********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/HistoryPage.vue?vue&type=template&id=d73ce958& ***!
  \*********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* binding */ render),
/* harmony export */   "staticRenderFns": () => (/* binding */ staticRenderFns)
/* harmony export */ });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("section", { staticClass: "history-page" }, [
    _c("div", { staticClass: "flex-row flex-middle flex-stretch mb-1" }, [
      _c("div", { staticClass: "flex-1 text-clip me-1" }, [
        _vm._v(
          "Recent price alert activity history (" +
            _vm._s(_vm.historyData.length) +
            ")"
        ),
      ]),
      _vm._v(" "),
      _c(
        "button",
        {
          staticClass: "form-btn bg-info-hover bi bi-x-lg iconLeft",
          class: { disabled: !_vm.historyData.length },
          on: { click: _vm.flushHistory },
        },
        [_vm._v(" Flush")]
      ),
    ]),
    _vm._v(" "),
    _c(
      "div",
      { staticClass: "flex-list" },
      [
        !_vm.historyData.length
          ? _c("div", { staticClass: "flex-item" }, [_vm._m(0)])
          : _vm._e(),
        _vm._v(" "),
        _vm._l(_vm.historyData, function (e) {
          return _c("div", { key: e.id, staticClass: "flex-item" }, [
            _c(
              "div",
              { staticClass: "me-1", class: { "alert-bubble": e.isNew } },
              [_c("TokenIcon", { attrs: { image: e.icon } })],
              1
            ),
            _vm._v(" "),
            _c("div", { staticClass: "flex-1 me-1" }, [
              _c("div", { staticClass: "text-default" }, [
                _vm._v(_vm._s(e.title)),
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "text-secondary" }, [
                _vm._v(_vm._s(_vm.formatInfo(e.info))),
              ]),
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "text-clip text-end" }, [
              _c("button", {
                directives: [{ name: "tooltip", rawName: "v-tooltip" }],
                staticClass: "bi bi-x-lg",
                attrs: { title: "Delete" },
                on: {
                  click: function ($event) {
                    return _vm.deleteHistory(e.id)
                  },
                },
              }),
              _vm._v(" "),
              _c("div", { staticClass: "text-default" }, [
                _vm._v(_vm._s(_vm._f("toElapsed")(e.time)) + " ago"),
              ]),
            ]),
          ])
        }),
      ],
      2
    ),
  ])
}
var staticRenderFns = [
  function () {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "flex-1 text-secondary text-faded" }, [
      _c("span", { staticClass: "bi bi-info-circle" }, [
        _vm._v(" There's nothing here right now."),
      ]),
    ])
  },
]
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/LineChart.vue?vue&type=template&id=bd094dca&":
/*!*******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/LineChart.vue?vue&type=template&id=bd094dca& ***!
  \*******************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* binding */ render),
/* harmony export */   "staticRenderFns": () => (/* binding */ staticRenderFns)
/* harmony export */ });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("section", { class: { transparent: !_vm.values.length } }, [
    _c(
      "svg",
      { attrs: { viewBox: _vm.svgBox, xmlns: "http://www.w3.org/2000/svg" } },
      [
        _c("polyline", {
          staticClass: "polyline",
          attrs: {
            fill: "none",
            stroke: "#f0f0f0",
            "stroke-width": "2",
            "stroke-linecap": "round",
            points: _vm.chartPoints,
          },
        }),
        _vm._v(" "),
        _c("circle", {
          staticClass: "circle",
          attrs: {
            cx: _vm.cx,
            cy: _vm.cy,
            r: "3",
            fill: "#f0f0f0",
            stroke: "none",
          },
        }),
      ]
    ),
  ])
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Modal.vue?vue&type=template&id=0b4bde7e&":
/*!***************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Modal.vue?vue&type=template&id=0b4bde7e& ***!
  \***************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* binding */ render),
/* harmony export */   "staticRenderFns": () => (/* binding */ staticRenderFns)
/* harmony export */ });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      staticClass: "modal-overlay modal",
      class: { visible: _vm.visible, under: _vm.under },
      on: {
        click: function ($event) {
          $event.stopPropagation()
          return _vm.close.apply(null, arguments)
        },
      },
    },
    [
      _c(
        "section",
        {
          ref: "container",
          staticClass: "modal-container",
          on: {
            click: function ($event) {
              $event.stopPropagation()
            },
          },
        },
        [
          _c("header", { staticClass: "modal-header" }, [
            _c("div", { staticClass: "modal-title" }, [
              _vm._v(_vm._s(_vm.title)),
            ]),
            _vm._v(" "),
            _c("button", {
              staticClass: "btn-close",
              attrs: { type: "button", "aria-label": "Close" },
              on: {
                click: function ($event) {
                  $event.stopPropagation()
                  return _vm.close.apply(null, arguments)
                },
              },
            }),
          ]),
          _vm._v(" "),
          _c(
            "main",
            { staticClass: "modal-content card-body" },
            [_vm._t("default")],
            2
          ),
        ]
      ),
    ]
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Notify.vue?vue&type=template&id=718124c8&":
/*!****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Notify.vue?vue&type=template&id=718124c8& ***!
  \****************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* binding */ render),
/* harmony export */   "staticRenderFns": () => (/* binding */ staticRenderFns)
/* harmony export */ });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "section",
    { staticClass: "notify-wrap" },
    _vm._l(_vm.alerts, function (a) {
      return _c(
        "div",
        {
          key: a.id,
          staticClass: "notify-alert",
          class: ["notify-" + a.type, { "notify-closed": a.closed }],
        },
        [
          _c("span", { staticClass: "notify-message" }, [
            _vm._v(_vm._s(a.message)),
          ]),
          _vm._v(" "),
          _c("button", {
            staticClass: "notify-close bi bi-x-lg",
            on: {
              click: function ($event) {
                $event.stopPropagation()
                return _vm.close(a.id)
              },
            },
          }),
        ]
      )
    }),
    0
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/OptionsPage.vue?vue&type=template&id=f4daf944&":
/*!*********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/OptionsPage.vue?vue&type=template&id=f4daf944& ***!
  \*********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* binding */ render),
/* harmony export */   "staticRenderFns": () => (/* binding */ staticRenderFns)
/* harmony export */ });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("section", [
    _c("div", { staticClass: "mb-1" }, [
      _vm._m(0),
      _vm._v(" "),
      _c(
        "div",
        { staticClass: "mb-1" },
        [
          _c("Toggle", {
            attrs: { text: "Grant permission for browser notifications" },
            on: { click: _vm.askNotifyPermission },
            model: {
              value: _vm.canNotify,
              callback: function ($$v) {
                _vm.canNotify = $$v
              },
              expression: "canNotify",
            },
          }),
          _vm._v(" "),
          _c("Toggle", {
            attrs: { text: "Enable browser notifications for all events" },
            on: {
              change: function ($event) {
                return _vm.saveOptions()
              },
            },
            model: {
              value: _vm.options.notify.enabled,
              callback: function ($$v) {
                _vm.$set(_vm.options.notify, "enabled", $$v)
              },
              expression: "options.notify.enabled",
            },
          }),
          _vm._v(" "),
          _c("Toggle", {
            attrs: { text: "Play a notification sound effect" },
            on: {
              change: function ($event) {
                return _vm.saveOptions()
              },
            },
            model: {
              value: _vm.options.audio.enabled,
              callback: function ($$v) {
                _vm.$set(_vm.options.audio, "enabled", $$v)
              },
              expression: "options.audio.enabled",
            },
          }),
        ],
        1
      ),
      _vm._v(" "),
      _c("div", { staticClass: "flex-row flex-middle flex-stretch" }, [
        _c(
          "div",
          { staticClass: "flex-1 form-input me-1" },
          [
            _c("SelectMenu", {
              staticClass: "flex-1 me-1",
              attrs: { options: _vm.audioFiles },
              on: {
                change: function ($event) {
                  return _vm.saveOptions(true)
                },
              },
              model: {
                value: _vm.options.audio.file,
                callback: function ($$v) {
                  _vm.$set(_vm.options.audio, "file", $$v)
                },
                expression: "options.audio.file",
              },
            }),
            _vm._v(" "),
            _c("button", {
              staticClass: "text-bright bi bi-play-circle",
              on: {
                click: function ($event) {
                  return _vm.playSound()
                },
              },
            }),
          ],
          1
        ),
        _vm._v(" "),
        _c("div", { staticClass: "flex-1 form-input me-1" }, [
          _c("span", { staticClass: "text-grey me-1" }, [_vm._v("Volume")]),
          _vm._v(" "),
          _c("input", {
            directives: [
              {
                name: "model",
                rawName: "v-model",
                value: _vm.options.audio.volume,
                expression: "options.audio.volume",
              },
            ],
            attrs: { type: "range", min: "0.1", max: "1.0", step: "0.1" },
            domProps: { value: _vm.options.audio.volume },
            on: {
              change: function ($event) {
                return _vm.saveOptions(true)
              },
              __r: function ($event) {
                return _vm.$set(
                  _vm.options.audio,
                  "volume",
                  $event.target.value
                )
              },
            },
          }),
          _vm._v(" "),
          _c("span", { staticClass: "ms-1" }, [
            _vm._v(_vm._s(_vm.options.audio.volume)),
          ]),
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "flex-1 form-input" }, [
          _c("span", { staticClass: "text-grey me-1" }, [_vm._v("Visible")]),
          _vm._v(" "),
          _c("input", {
            directives: [
              {
                name: "model",
                rawName: "v-model",
                value: _vm.options.notify.duration,
                expression: "options.notify.duration",
              },
            ],
            attrs: { type: "range", min: "5", max: "30", step: "1" },
            domProps: { value: _vm.options.notify.duration },
            on: {
              change: function ($event) {
                return _vm.saveOptions()
              },
              __r: function ($event) {
                return _vm.$set(
                  _vm.options.notify,
                  "duration",
                  $event.target.value
                )
              },
            },
          }),
          _vm._v(" "),
          _c("span", { staticClass: "ms-1" }, [
            _vm._v(_vm._s(_vm.options.notify.duration) + "s"),
          ]),
        ]),
      ]),
    ]),
    _vm._v(" "),
    _c("hr"),
    _vm._v(" "),
    _c(
      "div",
      { staticClass: "mb-1" },
      [
        _vm._m(1),
        _vm._v(" "),
        _c("Toggle", {
          attrs: { text: "Must type full search words to see results" },
          on: {
            change: function ($event) {
              return _vm.saveOptions()
            },
          },
          model: {
            value: _vm.options.search.fullword,
            callback: function ($$v) {
              _vm.$set(_vm.options.search, "fullword", $$v)
            },
            expression: "options.search.fullword",
          },
        }),
        _vm._v(" "),
        _c("Toggle", {
          attrs: { text: "Must type upper/lower case word letters" },
          on: {
            change: function ($event) {
              return _vm.saveOptions()
            },
          },
          model: {
            value: _vm.options.search.fullcase,
            callback: function ($$v) {
              _vm.$set(_vm.options.search, "fullcase", $$v)
            },
            expression: "options.search.fullcase",
          },
        }),
      ],
      1
    ),
  ])
}
var staticRenderFns = [
  function () {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "form-label mb-1" }, [
      _vm._v("\n      Browser Notifications "),
      _c("i", { staticClass: "bi bi-chevron-down" }),
    ])
  },
  function () {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "form-label mb-1" }, [
      _vm._v("\n      Search Options (Affects sentiment analysis) "),
      _c("i", { staticClass: "bi bi-chevron-down" }),
    ])
  },
]
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/OptionsPageAdmin.vue?vue&type=template&id=69f45141&":
/*!**************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/OptionsPageAdmin.vue?vue&type=template&id=69f45141& ***!
  \**************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* binding */ render),
/* harmony export */   "staticRenderFns": () => (/* binding */ staticRenderFns)
/* harmony export */ });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("section", [
    _c("div", { staticClass: "mb-1" }, [
      _vm._m(0),
      _vm._v(" "),
      _c(
        "div",
        { staticClass: "mb-1" },
        [
          _c("Toggle", {
            attrs: { text: "Grant permission for browser notifications" },
            on: { click: _vm.askNotifyPermission },
            model: {
              value: _vm.canNotify,
              callback: function ($$v) {
                _vm.canNotify = $$v
              },
              expression: "canNotify",
            },
          }),
          _vm._v(" "),
          _c("Toggle", {
            attrs: { text: "Enable browser notifications for all events" },
            on: {
              change: function ($event) {
                return _vm.saveOptions()
              },
            },
            model: {
              value: _vm.options.notify.enabled,
              callback: function ($$v) {
                _vm.$set(_vm.options.notify, "enabled", $$v)
              },
              expression: "options.notify.enabled",
            },
          }),
          _vm._v(" "),
          _c("Toggle", {
            attrs: { text: "Play a notification sound effect" },
            on: {
              change: function ($event) {
                return _vm.saveOptions()
              },
            },
            model: {
              value: _vm.options.audio.enabled,
              callback: function ($$v) {
                _vm.$set(_vm.options.audio, "enabled", $$v)
              },
              expression: "options.audio.enabled",
            },
          }),
        ],
        1
      ),
      _vm._v(" "),
      _c("div", { staticClass: "flex-row flex-middle flex-stretch" }, [
        _c(
          "div",
          { staticClass: "flex-1 form-input me-1" },
          [
            _c("SelectMenu", {
              staticClass: "flex-1 me-1",
              attrs: { options: _vm.audioFiles },
              on: {
                change: function ($event) {
                  return _vm.saveOptions(true)
                },
              },
              model: {
                value: _vm.options.audio.file,
                callback: function ($$v) {
                  _vm.$set(_vm.options.audio, "file", $$v)
                },
                expression: "options.audio.file",
              },
            }),
            _vm._v(" "),
            _c("button", {
              staticClass: "text-bright bi bi-play-circle",
              on: {
                click: function ($event) {
                  return _vm.playSound()
                },
              },
            }),
          ],
          1
        ),
        _vm._v(" "),
        _c("div", { staticClass: "flex-1 form-input me-1" }, [
          _c("span", { staticClass: "text-grey me-1" }, [_vm._v("Volume")]),
          _vm._v(" "),
          _c("input", {
            directives: [
              {
                name: "model",
                rawName: "v-model",
                value: _vm.options.audio.volume,
                expression: "options.audio.volume",
              },
            ],
            attrs: { type: "range", min: "0.1", max: "1.0", step: "0.1" },
            domProps: { value: _vm.options.audio.volume },
            on: {
              change: function ($event) {
                return _vm.saveOptions(true)
              },
              __r: function ($event) {
                return _vm.$set(
                  _vm.options.audio,
                  "volume",
                  $event.target.value
                )
              },
            },
          }),
          _vm._v(" "),
          _c("span", { staticClass: "ms-1" }, [
            _vm._v(_vm._s(_vm.options.audio.volume)),
          ]),
        ]),
        _vm._v(" "),
        _c("div", { staticClass: "flex-1 form-input" }, [
          _c("span", { staticClass: "text-grey me-1" }, [_vm._v("Visible")]),
          _vm._v(" "),
          _c("input", {
            directives: [
              {
                name: "model",
                rawName: "v-model",
                value: _vm.options.notify.duration,
                expression: "options.notify.duration",
              },
            ],
            attrs: { type: "range", min: "5", max: "30", step: "1" },
            domProps: { value: _vm.options.notify.duration },
            on: {
              change: function ($event) {
                return _vm.saveOptions()
              },
              __r: function ($event) {
                return _vm.$set(
                  _vm.options.notify,
                  "duration",
                  $event.target.value
                )
              },
            },
          }),
          _vm._v(" "),
          _c("span", { staticClass: "ms-1" }, [
            _vm._v(_vm._s(_vm.options.notify.duration) + "s"),
          ]),
        ]),
      ]),
    ]),
    _vm._v(" "),
    _c("hr"),
    _vm._v(" "),
    _c(
      "div",
      { staticClass: "mb-1" },
      [
        _vm._m(1),
        _vm._v(" "),
        _c("Toggle", {
          attrs: { text: "Must type full search words to see results" },
          on: {
            change: function ($event) {
              return _vm.saveOptions()
            },
          },
          model: {
            value: _vm.options.search.fullword,
            callback: function ($$v) {
              _vm.$set(_vm.options.search, "fullword", $$v)
            },
            expression: "options.search.fullword",
          },
        }),
        _vm._v(" "),
        _c("Toggle", {
          attrs: { text: "Must type upper/lower case word letters" },
          on: {
            change: function ($event) {
              return _vm.saveOptions()
            },
          },
          model: {
            value: _vm.options.search.fullcase,
            callback: function ($$v) {
              _vm.$set(_vm.options.search, "fullcase", $$v)
            },
            expression: "options.search.fullcase",
          },
        }),
      ],
      1
    ),
    _vm._v(" "),
    _c("hr"),
    _vm._v(" "),
    _c(
      "div",
      { staticClass: "mb-1" },
      [
        _vm._m(2),
        _vm._v(" "),
        _c("Tabs", { staticClass: "mb-1" }, [
          _c(
            "section",
            {
              attrs: { "btn-class": "bi bi-server", "btn-name": "CORS Proxy" },
            },
            [
              _c(
                "form",
                {
                  staticClass:
                    "cors-form flex-row flex-middle flex-stretch mb-1",
                  attrs: { action: "#", disabled: _vm.testing },
                  on: { submit: _vm.corsFormSubmit },
                },
                [
                  _c("div", { staticClass: "form-input flex-1 me-1" }, [
                    _c("span", { staticClass: "text-nowrap text-grey me-1" }, [
                      _vm._v("Proxy:"),
                    ]),
                    _vm._v(" "),
                    _c("input", {
                      directives: [
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.corsProxy,
                          expression: "corsProxy",
                        },
                      ],
                      staticClass: "text-light w-100",
                      attrs: {
                        type: "text",
                        name: "proxyurl",
                        placeholder: "https://...",
                      },
                      domProps: { value: _vm.corsProxy },
                      on: {
                        blur: function ($event) {
                          return _vm.saveOptions()
                        },
                        input: function ($event) {
                          if ($event.target.composing) {
                            return
                          }
                          _vm.corsProxy = $event.target.value
                        },
                      },
                    }),
                    _vm._v(" "),
                    _c("span", {
                      staticClass: "ms-auto",
                      class: {
                        "bi bi-check-circle text-gain": _vm.urlSuccess,
                        "bi bi-x-lg text-loss": !_vm.urlSuccess,
                        "bi bi-clock text-warning": _vm.testing,
                      },
                    }),
                  ]),
                  _vm._v(" "),
                  _c(
                    "button",
                    {
                      staticClass: "form-btn bg-info-hover me-1 push-small",
                      attrs: { type: "submit" },
                    },
                    [
                      _c("i", {
                        staticClass: "bi bi-arrow-clockwise",
                        class: { iconSpin: _vm.testing },
                      }),
                      _vm._v(" Test\n          "),
                    ]
                  ),
                  _vm._v(" "),
                  _c(
                    "button",
                    {
                      staticClass: "form-btn bg-success-hover",
                      attrs: { type: "button" },
                      on: {
                        click: function ($event) {
                          return _vm.addProxy(_vm.corsProxy)
                        },
                      },
                    },
                    [
                      _c("i", { staticClass: "bi bi-check-circle" }),
                      _vm._v(" Save\n          "),
                    ]
                  ),
                ]
              ),
              _vm._v(" "),
              _c(
                "div",
                { staticClass: "flex-list mb-1" },
                _vm._l(_vm.proxyList, function (p) {
                  return _c(
                    "div",
                    {
                      key: p.url,
                      staticClass:
                        "flex-item flex-row flex-middle flex-stretch",
                    },
                    [
                      _c(
                        "div",
                        {
                          staticClass:
                            "flex-1 bi bi-server iconLeft clickable text-clip me-1",
                          class: { "text-success": p.selected },
                          on: {
                            click: function ($event) {
                              return _vm.setProxy(p.url)
                            },
                          },
                        },
                        [_vm._v(_vm._s(p.url))]
                      ),
                      _vm._v(" "),
                      _c("button", {
                        staticClass: "bi bi-x-lg text-danger-hover",
                        attrs: { type: "button" },
                        on: {
                          click: function ($event) {
                            return _vm.removeProxy(p.url)
                          },
                        },
                      }),
                    ]
                  )
                }),
                0
              ),
              _vm._v(" "),
              _c("div", { staticClass: "text-small text-grey" }, [
                _c("p", [
                  _vm._v(
                    "\n            External proxy server used to route outgoing HTTP requests from this app to get around the browser's built-in\n            "
                  ),
                  _c(
                    "a",
                    {
                      staticClass: "text-nowrap",
                      attrs: {
                        href: "https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS",
                        target: "_blank",
                      },
                    },
                    [_vm._v("Cross-Origin Resource Sharing")]
                  ),
                  _vm._v(
                    "\n            (CORS) protection. You can run your own proxy server by installing\n            "
                  ),
                  _c(
                    "a",
                    {
                      staticClass: "text-nowrap",
                      attrs: {
                        href: "https://github.com/Rob--W/cors-anywhere",
                        target: "_blank",
                      },
                    },
                    [_vm._v("CORS-Anywhere")]
                  ),
                  _vm._v(".\n          "),
                ]),
              ]),
            ]
          ),
          _vm._v(" "),
          _c(
            "section",
            {
              attrs: {
                id: "precors",
                "btn-class": "bi bi-at",
                "btn-name": "Mailgun API",
                active: "",
              },
            },
            [
              _c("Toggle", {
                staticClass: "mb-1",
                attrs: { text: "Enable notifications using Mailgun API" },
                on: {
                  change: function ($event) {
                    return _vm.saveOptions()
                  },
                },
                model: {
                  value: _vm.options.mailgun.enabled,
                  callback: function ($$v) {
                    _vm.$set(_vm.options.mailgun, "enabled", $$v)
                  },
                  expression: "options.mailgun.enabled",
                },
              }),
              _vm._v(" "),
              _c("div", { staticClass: "form-input mb-1" }, [
                _c("span", { staticClass: "text-nowrap text-grey me-1" }, [
                  _vm._v("Mailgun Domain:"),
                ]),
                _vm._v(" "),
                _c("input", {
                  directives: [
                    {
                      name: "model",
                      rawName: "v-model",
                      value: _vm.options.mailgun.domain,
                      expression: "options.mailgun.domain",
                    },
                  ],
                  staticClass: "flex-1 text-light w-100",
                  attrs: { type: "text", placeholder: "mysite.com" },
                  domProps: { value: _vm.options.mailgun.domain },
                  on: {
                    blur: function ($event) {
                      return _vm.saveOptions()
                    },
                    input: function ($event) {
                      if ($event.target.composing) {
                        return
                      }
                      _vm.$set(
                        _vm.options.mailgun,
                        "domain",
                        $event.target.value
                      )
                    },
                  },
                }),
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "form-input mb-1" }, [
                _c("span", { staticClass: "text-nowrap text-grey me-1" }, [
                  _vm._v("Mailgun API Key:"),
                ]),
                _vm._v(" "),
                _c("input", {
                  directives: [
                    {
                      name: "model",
                      rawName: "v-model",
                      value: _vm.options.mailgun.apikey,
                      expression: "options.mailgun.apikey",
                    },
                  ],
                  staticClass: "flex-1 text-light w-100",
                  attrs: { type: "text", placeholder: "key-..." },
                  domProps: { value: _vm.options.mailgun.apikey },
                  on: {
                    blur: function ($event) {
                      return _vm.saveOptions()
                    },
                    input: function ($event) {
                      if ($event.target.composing) {
                        return
                      }
                      _vm.$set(
                        _vm.options.mailgun,
                        "apikey",
                        $event.target.value
                      )
                    },
                  },
                }),
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "form-input mb-1" }, [
                _c("span", { staticClass: "text-nowrap text-grey me-1" }, [
                  _vm._v("Recipient E-mail:"),
                ]),
                _vm._v(" "),
                _c("input", {
                  directives: [
                    {
                      name: "model",
                      rawName: "v-model",
                      value: _vm.options.mailgun.email,
                      expression: "options.mailgun.email",
                    },
                  ],
                  staticClass: "flex-1 text-light w-100",
                  attrs: { type: "text", placeholder: "me@site.com" },
                  domProps: { value: _vm.options.mailgun.email },
                  on: {
                    blur: function ($event) {
                      return _vm.saveOptions()
                    },
                    input: function ($event) {
                      if ($event.target.composing) {
                        return
                      }
                      _vm.$set(
                        _vm.options.mailgun,
                        "email",
                        $event.target.value
                      )
                    },
                  },
                }),
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "text-small text-grey" }, [
                _c("p", [
                  _vm._v("\n            This app can connect to the "),
                  _c(
                    "a",
                    {
                      staticClass: "text-nowrap",
                      attrs: {
                        href: "https://www.mailgun.com/",
                        target: "_blank",
                      },
                    },
                    [_vm._v("Mailgun API")]
                  ),
                  _vm._v(
                    "\n            for sending outgoing e-mail notifications using a Mailgun account. You will need to add your Mailgun account details above.\n          "
                  ),
                ]),
              ]),
            ],
            1
          ),
          _vm._v(" "),
          _c(
            "section",
            {
              attrs: { "btn-class": "bi bi-send", "btn-name": "Telegram API" },
            },
            [
              _c("Toggle", {
                staticClass: "mb-1",
                attrs: { text: "Enable notifications using Telegram Bot API" },
                on: {
                  change: function ($event) {
                    return _vm.saveOptions()
                  },
                },
                model: {
                  value: _vm.options.telegram.enabled,
                  callback: function ($$v) {
                    _vm.$set(_vm.options.telegram, "enabled", $$v)
                  },
                  expression: "options.telegram.enabled",
                },
              }),
              _vm._v(" "),
              _c("div", { staticClass: "form-input mb-1" }, [
                _c("span", { staticClass: "text-nowrap text-grey me-1" }, [
                  _vm._v("Telegram Bot Key:"),
                ]),
                _vm._v(" "),
                _c("input", {
                  directives: [
                    {
                      name: "model",
                      rawName: "v-model",
                      value: _vm.options.telegram.botkey,
                      expression: "options.telegram.botkey",
                    },
                  ],
                  staticClass: "flex-1 text-light w-100",
                  attrs: { type: "text", placeholder: "00000:xxxxx..." },
                  domProps: { value: _vm.options.telegram.botkey },
                  on: {
                    blur: function ($event) {
                      return _vm.saveOptions()
                    },
                    input: function ($event) {
                      if ($event.target.composing) {
                        return
                      }
                      _vm.$set(
                        _vm.options.telegram,
                        "botkey",
                        $event.target.value
                      )
                    },
                  },
                }),
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "form-input mb-1" }, [
                _c("span", { staticClass: "text-nowrap text-grey me-1" }, [
                  _vm._v("Telegram User ID:"),
                ]),
                _vm._v(" "),
                _c("input", {
                  directives: [
                    {
                      name: "model",
                      rawName: "v-model",
                      value: _vm.options.telegram.userid,
                      expression: "options.telegram.userid",
                    },
                  ],
                  staticClass: "flex-1 text-light w-100",
                  attrs: { type: "text", placeholder: "0000000..." },
                  domProps: { value: _vm.options.telegram.userid },
                  on: {
                    blur: function ($event) {
                      return _vm.saveOptions()
                    },
                    input: function ($event) {
                      if ($event.target.composing) {
                        return
                      }
                      _vm.$set(
                        _vm.options.telegram,
                        "userid",
                        $event.target.value
                      )
                    },
                  },
                }),
              ]),
              _vm._v(" "),
              _c("div", { staticClass: "text-small text-grey" }, [
                _c("p", [
                  _vm._v("\n            This app can connect to the "),
                  _c(
                    "a",
                    {
                      staticClass: "text-nowrap",
                      attrs: {
                        href: "https://core.telegram.org/bots#creating-a-new-bot",
                        target: "_blank",
                      },
                    },
                    [_vm._v("Telegram Bot API")]
                  ),
                  _vm._v(
                    "\n            for sending outgoing notifications using the Telegram app on desktop or mobile.\n            You will need to provide a Bot API Token and the User chat ID above.\n            You can use a bot such as "
                  ),
                  _c(
                    "a",
                    {
                      attrs: {
                        href: "https://t.me/@JsonDumpBot",
                        target: "_blank",
                      },
                    },
                    [_vm._v("@JsonDumpBot")]
                  ),
                  _vm._v(" to find out what your user chat_id is.\n          "),
                ]),
              ]),
            ],
            1
          ),
        ]),
      ],
      1
    ),
  ])
}
var staticRenderFns = [
  function () {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "form-label mb-1" }, [
      _vm._v("\n      Browser Notifications "),
      _c("i", { staticClass: "bi bi-chevron-down" }),
    ])
  },
  function () {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "form-label mb-1" }, [
      _vm._v("\n      Search Options (Affects sentiment analysis) "),
      _c("i", { staticClass: "bi bi-chevron-down" }),
    ])
  },
  function () {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "form-label mb-1" }, [
      _vm._v("\n      Outgoing Requests & Notifications (Advanced) "),
      _c("i", { staticClass: "bi bi-chevron-down" }),
    ])
  },
]
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Search.vue?vue&type=template&id=e6d0a8b2&":
/*!****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Search.vue?vue&type=template&id=e6d0a8b2& ***!
  \****************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* binding */ render),
/* harmony export */   "staticRenderFns": () => (/* binding */ staticRenderFns)
/* harmony export */ });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      staticClass: "search-wrap form-input w-25",
      staticStyle: { background: "rgb(255 255 255 / 6%)" },
    },
    [
      _c("i", { staticClass: "bi bi-search me-1 text-dark" }),
      _vm._v(" "),
      _c("input", {
        directives: [
          {
            name: "model",
            rawName: "v-model",
            value: _vm.searchStr,
            expression: "searchStr",
          },
        ],
        staticClass: "search-input flex-1 me-1 text-dark",
        attrs: { type: "text", placeholder: "Search..." },
        domProps: { value: _vm.searchStr },
        on: {
          click: _vm.onClick,
          change: _vm.onChange,
          keyup: _vm.onInput,
          input: function ($event) {
            if ($event.target.composing) {
              return
            }
            _vm.searchStr = $event.target.value
          },
        },
      }),
      _vm._v(" "),
      _vm.searchStr
        ? _c("button", { staticClass: "btn-close", on: { click: _vm.onReset } })
        : _vm._e(),
    ]
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/SelectMenu.vue?vue&type=template&id=cb930d0c&":
/*!********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/SelectMenu.vue?vue&type=template&id=cb930d0c& ***!
  \********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* binding */ render),
/* harmony export */   "staticRenderFns": () => (/* binding */ staticRenderFns)
/* harmony export */ });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      ref: "menu",
      staticClass: "select-wrap",
      on: { mouseleave: _vm.listHide },
    },
    [
      _c(
        "button",
        {
          ref: "trigger",
          staticClass: "select-trigger text-nowrap",
          class: _vm.css,
          attrs: { type: "button" },
          on: { click: _vm.onClick, focus: _vm.onFocus },
        },
        [
          _vm._v("\n    " + _vm._s(_vm.text || "Select...") + " "),
          _c("i", { staticClass: "bi bi-chevron-down text-info" }),
        ]
      ),
      _vm._v(" "),
      _c(
        "div",
        {
          staticClass: "select-container",
          class: { visible: _vm.visible, top: _vm.top, bottom: _vm.bottom },
        },
        [
          _c(
            "ul",
            { staticClass: "select-list" },
            [
              !_vm.optionsList.length
                ? _c("li", [_vm._v("No options")])
                : _vm._e(),
              _vm._v(" "),
              _vm._l(_vm.optionsList, function (o, i) {
                return _c(
                  "li",
                  {
                    key: o.value,
                    class: { active: o.active },
                    on: {
                      click: function ($event) {
                        $event.stopPropagation()
                        return _vm.changeOption(i, true)
                      },
                    },
                  },
                  [_vm._v(_vm._s(o.text))]
                )
              }),
            ],
            2
          ),
        ]
      ),
      _vm._v(" "),
      _c("div", { staticClass: "select-elements" }, [_vm._t("default")], 2),
    ]
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Spinner.vue?vue&type=template&id=66f014ac&":
/*!*****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Spinner.vue?vue&type=template&id=66f014ac& ***!
  \*****************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* binding */ render),
/* harmony export */   "staticRenderFns": () => (/* binding */ staticRenderFns)
/* harmony export */ });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      staticClass: "spinner-overlay",
      class: { visible: _vm.visible, failed: _vm.failed },
      on: {
        click: function ($event) {
          $event.stopPropagation()
          return _vm.click.apply(null, arguments)
        },
      },
    },
    [
      _c("div", { staticClass: "spinner-content" }, [
        _c("div", { staticClass: "spinner-wheel" }),
        _vm._v(" "),
        _vm.message
          ? _c("div", {
              staticClass: "spinner-messge",
              domProps: { textContent: _vm._s(_vm.message) },
            })
          : _vm._e(),
      ]),
    ]
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Tabs.vue?vue&type=template&id=092d4c3d&":
/*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Tabs.vue?vue&type=template&id=092d4c3d& ***!
  \**************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* binding */ render),
/* harmony export */   "staticRenderFns": () => (/* binding */ staticRenderFns)
/* harmony export */ });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      ref: "container",
      staticClass: "tabs-wrap",
      on: {
        click: function ($event) {
          $event.stopPropagation()
          return _vm.hideDropdown.apply(null, arguments)
        },
      },
    },
    [
      !_vm.inline
        ? _c(
            "div",
            {
              staticClass: "tabs-toggle",
              on: {
                click: function ($event) {
                  $event.stopPropagation()
                  return _vm.toggleDropdown.apply(null, arguments)
                },
              },
            },
            [
              _c("span", { staticClass: "bi bi-list text-clip" }, [
                _vm._v("  " + _vm._s(_vm.tabName)),
              ]),
            ]
          )
        : _vm._e(),
      _vm._v(" "),
      _c(
        "nav",
        {
          staticClass: "tabs-nav",
          class: {
            "tabs-inline": _vm.inline,
            "tabs-drop": !_vm.inline,
            visible: _vm.visible,
          },
        },
        _vm._l(_vm.tabs, function (tab, index) {
          return _c(
            "button",
            {
              key: tab.name,
              class: [{ active: tab.active }, tab.styles],
              on: {
                click: function ($event) {
                  return _vm.activateTab(index)
                },
              },
            },
            [_vm._v("\n      " + _vm._s(tab.name) + "\n    ")]
          )
        }),
        0
      ),
      _vm._v(" "),
      _c("div", { staticClass: "tabs-content" }, [_vm._t("default")], 2),
    ]
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Toggle.vue?vue&type=template&id=f7bd695a&":
/*!****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Toggle.vue?vue&type=template&id=f7bd695a& ***!
  \****************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* binding */ render),
/* harmony export */   "staticRenderFns": () => (/* binding */ staticRenderFns)
/* harmony export */ });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "label",
    { staticClass: "toggle-wrap", on: { click: _vm.onClick } },
    [
      _c("input", {
        staticClass: "toggle-input",
        attrs: { type: "checkbox" },
        domProps: { checked: _vm.value },
        on: { change: _vm.onChange },
      }),
      _vm._v(" "),
      _c("div", { staticClass: "toggle-switch" }),
      _vm._v(" "),
      _c("div", { staticClass: "toggle-text" }, [_vm._v(_vm._s(_vm.text))]),
    ]
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/TokenIcon.vue?vue&type=template&id=3ca2eae3&":
/*!*******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/TokenIcon.vue?vue&type=template&id=3ca2eae3& ***!
  \*******************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* binding */ render),
/* harmony export */   "staticRenderFns": () => (/* binding */ staticRenderFns)
/* harmony export */ });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c("div", { staticClass: "tokenicon-wrap" }, [
    _c("img", {
      staticClass: "tokenicon-image",
      attrs: { src: _vm.image, alt: _vm.alt },
      on: { error: _vm.imageError },
    }),
  ])
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/TokenList.vue?vue&type=template&id=8e5876f0&":
/*!*******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/TokenList.vue?vue&type=template&id=8e5876f0& ***!
  \*******************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* binding */ render),
/* harmony export */   "staticRenderFns": () => (/* binding */ staticRenderFns)
/* harmony export */ });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "main",
    {
      staticClass: "page-wrap",
      class: { collapsed: _vm.header.collapsed, opaque: _vm.header.opaque },
    },
    [
      _c(
        "div",
        { staticClass: "card-body" },
        [
          _c("section", { staticClass: "page-topbar" }, [
            _c(
              "div",
              { staticClass: "flex-row flex-middle flex-space" },
              [
                _c("Search", {
                  staticClass: "light",
                  model: {
                    value: _vm.searchStr,
                    callback: function ($$v) {
                      _vm.searchStr = $$v
                    },
                    expression: "searchStr",
                  },
                }),
                _vm._v(" "),
                _c(
                  "div",
                  {
                    staticClass:
                      "flex-1 text-clip text-big text-center me-1 if-medium",
                  },
                  [_vm._v("24h Change")]
                ),
                _vm._v(" "),
                _c(
                  "div",
                  {
                    staticClass:
                      "d-flex justify-content-between align-items-center",
                  },
                  [
                    _c("div", { staticClass: "dropdown" }, [
                      _c(
                        "button",
                        {
                          staticClass:
                            "btn btn-sm btn-secondary bi bi-chevron-down iconLeft",
                          attrs: {
                            id: "Limitmenu",
                            "data-bs-toggle": "dropdown",
                            "aria-expanded": "false",
                          },
                        },
                        [_vm._v(" " + _vm._s(_vm.limitCountLabel))]
                      ),
                      _vm._v(" "),
                      _c(
                        "div",
                        {
                          staticClass: "dropdown-menu",
                          attrs: { "aria-labelledby": "Limitmenu" },
                        },
                        [
                          _vm._m(0),
                          _vm._v(" "),
                          _c(
                            "li",
                            {
                              staticClass: "dropdown-item clickable",
                              class: { active: _vm.activeLimit(10) },
                              on: {
                                click: function ($event) {
                                  return _vm.limitList(10)
                                },
                              },
                            },
                            [
                              _c("i", {
                                staticClass: "bi bi-list-ul iconLeft",
                              }),
                              _vm._v(" 10 tokens\n                "),
                            ]
                          ),
                          _vm._v(" "),
                          _c(
                            "li",
                            {
                              staticClass: "dropdown-item clickable",
                              class: { active: _vm.activeLimit(20) },
                              on: {
                                click: function ($event) {
                                  return _vm.limitList(20)
                                },
                              },
                            },
                            [
                              _c("i", {
                                staticClass: "bi bi-list-ul iconLeft",
                              }),
                              _vm._v(" 20 tokens\n                "),
                            ]
                          ),
                          _vm._v(" "),
                          _c(
                            "li",
                            {
                              staticClass: "dropdown-item clickable",
                              class: { active: _vm.activeLimit(50) },
                              on: {
                                click: function ($event) {
                                  return _vm.limitList(50)
                                },
                              },
                            },
                            [
                              _c("i", {
                                staticClass: "bi bi-list-ul iconLeft",
                              }),
                              _vm._v(" 50 tokens\n                "),
                            ]
                          ),
                          _vm._v(" "),
                          _c(
                            "li",
                            {
                              staticClass: "dropdown-item clickable",
                              class: { active: _vm.activeLimit(100) },
                              on: {
                                click: function ($event) {
                                  return _vm.limitList(100)
                                },
                              },
                            },
                            [
                              _c("i", {
                                staticClass: "bi bi-list-ul iconLeft",
                              }),
                              _vm._v(" 100 tokens\n                "),
                            ]
                          ),
                          _vm._v(" "),
                          _c(
                            "li",
                            {
                              staticClass: "dropdown-item clickable",
                              class: { active: _vm.activeLimit(0) },
                              on: {
                                click: function ($event) {
                                  return _vm.limitList(0)
                                },
                              },
                            },
                            [
                              _c("i", {
                                staticClass: "bi bi-list-ul iconLeft",
                              }),
                              _vm._v(" All tokens\n                "),
                            ]
                          ),
                        ]
                      ),
                    ]),
                    _vm._v(" \n\n            "),
                    _c("div", { staticClass: "dropdown" }, [
                      _c(
                        "button",
                        {
                          staticClass: "btn btn-sm btn-secondary iconLeft",
                          attrs: {
                            id: "Sortingmenu",
                            "data-bs-toggle": "dropdown",
                            "aria-expanded": "false",
                          },
                        },
                        [
                          _c("i", { staticClass: "bi bi-sort-down-alt" }),
                          _vm._v(
                            " " + _vm._s(_vm.sortByLabel) + "\n              "
                          ),
                        ]
                      ),
                      _vm._v(" "),
                      _c(
                        "div",
                        {
                          staticClass: "dropdown-menu",
                          attrs: { "aria-labelledby": "Sortingmenu" },
                        },
                        [
                          _vm._m(1),
                          _vm._v(" "),
                          _c(
                            "li",
                            {
                              staticClass: "dropdown-item clickable",
                              class: { active: _vm.activeSort("token") },
                              on: {
                                click: function ($event) {
                                  return _vm.$sorter.sortOrder(
                                    "ticker",
                                    "token",
                                    "asc"
                                  )
                                },
                              },
                            },
                            [
                              _c("i", { staticClass: "bi bi-coin iconLeft" }),
                              _vm._v(" Token\n                "),
                            ]
                          ),
                          _vm._v(" "),
                          _c(
                            "li",
                            {
                              staticClass: "dropdown-item clickable",
                              class: { active: _vm.activeSort("percent") },
                              on: {
                                click: function ($event) {
                                  return _vm.$sorter.sortOrder(
                                    "ticker",
                                    "percent",
                                    "desc"
                                  )
                                },
                              },
                            },
                            [
                              _c("i", {
                                staticClass: "bi bi-percent iconLeft",
                              }),
                              _vm._v(" Percent\n                "),
                            ]
                          ),
                          _vm._v(" "),
                          _c(
                            "li",
                            {
                              staticClass: "dropdown-item clickable",
                              class: { active: _vm.activeSort("close") },
                              on: {
                                click: function ($event) {
                                  return _vm.$sorter.sortOrder(
                                    "ticker",
                                    "close",
                                    "desc"
                                  )
                                },
                              },
                            },
                            [
                              _c("i", {
                                staticClass: "bi bi-graph-up iconLeft",
                              }),
                              _vm._v(" Price\n                "),
                            ]
                          ),
                          _vm._v(" "),
                          _c(
                            "li",
                            {
                              staticClass: "dropdown-item clickable",
                              class: { active: _vm.activeSort("volatility") },
                              on: {
                                click: function ($event) {
                                  return _vm.$sorter.sortOrder(
                                    "ticker",
                                    "volatility",
                                    "desc"
                                  )
                                },
                              },
                            },
                            [
                              _c("i", {
                                staticClass: "bi bi-graph-up iconLeft",
                              }),
                              _vm._v(" Volatility\n                "),
                            ]
                          ),
                          _vm._v(" "),
                          _c(
                            "li",
                            {
                              staticClass: "dropdown-item clickable",
                              class: { active: _vm.activeSort("danger") },
                              on: {
                                click: function ($event) {
                                  return _vm.$sorter.sortOrder(
                                    "ticker",
                                    "danger",
                                    "desc"
                                  )
                                },
                              },
                            },
                            [
                              _c("i", {
                                staticClass:
                                  "bi bi-exclamation-circle iconLeft",
                              }),
                              _vm._v(" Danger\n                "),
                            ]
                          ),
                          _vm._v(" "),
                          _c(
                            "li",
                            {
                              staticClass: "dropdown-item clickable",
                              class: { active: _vm.activeSort("change") },
                              on: {
                                click: function ($event) {
                                  return _vm.$sorter.sortOrder(
                                    "ticker",
                                    "change",
                                    "desc"
                                  )
                                },
                              },
                            },
                            [
                              _c("i", { staticClass: "bi bi-clock iconLeft" }),
                              _vm._v(" Change\n                "),
                            ]
                          ),
                          _vm._v(" "),
                          _c(
                            "li",
                            {
                              staticClass: "dropdown-item clickable",
                              class: { active: _vm.activeSort("marketVolume") },
                              on: {
                                click: function ($event) {
                                  return _vm.$sorter.sortOrder(
                                    "ticker",
                                    "marketVolume",
                                    "desc"
                                  )
                                },
                              },
                            },
                            [
                              _c("i", {
                                staticClass:
                                  "bi bi-bar-chart-line-fill iconLeft",
                              }),
                              _vm._v(" Volume\n                "),
                            ]
                          ),
                          _vm._v(" "),
                          _c(
                            "li",
                            {
                              staticClass: "dropdown-item clickable",
                              class: { active: _vm.activeSort("trades") },
                              on: {
                                click: function ($event) {
                                  return _vm.$sorter.sortOrder(
                                    "ticker",
                                    "trades",
                                    "desc"
                                  )
                                },
                              },
                            },
                            [
                              _c("i", {
                                staticClass: "bi bi-arrow-left-right iconLeft",
                              }),
                              _vm._v(" Trades\n                "),
                            ]
                          ),
                        ]
                      ),
                    ]),
                    _vm._v(" \n\n            "),
                    _c("div", { staticClass: "dropdown" }, [
                      _c("button", {
                        staticClass:
                          "btn btn-sm btn-warning bi bi-star iconLeft",
                        attrs: {
                          id: "Filtermenu",
                          "data-bs-toggle": "dropdown",
                          "aria-expanded": "false",
                        },
                        domProps: {
                          textContent: _vm._s(_vm.options.prices.market),
                        },
                      }),
                      _vm._v(" "),
                      _c(
                        "div",
                        {
                          staticClass: "dropdown-menu",
                          attrs: { "aria-labelledby": "Filtermenu" },
                        },
                        [
                          _vm._m(2),
                          _vm._v(" "),
                          _c("div", { staticClass: "tablelist-wrap" }, [
                            _c(
                              "div",
                              { staticClass: "tablelist-content" },
                              _vm._l(_vm.marketsData, function (m) {
                                return _c(
                                  "div",
                                  {
                                    key: m.token,
                                    staticClass:
                                      "tablelist-row flex-row flex-middle flex-stretch clickable",
                                    class: {
                                      active: _vm.activeMarket(m.token),
                                    },
                                    on: {
                                      click: function ($event) {
                                        return _vm.toggleMarket(m.token)
                                      },
                                    },
                                  },
                                  [
                                    _c("div", { staticClass: "flex-1" }, [
                                      _c("i", {
                                        staticClass: "bi bi-star iconLeft",
                                      }),
                                      _vm._v(" " + _vm._s(m.token)),
                                    ]),
                                    _vm._v(" "),
                                    _c("div", { staticClass: "ps-1" }, [
                                      _vm._v(_vm._s(m.count)),
                                    ]),
                                  ]
                                )
                              }),
                              0
                            ),
                          ]),
                        ]
                      ),
                    ]),
                    _vm._v(" \n\n            "),
                    _c("div", { staticClass: "dropdown" }, [
                      _c("button", {
                        staticClass: "btn btn-sm btn-warning bi bi-gear",
                        attrs: {
                          id: "Livemenu",
                          "data-bs-toggle": "dropdown",
                          "aria-expanded": "false",
                        },
                      }),
                      _vm._v(" "),
                      _c(
                        "div",
                        {
                          staticClass: "dropdown-menu px-1",
                          attrs: { "aria-labelledby": "Livemenu" },
                        },
                        [
                          _c(
                            "div",
                            { staticClass: "form-label mb-1 push-small" },
                            [_vm._v("Live Price Options")]
                          ),
                          _vm._v(" "),
                          _c("Toggle", {
                            attrs: { text: "Show top coins price in header" },
                            on: { change: _vm.saveOptions },
                            model: {
                              value: _vm.options.prices.header,
                              callback: function ($$v) {
                                _vm.$set(_vm.options.prices, "header", $$v)
                              },
                              expression: "options.prices.header",
                            },
                          }),
                          _vm._v(" "),
                          _c("Toggle", {
                            attrs: { text: "Show price chart for in list" },
                            on: { change: _vm.saveOptions },
                            model: {
                              value: _vm.options.prices.chart,
                              callback: function ($$v) {
                                _vm.$set(_vm.options.prices, "chart", $$v)
                              },
                              expression: "options.prices.chart",
                            },
                          }),
                        ],
                        1
                      ),
                    ]),
                  ]
                ),
              ],
              1
            ),
          ]),
          _vm._v(" "),
          !_vm.listCount
            ? _c("section", { staticClass: "mb-1" }, [
                _c(
                  "div",
                  { staticClass: "card p-1 flex-row flex-middle flex-stretch" },
                  [
                    _c("div", {
                      staticClass: "bi bi-info-circle iconLarge me-1",
                    }),
                    _vm._v(" "),
                    _c("div", { staticClass: "text-clip flex-1" }, [
                      _vm.searchStr
                        ? _c("div", [
                            _c("span", { staticClass: "text-dark" }, [
                              _vm._v("No match for "),
                              _c("span", { staticClass: "text-secondary" }, [
                                _vm._v(_vm._s(_vm.searchStr)),
                              ]),
                            ]),
                            _vm._v(" "),
                            _c("br"),
                            _vm._v(" "),
                            _c("span", { staticClass: "text-info" }, [
                              _vm._v(
                                "Can't find anything matching your search input."
                              ),
                            ]),
                          ])
                        : _c("div", [
                            _c("span", { staticClass: "text-dark" }, [
                              _vm._v("No price data available"),
                            ]),
                            _vm._v(" "),
                            _c("br"),
                            _vm._v(" "),
                            _c("span", { staticClass: "text-info" }, [
                              _vm._v(
                                "Price data from remote API has not loaded yet."
                              ),
                            ]),
                          ]),
                    ]),
                  ]
                ),
              ])
            : _vm._e(),
          _vm._v(" "),
          _c(
            "section",
            { staticClass: "pagelist-wrap" },
            [
              _vm.tickerList.length
                ? _c(
                    "div",
                    {
                      staticClass:
                        "pagelist-item flex-row flex-middle flex-stretch shadow",
                      staticStyle: { background: "rgb(255 255 255 / 6%)" },
                    },
                    [
                      _c("div", { staticClass: "iconWidth me-1 if-small" }),
                      _vm._v(" "),
                      _c("div", { staticClass: "me-1 text-clip flex-1" }, [
                        _c(
                          "span",
                          {
                            staticClass: "clickable",
                            on: {
                              click: function ($event) {
                                return _vm.$sorter.sortOrder(
                                  "ticker",
                                  "token",
                                  "asc"
                                )
                              },
                            },
                          },
                          [_vm._v("Token")]
                        ),
                      ]),
                      _vm._v(" "),
                      _c("div", { staticClass: "me-1 text-clip flex-1" }, [
                        _c(
                          "span",
                          {
                            staticClass: "clickable",
                            on: {
                              click: function ($event) {
                                return _vm.$sorter.sortOrder(
                                  "ticker",
                                  "close",
                                  "desc"
                                )
                              },
                            },
                          },
                          [_vm._v("Price")]
                        ),
                      ]),
                      _vm._v(" "),
                      _vm.options.prices.chart
                        ? _c("div", {
                            staticClass: "well me-1 flex-1 if-medium disabled",
                          })
                        : _vm._e(),
                      _vm._v(" "),
                      _c("div", { staticClass: "me-1 text-clip flex-1" }, [
                        _c(
                          "span",
                          {
                            staticClass: "clickable",
                            on: {
                              click: function ($event) {
                                return _vm.$sorter.sortOrder(
                                  "ticker",
                                  "percent",
                                  "desc"
                                )
                              },
                            },
                          },
                          [_vm._v("Percent")]
                        ),
                      ]),
                      _vm._v(" "),
                      _c(
                        "div",
                        { staticClass: "me-1 text-clip flex-1 if-medium" },
                        [
                          _c(
                            "span",
                            {
                              staticClass: "clickable",
                              on: {
                                click: function ($event) {
                                  return _vm.$sorter.sortOrder(
                                    "ticker",
                                    "marketVolume",
                                    "desc"
                                  )
                                },
                              },
                            },
                            [_vm._v("Volume")]
                          ),
                        ]
                      ),
                      _vm._v(" "),
                      _c(
                        "div",
                        { staticClass: "text-end text-clip flex-1 if-large" },
                        [
                          _c(
                            "span",
                            {
                              staticClass: "clickable",
                              on: {
                                click: function ($event) {
                                  return _vm.$sorter.sortOrder(
                                    "ticker",
                                    "trades",
                                    "desc"
                                  )
                                },
                              },
                            },
                            [_vm._v("Book")]
                          ),
                        ]
                      ),
                    ]
                  )
                : _vm._e(),
              _vm._v(" "),
              _vm._l(_vm.tickerList, function (p) {
                return _c(
                  "div",
                  {
                    key: p.symbol,
                    staticClass:
                      "pagelist-item flex-row flex-middle flex-stretch clickable shadow",
                    class: p.style,
                    on: {
                      click: function ($event) {
                        $event.stopPropagation()
                        return _vm.setRoute(p.route)
                      },
                    },
                  },
                  [
                    _c(
                      "div",
                      {
                        staticClass: "me-1 if-small",
                        class: { "alarm-bubble": p.alarms },
                      },
                      [
                        _c("TokenIcon", {
                          attrs: { image: p.image, alt: p.token },
                        }),
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "me-1 text-clip flex-1" },
                      [
                        _c("big", { staticClass: "text-warning" }, [
                          _vm._v(_vm._s(p.token)),
                        ]),
                        _vm._v(" "),
                        _c("br"),
                        _vm._v(" "),
                        _c("span", { staticClass: "text-secondary" }, [
                          _vm._v(_vm._s(p.name)),
                        ]),
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      {
                        staticClass: "me-1 text-clip flex-1",
                        staticStyle: { "margin-left": "-45px" },
                      },
                      [
                        _c(
                          "big",
                          { staticClass: "text-nowrap text-dark fw-bold" },
                          [
                            _vm._v(
                              _vm._s(_vm._f("toFixed")(p.close, p.market)) + " "
                            ),
                            _c("span", { staticClass: "text-secondary" }, [
                              _vm._v(_vm._s(p.market)),
                            ]),
                          ]
                        ),
                        _vm._v(" "),
                        _c("br"),
                        _vm._v(" "),
                        _c(
                          "span",
                          { staticClass: "text-nowrap color fw-bold" },
                          [
                            _vm._v(
                              _vm._s(p.sign) +
                                _vm._s(_vm._f("toFixed")(p.change, p.market)) +
                                " "
                            ),
                            _c("span", { staticClass: "text-secondary" }, [
                              _vm._v("24H"),
                            ]),
                          ]
                        ),
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _vm.options.prices.chart
                      ? _c(
                          "div",
                          { staticClass: "well me-1 flex-1 if-medium" },
                          [
                            _c("LineChart", {
                              attrs: {
                                width: 200,
                                height: 28,
                                values: p.history,
                              },
                            }),
                          ],
                          1
                        )
                      : _vm._e(),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "me-1 text-clip flex-1" },
                      [
                        _c(
                          "big",
                          { staticClass: "text-nowrap color fw-bold" },
                          [
                            _vm._v(
                              _vm._s(p.sign) +
                                _vm._s(_vm._f("toMoney")(p.percent, 3)) +
                                "%"
                            ),
                          ]
                        ),
                        _vm._v(" "),
                        _c("br"),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            directives: [
                              { name: "tooltip", rawName: "v-tooltip" },
                            ],
                            staticClass: "bi bi-bar-chart",
                            attrs: { title: "High/Low Volatility Score" },
                          },
                          [
                            _vm._v(
                              " " + _vm._s(_vm._f("toFixed")(p.volatility, 3))
                            ),
                          ]
                        ),
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "me-1 text-clip flex-1 if-medium" },
                      [
                        _c(
                          "big",
                          { staticClass: "text-nowrap text-dark fw-bold" },
                          [
                            _vm._v(
                              _vm._s(_vm._f("toMoney")(p.marketVolume)) + " "
                            ),
                            _c(
                              "span",
                              { staticClass: "text-nowrap text-secondary" },
                              [_vm._v(_vm._s(p.market))]
                            ),
                          ]
                        ),
                        _vm._v(" "),
                        _c("br"),
                        _vm._v(" "),
                        _c(
                          "span",
                          { staticClass: "text-nowrap text-secondary" },
                          [
                            _vm._v(
                              _vm._s(_vm._f("toMoney")(p.tokenVolume)) + " "
                            ),
                            _c(
                              "span",
                              { staticClass: "text-nowrap text-secondary" },
                              [_vm._v(_vm._s(p.token))]
                            ),
                          ]
                        ),
                      ],
                      1
                    ),
                    _vm._v(" "),
                    _c(
                      "div",
                      { staticClass: "text-end text-clip flex-1 if-large" },
                      [
                        _c(
                          "big",
                          { staticClass: "text-nowrap text-dark fw-bold" },
                          [_vm._v(_vm._s(_vm._f("toMoney")(p.trades)))]
                        ),
                        _vm._v(" "),
                        _c("br"),
                        _vm._v(" "),
                        _c(
                          "button",
                          {
                            directives: [
                              { name: "tooltip", rawName: "v-tooltip" },
                            ],
                            staticClass: "text-primary-hover",
                            attrs: { title: "Trade " + p.token },
                          },
                          [_vm._v("Trades")]
                        ),
                      ],
                      1
                    ),
                  ]
                )
              }),
              _vm._v(" "),
              _vm.listCount
                ? _c(
                    "div",
                    {
                      staticClass:
                        "pagelist-item flex-row flex-middle flex-space shadow",
                      staticStyle: { background: "rgb(255 255 255 / 6%)" },
                    },
                    [
                      _c(
                        "div",
                        { staticClass: "text-secondary bi bi-list iconLeft" },
                        [_vm._v(_vm._s(_vm.listLeftText))]
                      ),
                      _vm._v(" "),
                      _vm.listLeft
                        ? _c(
                            "button",
                            {
                              staticClass: "text-dark bi bi-list-ul iconLeft",
                              on: {
                                click: function ($event) {
                                  return _vm.limitList(0)
                                },
                              },
                            },
                            [_vm._v(" Show all")]
                          )
                        : _vm._e(),
                    ]
                  )
                : _vm._e(),
            ],
            2
          ),
          _vm._v(" "),
          _c("Spinner", { ref: "spinner", staticClass: "fixed" }),
        ],
        1
      ),
    ]
  )
}
var staticRenderFns = [
  function () {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("li", { staticClass: "heading px-1" }, [
      _c("span", { staticClass: "form-label" }, [_vm._v("Limits")]),
    ])
  },
  function () {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("li", { staticClass: "heading px-1" }, [
      _c("span", { staticClass: "form-label" }, [_vm._v("Sorting Options")]),
    ])
  },
  function () {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("div", { staticClass: "px-1 mb-1" }, [
      _c("span", { staticClass: "form-label" }, [_vm._v("Filter by Market")]),
    ])
  },
]
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/TokenPage.vue?vue&type=template&id=c84dd40e&":
/*!*******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/TokenPage.vue?vue&type=template&id=c84dd40e& ***!
  \*******************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* binding */ render),
/* harmony export */   "staticRenderFns": () => (/* binding */ staticRenderFns)
/* harmony export */ });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "section",
    { class: _vm.modalData.style },
    [
      _c("div", { staticClass: "flex-row flex-middle flex-space" }, [
        _c("div", { staticClass: "text-nowrap me-1" }, [
          _c("div", { staticClass: "flex-row flex-middle" }, [
            _c(
              "div",
              { staticClass: "me-1 if-medium" },
              [
                _c("TokenIcon", {
                  attrs: {
                    image: _vm.modalData.image,
                    alt: _vm.modalData.token,
                  },
                }),
              ],
              1
            ),
            _vm._v(" "),
            _c(
              "div",
              [
                _c("div", { staticClass: "form-label" }, [
                  _vm._v(_vm._s(_vm.modalData.token) + " "),
                  _vm.coinRank
                    ? _c("span", [
                        _vm._v("#" + _vm._s(_vm._f("toMoney")(_vm.coinRank))),
                      ])
                    : _vm._e(),
                ]),
                _vm._v(" "),
                _c("big", { staticClass: "text-dark" }, [
                  _vm._v(_vm._s(_vm.modalData.name)),
                ]),
              ],
              1
            ),
          ]),
        ]),
        _vm._v(" "),
        _c(
          "div",
          { staticClass: "text-nowrap text-end me-1" },
          [
            _c("div", { staticClass: "form-label" }, [
              _vm._v(_vm._s(_vm.modalData.market) + " Price"),
            ]),
            _vm._v(" "),
            _c("big", { staticClass: "text-dark" }, [
              _vm._v(
                _vm._s(
                  _vm._f("toFixed")(_vm.modalData.close, _vm.modalData.market)
                )
              ),
            ]),
          ],
          1
        ),
        _vm._v(" "),
        _c(
          "div",
          { staticClass: "text-nowrap text-end me-1" },
          [
            _c("div", { staticClass: "form-label" }, [_vm._v("Chg 24h")]),
            _vm._v(" "),
            _c("big", { staticClass: "color" }, [
              _vm._v(
                _vm._s(_vm.modalData.sign) +
                  _vm._s(_vm._f("toFixed")(_vm.modalData.percent, 3)) +
                  "%"
              ),
            ]),
          ],
          1
        ),
        _vm._v(" "),
        _c("div", { staticClass: "text-nowrap" }, [
          _c(
            "button",
            {
              staticClass: "btn btn-sm btn-warning bi bi-bar-chart iconLeft",
              on: {
                click: function ($event) {
                  return _vm.Link()
                },
              },
            },
            [_vm._v(" Trade")]
          ),
        ]),
      ]),
      _vm._v(" "),
      _c("hr"),
      _vm._v(" "),
      _c("div", { staticClass: "flex-grid mb-1" }, [
        _c(
          "div",
          { staticClass: "flex-1 well text-nowrap" },
          [
            _c("div", { staticClass: "form-label" }, [_vm._v("High 24h")]),
            _vm._v(" "),
            _c("big", { staticClass: "text-dark" }, [
              _vm._v(
                _vm._s(
                  _vm._f("toFixed")(_vm.modalData.high, _vm.modalData.market)
                )
              ),
            ]),
          ],
          1
        ),
        _vm._v(" "),
        _c(
          "div",
          { staticClass: "flex-1 well text-nowrap" },
          [
            _c("div", { staticClass: "form-label" }, [_vm._v("Low 24h")]),
            _vm._v(" "),
            _c("big", { staticClass: "text-dark" }, [
              _vm._v(
                _vm._s(
                  _vm._f("toFixed")(_vm.modalData.low, _vm.modalData.market)
                )
              ),
            ]),
          ],
          1
        ),
        _vm._v(" "),
        _c(
          "div",
          { staticClass: "flex-1 well text-nowrap" },
          [
            _c("div", { staticClass: "form-label" }, [
              _vm._v(_vm._s(_vm.modalData.market) + " Vol 24h"),
            ]),
            _vm._v(" "),
            _c("big", { staticClass: "text-dark" }, [
              _vm._v(_vm._s(_vm._f("toMoney")(_vm.modalData.marketVolume))),
            ]),
          ],
          1
        ),
        _vm._v(" "),
        _c(
          "div",
          { staticClass: "flex-1 well text-nowrap" },
          [
            _c("div", { staticClass: "form-label" }, [
              _vm._v(_vm._s(_vm.modalData.token) + " Vol 24h"),
            ]),
            _vm._v(" "),
            _c("big", { staticClass: "text-dark" }, [
              _vm._v(_vm._s(_vm._f("toMoney")(_vm.modalData.tokenVolume))),
            ]),
          ],
          1
        ),
        _vm._v(" "),
        _c(
          "div",
          { staticClass: "flex-1 well text-nowrap" },
          [
            _c("div", { staticClass: "form-label" }, [
              _vm._v("Market Cap USD"),
            ]),
            _vm._v(" "),
            _c("big", { staticClass: "text-dark" }, [
              _vm._v(_vm._s(_vm._f("toMoney")(_vm.marketCap))),
            ]),
          ],
          1
        ),
        _vm._v(" "),
        _c(
          "div",
          { staticClass: "flex-1 well text-nowrap" },
          [
            _c("div", { staticClass: "form-label" }, [
              _vm._v("Current Supply"),
            ]),
            _vm._v(" "),
            _c("big", { staticClass: "text-dark" }, [
              _vm._v(_vm._s(_vm._f("toMoney")(_vm.totalSupply))),
            ]),
          ],
          1
        ),
        _vm._v(" "),
        _c(
          "div",
          { staticClass: "flex-1 well text-nowrap" },
          [
            _c("div", { staticClass: "form-label" }, [
              _vm._v("Volume USD 24H"),
            ]),
            _vm._v(" "),
            _c("big", { staticClass: "text-dark" }, [
              _vm._v(_vm._s(_vm._f("toMoney")(_vm.totalVolume))),
            ]),
          ],
          1
        ),
        _vm._v(" "),
        _c(
          "div",
          { staticClass: "flex-1 well text-nowrap" },
          [
            _c("div", { staticClass: "form-label" }, [_vm._v("Price USD")]),
            _vm._v(" "),
            _c("big", { staticClass: "text-dark" }, [
              _vm._v("$" + _vm._s(_vm._f("toMoney")(_vm.usdPrice, 3))),
            ]),
          ],
          1
        ),
      ]),
      _vm._v(" "),
      _c(
        "div",
        { staticClass: "text-nowrap well mb-1" },
        [
          _c("div", { staticClass: "flex-row flex-middle flex-space" }, [
            _c("div", { staticClass: "form-label text-clip me-1" }, [
              _vm._v("7D Graph"),
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "form-label text-clip me-1" }, [
              _vm._v("24h Volatility "),
              _c("span", { staticClass: "text-dark" }, [
                _vm._v(
                  _vm._s(_vm._f("toFixed")(_vm.modalData.volatility, 1)) + "%"
                ),
              ]),
            ]),
            _vm._v(" "),
            _c("div", { staticClass: "form-label text-clip" }, [
              _vm._v("P&D Danger "),
              _c("span", { staticClass: "text-dark" }, [
                _vm._v(
                  _vm._s(_vm._f("toFixed")(_vm.modalData.danger, 1)) + "%"
                ),
              ]),
            ]),
          ]),
          _vm._v(" "),
          _c("LineChart", {
            attrs: {
              width: _vm.chartWidth,
              height: _vm.chartHeight,
              values: _vm.chartData,
            },
          }),
          _vm._v(" "),
          _c("Spinner", { ref: "chartSpinner", staticClass: "abs rounded" }),
        ],
        1
      ),
      _vm._v(" "),
      _c("AlarmsList", {
        attrs: { alarmsData: _vm.alarmsData, pairData: _vm.modalData },
        on: { listCount: _vm.onAlarmsCount },
      }),
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Topbar.vue?vue&type=template&id=107e999d&":
/*!****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/Topbar.vue?vue&type=template&id=107e999d& ***!
  \****************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* binding */ render),
/* harmony export */   "staticRenderFns": () => (/* binding */ staticRenderFns)
/* harmony export */ });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "header",
    {
      staticClass: "topbar-wrap shadow",
      class: { collapsed: _vm.header.collapsed },
      staticStyle: { background: "rgb(255 255 255 / 6%)" },
    },
    [
      _c("div", { staticClass: "mx-1" }, [
        _c(
          "div",
          {
            staticClass:
              "topbar-main d-flex justify-content-between align-items-center",
          },
          [
            _vm.options.prices.header
              ? _c(
                  "div",
                  { staticClass: "topbar-prices flex-row flex-middle flex-1" },
                  _vm._l(_vm.marketPrices, function (a, i) {
                    return _c(
                      "div",
                      {
                        key: a.token,
                        staticClass: "text-clip clickable fx fx-slide-down",
                        class: "fx-delay-" + (i + 1),
                        on: {
                          click: function ($event) {
                            return _vm.setRoute(a.route)
                          },
                        },
                      },
                      [
                        _c("span", { staticClass: "text-dark" }, [
                          _vm._v(_vm._s(a.token)),
                        ]),
                        _vm._v(" "),
                        _c(
                          "span",
                          {
                            class: {
                              "text-gain": a.percent > 0,
                              "text-loss": a.percent < 0,
                            },
                          },
                          [
                            _vm._v(
                              _vm._s(a.sign) +
                                _vm._s(_vm._f("toFixed")(a.percent, 3)) +
                                "%"
                            ),
                          ]
                        ),
                        _vm._v(" "),
                        _c("br"),
                        _vm._v(" "),
                        _c("span", { staticClass: "text-secondary" }, [
                          _vm._v(_vm._s(_vm._f("toFixed")(a.close, a.market))),
                        ]),
                        _vm._v(" "),
                        _c("span", { staticClass: "text-faded" }, [
                          _vm._v(_vm._s(a.market)),
                        ]),
                      ]
                    )
                  }),
                  0
                )
              : _vm._e(),
            _vm._v(" "),
            _c(
              "div",
              {
                staticClass:
                  "topbar-menu d-flex justify-content-end align-items-center w-100",
              },
              [
                _c("button", {
                  staticClass: "topbar-btn bi",
                  class: {
                    "bi-eye text-danger pulse": _vm.watching,
                    "bi-eye-slash text-grey": !_vm.watching,
                  },
                  on: {
                    click: function ($event) {
                      _vm.$bus.emit("toggleWatchform", "toggle"),
                        (_vm.watching = !_vm.watching)
                    },
                  },
                }),
                _vm._v(" "),
                _c("div", { staticClass: "dropdown" }, [
                  _c("i", {
                    staticClass: "topbar-btn bi",
                    class: {
                      " bi-wifi text-gain": _vm.tickerStatus,
                      " bi-wifi-off text-danger": !_vm.tickerStatus,
                    },
                    attrs: {
                      id: "Pricemenu",
                      "data-bs-toggle": "dropdown",
                      "aria-expanded": "false",
                    },
                  }),
                  _vm._v(" "),
                  _c(
                    "div",
                    {
                      staticClass: "dropdown-menu text-center",
                      attrs: { "aria-labelledby": "Pricemenu" },
                    },
                    [
                      _c(
                        "div",
                        { staticClass: "dropdown-item form-label px-1" },
                        [_vm._v("Price Ticker Connection")]
                      ),
                      _vm._v(" "),
                      _c("hr"),
                      _vm._v(" "),
                      _c("div", { staticClass: "dropdown-item px-1 mb-1" }, [
                        _c("span", { staticClass: "text-secondary" }, [
                          _vm._v("Status:"),
                        ]),
                        _vm._v("  \n              "),
                        _vm.tickerStatus == 0
                          ? _c("span", { staticClass: "text-loss" }, [
                              _vm._v("Disconnected "),
                              _c("i", { staticClass: "bi bi-wifi-off" }),
                            ])
                          : _vm._e(),
                        _vm._v(" "),
                        _vm.tickerStatus == 1
                          ? _c("span", { staticClass: "text-primary" }, [
                              _vm._v("Connecting... "),
                              _c("i", { staticClass: "bi bi-clock" }),
                            ])
                          : _vm._e(),
                        _vm._v(" "),
                        _vm.tickerStatus == 2
                          ? _c("span", { staticClass: "text-gain" }, [
                              _vm._v("Connected "),
                              _c("i", { staticClass: "bi bi-check" }),
                            ])
                          : _vm._e(),
                        _vm._v(" "),
                        _c("br"),
                        _vm._v(" "),
                        _c("span", { staticClass: "text-secondary" }, [
                          _vm._v("Time:"),
                        ]),
                        _vm._v("  \n              "),
                        _c("span", { staticClass: "text-dark" }, [
                          _vm._v(_vm._s(_vm.tickerTime)),
                        ]),
                      ]),
                      _vm._v(" "),
                      _c("div", { staticClass: "dropdown-item px-1" }, [
                        _vm.tickerStatus
                          ? _c(
                              "button",
                              {
                                staticClass:
                                  "form-btn bi bi-x-lg iconLeft bg-danger-hover",
                                on: { click: _vm.toggleConnection },
                              },
                              [_vm._v("Disconnect")]
                            )
                          : _c(
                              "button",
                              {
                                staticClass:
                                  "form-btn bi bi-plug iconLeft bg-success-hover",
                                on: { click: _vm.toggleConnection },
                              },
                              [_vm._v("Connect")]
                            ),
                      ]),
                    ]
                  ),
                ]),
                _vm._v(" "),
                _c(
                  "div",
                  {
                    staticClass: "dropdown",
                    class: { "alert-bubble": _vm.hasBubble },
                  },
                  [
                    _c("i", {
                      staticClass: "topbar-btn bi bi-list",
                      attrs: {
                        id: "Mainmenu",
                        "data-bs-toggle": "dropdown",
                        "aria-expanded": "false",
                      },
                      on: { click: _vm.checkWho },
                    }),
                    _vm._v(" "),
                    _c(
                      "ul",
                      {
                        staticClass: "dropdown-menu",
                        attrs: { "aria-labelledby": "Mainmenu" },
                      },
                      [
                        _vm._m(0),
                        _vm._v(" "),
                        _c(
                          "li",
                          {
                            staticClass: "dropdown-item clickable text-dark",
                            on: {
                              click: function ($event) {
                                return _vm.setRoute("/")
                              },
                            },
                          },
                          [
                            _c("i", { staticClass: "bi bi-graph-up" }),
                            _vm._v(" Live Market\n            "),
                          ]
                        ),
                        _vm._v(" "),
                        _c(
                          "li",
                          {
                            staticClass: "dropdown-item clickable text-dark",
                            on: {
                              click: function ($event) {
                                return _vm.setRoute("/alarms")
                              },
                            },
                          },
                          [
                            _c("i", { staticClass: "bi bi-alarm" }),
                            _vm._v(" Saved Alarms "),
                            _vm.alarmsData.length
                              ? _c("span", { staticClass: "text-grey" }, [
                                  _vm._v(
                                    "(" + _vm._s(_vm.alarmsData.length) + ")"
                                  ),
                                ])
                              : _vm._e(),
                          ]
                        ),
                        _vm._v(" "),
                        _c(
                          "li",
                          {
                            staticClass: "dropdown-item clickable text-dark",
                            on: {
                              click: function ($event) {
                                return _vm.setRoute("/history")
                              },
                            },
                          },
                          [
                            _c("i", { staticClass: "bi bi-clock" }),
                            _vm._v(" Recent History "),
                            _vm.historyData.length
                              ? _c("span", { staticClass: "text-grey" }, [
                                  _vm._v(
                                    "(" + _vm._s(_vm.historyData.length) + ")"
                                  ),
                                ])
                              : _vm._e(),
                          ]
                        ),
                        _vm._v(" "),
                        _c(
                          "li",
                          {
                            staticClass: "dropdown-item clickable text-dark",
                            class: { hidden: _vm.IsUser },
                            on: {
                              click: function ($event) {
                                return _vm.setRoute("/options")
                              },
                            },
                          },
                          [
                            _c("i", { staticClass: "bi bi-gear" }),
                            _vm._v(" Options\n            "),
                          ]
                        ),
                        _vm._v(" "),
                        _c(
                          "li",
                          {
                            staticClass: "dropdown-item clickable text-dark",
                            class: { hidden: _vm.IsAdmin },
                            on: {
                              click: function ($event) {
                                return _vm.setRoute("/optionsadmin")
                              },
                            },
                          },
                          [
                            _c("i", { staticClass: "bi bi-gear" }),
                            _vm._v(" Options\n            "),
                          ]
                        ),
                      ]
                    ),
                  ]
                ),
              ]
            ),
          ]
        ),
      ]),
    ]
  )
}
var staticRenderFns = [
  function () {
    var _vm = this
    var _h = _vm.$createElement
    var _c = _vm._self._c || _h
    return _c("li", { staticClass: "dropdown-item" }, [
      _c("span", { staticClass: "form-label" }, [_vm._v("Main Navigation")]),
    ])
  },
]
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/WatchForm.vue?vue&type=template&id=82ed1af8&":
/*!*******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib/index.js??vue-loader-options!./src/market/components/WatchForm.vue?vue&type=template&id=82ed1af8& ***!
  \*******************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "render": () => (/* binding */ render),
/* harmony export */   "staticRenderFns": () => (/* binding */ staticRenderFns)
/* harmony export */ });
var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "div",
    {
      staticClass: "watchform-overlay sticky-top",
      class: { visible: _vm.visible, overflow: _vm.overflow, under: _vm.under },
      on: {
        click: function ($event) {
          $event.stopPropagation()
          return _vm.close.apply(null, arguments)
        },
      },
    },
    [
      _c(
        "section",
        {
          staticClass: "watchform-wrap",
          class: { collapsed: _vm.header.collapsed },
          on: {
            click: function ($event) {
              $event.stopPropagation()
            },
          },
        },
        [
          _c(
            "button",
            {
              staticClass: "watchform-close text-primary-hover",
              on: {
                click: function ($event) {
                  $event.stopPropagation()
                  return _vm.close.apply(null, arguments)
                },
              },
            },
            [
              _c("span", { staticClass: "bi bi-x-lg iconLeft" }, [
                _vm._v("Close"),
              ]),
            ]
          ),
          _vm._v(" "),
          _c("div", { ref: "watchform", staticClass: "watchform-container" }, [
            _c("div", { staticClass: "container mx-2" }, [
              _c("div", { staticClass: "flex-row flex-middle flex-stretch" }, [
                _c(
                  "div",
                  { staticClass: "flex-1 text-info me-1" },
                  [
                    _c(
                      "span",
                      { staticClass: "text-bright bi bi-gear iconLeft" },
                      [_vm._v("Presets:")]
                    ),
                    _vm._v(" "),
                    _vm._l(_vm.presetsList, function (p) {
                      return _c(
                        "button",
                        {
                          key: p.name,
                          staticClass: "ms-1 btn btn-light btn-sm",
                          class: { "text-gain": p.active },
                          on: {
                            click: function ($event) {
                              $event.preventDefault()
                              return _vm.applyPreset(p.name)
                            },
                          },
                        },
                        [_vm._v(_vm._s(p.name))]
                      )
                    }),
                  ],
                  2
                ),
                _vm._v(" "),
                _c("div", { staticClass: "text-clip" }, [
                  _c(
                    "span",
                    { staticClass: "bi bi-eye iconLeft text-primary" },
                    [_vm._v(_vm._s(_vm.countInfo))]
                  ),
                ]),
              ]),
              _vm._v(" "),
              _c("hr"),
              _vm._v(" "),
              _c("div", { staticClass: "flex-grid flex-grid-md flex-middle" }, [
                _c(
                  "div",
                  { staticClass: "form-input text-nowrap" },
                  [
                    _c("SelectMenu", {
                      staticClass: "flex-1",
                      attrs: { options: _vm.marketOptions },
                      on: { change: _vm.formChange },
                      model: {
                        value: _vm.watchOptions.market,
                        callback: function ($$v) {
                          _vm.$set(_vm.watchOptions, "market", $$v)
                        },
                        expression: "watchOptions.market",
                      },
                    }),
                  ],
                  1
                ),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "form-input text-nowrap" },
                  [
                    _c(
                      "SelectMenu",
                      {
                        staticClass: "me-1",
                        on: { change: _vm.formChange },
                        model: {
                          value: _vm.watchOptions.priceType,
                          callback: function ($$v) {
                            _vm.$set(_vm.watchOptions, "priceType", $$v)
                          },
                          expression: "watchOptions.priceType",
                        },
                      },
                      [
                        _c("option", { attrs: { value: "change" } }, [
                          _vm._v("Price change"),
                        ]),
                        _vm._v(" "),
                        _c("option", { attrs: { value: "gain" } }, [
                          _vm._v("Price gain"),
                        ]),
                        _vm._v(" "),
                        _c("option", { attrs: { value: "loss" } }, [
                          _vm._v("Price loss"),
                        ]),
                      ]
                    ),
                    _vm._v(" "),
                    _c("input", {
                      directives: [
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.watchOptions.priceChange,
                          expression: "watchOptions.priceChange",
                        },
                      ],
                      staticClass: "flex-1 me-1",
                      attrs: {
                        type: "range",
                        min: "0.0",
                        max: "100.0",
                        step: "0.5",
                      },
                      domProps: { value: _vm.watchOptions.priceChange },
                      on: {
                        change: _vm.formChange,
                        __r: function ($event) {
                          return _vm.$set(
                            _vm.watchOptions,
                            "priceChange",
                            $event.target.value
                          )
                        },
                      },
                    }),
                    _vm._v(" "),
                    _c("div", { staticClass: "text-secondary" }, [
                      _vm._v(
                        _vm._s(
                          _vm._f("toFixed")(_vm.watchOptions.priceChange, 1)
                        ) + "%"
                      ),
                    ]),
                  ],
                  1
                ),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "form-input text-nowrap" },
                  [
                    _c(
                      "SelectMenu",
                      {
                        staticClass: "me-1",
                        on: { change: _vm.formChange },
                        model: {
                          value: _vm.watchOptions.volumeType,
                          callback: function ($$v) {
                            _vm.$set(_vm.watchOptions, "volumeType", $$v)
                          },
                          expression: "watchOptions.volumeType",
                        },
                      },
                      [
                        _c("option", { attrs: { value: "change" } }, [
                          _vm._v("Volume change"),
                        ]),
                        _vm._v(" "),
                        _c("option", { attrs: { value: "gain" } }, [
                          _vm._v("Volume gain"),
                        ]),
                        _vm._v(" "),
                        _c("option", { attrs: { value: "loss" } }, [
                          _vm._v("Volume loss"),
                        ]),
                      ]
                    ),
                    _vm._v(" "),
                    _c("input", {
                      directives: [
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.watchOptions.volumeChange,
                          expression: "watchOptions.volumeChange",
                        },
                      ],
                      staticClass: "flex-1 me-1",
                      attrs: {
                        type: "range",
                        min: "0.0",
                        max: "100.0",
                        step: "0.5",
                      },
                      domProps: { value: _vm.watchOptions.volumeChange },
                      on: {
                        change: _vm.formChange,
                        __r: function ($event) {
                          return _vm.$set(
                            _vm.watchOptions,
                            "volumeChange",
                            $event.target.value
                          )
                        },
                      },
                    }),
                    _vm._v(" "),
                    _c("div", { staticClass: "text-secondary" }, [
                      _vm._v(
                        _vm._s(
                          _vm._f("toFixed")(_vm.watchOptions.volumeChange, 1)
                        ) + "%"
                      ),
                    ]),
                  ],
                  1
                ),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "form-input text-nowrap" },
                  [
                    _c(
                      "SelectMenu",
                      {
                        staticClass: "me-1",
                        on: { change: _vm.formChange },
                        model: {
                          value: _vm.watchOptions.priceCheck,
                          callback: function ($$v) {
                            _vm.$set(_vm.watchOptions, "priceCheck", $$v)
                          },
                          expression: "watchOptions.priceCheck",
                        },
                      },
                      [
                        _c("option", { attrs: { value: "above" } }, [
                          _vm._v("Price above"),
                        ]),
                        _vm._v(" "),
                        _c("option", { attrs: { value: "below" } }, [
                          _vm._v("Price below"),
                        ]),
                      ]
                    ),
                    _vm._v(" "),
                    _c("input", {
                      directives: [
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.watchOptions.price,
                          expression: "watchOptions.price",
                        },
                      ],
                      staticClass: "flex-1 me-1 text-light",
                      attrs: { type: "text", placeholder: "0.00000000" },
                      domProps: { value: _vm.watchOptions.price },
                      on: {
                        keyup: _vm.numInput,
                        change: _vm.formChange,
                        input: function ($event) {
                          if ($event.target.composing) {
                            return
                          }
                          _vm.$set(
                            _vm.watchOptions,
                            "price",
                            $event.target.value
                          )
                        },
                      },
                    }),
                    _vm._v(" "),
                    _c("div", { staticClass: "text-secondary" }, [
                      _vm._v(_vm._s(_vm.watchOptions.market)),
                    ]),
                  ],
                  1
                ),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "form-input text-nowrap" },
                  [
                    _c(
                      "SelectMenu",
                      {
                        staticClass: "me-1",
                        on: { change: _vm.formChange },
                        model: {
                          value: _vm.watchOptions.volumeCheck,
                          callback: function ($$v) {
                            _vm.$set(_vm.watchOptions, "volumeCheck", $$v)
                          },
                          expression: "watchOptions.volumeCheck",
                        },
                      },
                      [
                        _c("option", { attrs: { value: "above" } }, [
                          _vm._v("Volume above"),
                        ]),
                        _vm._v(" "),
                        _c("option", { attrs: { value: "below" } }, [
                          _vm._v("Volume below"),
                        ]),
                      ]
                    ),
                    _vm._v(" "),
                    _c("input", {
                      directives: [
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.watchOptions.volume,
                          expression: "watchOptions.volume",
                        },
                      ],
                      staticClass: "text-light",
                      attrs: { type: "text", placeholder: "0000" },
                      domProps: { value: _vm.watchOptions.volume },
                      on: {
                        keyup: _vm.numInput,
                        change: _vm.formChange,
                        input: function ($event) {
                          if ($event.target.composing) {
                            return
                          }
                          _vm.$set(
                            _vm.watchOptions,
                            "volume",
                            $event.target.value
                          )
                        },
                      },
                    }),
                    _vm._v(" "),
                    _c("div", { staticClass: "text-secondary me-1" }, [
                      _vm._v(_vm._s(_vm.watchOptions.market)),
                    ]),
                  ],
                  1
                ),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "form-input text-nowrap" },
                  [
                    _c(
                      "SelectMenu",
                      {
                        staticClass: "me-1",
                        on: { change: _vm.formChange },
                        model: {
                          value: _vm.watchOptions.timeCheck,
                          callback: function ($$v) {
                            _vm.$set(_vm.watchOptions, "timeCheck", $$v)
                          },
                          expression: "watchOptions.timeCheck",
                        },
                      },
                      [
                        _c("option", { attrs: { value: "less" } }, [
                          _vm._v("Within last"),
                        ]),
                        _vm._v(" "),
                        _c("option", { attrs: { value: "more" } }, [
                          _vm._v("Wait past"),
                        ]),
                      ]
                    ),
                    _vm._v(" "),
                    _c("input", {
                      directives: [
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.watchOptions.timeLimit,
                          expression: "watchOptions.timeLimit",
                        },
                      ],
                      staticClass: "flex-1 me-1",
                      attrs: { type: "range", min: "0", max: "60", step: "1" },
                      domProps: { value: _vm.watchOptions.timeLimit },
                      on: {
                        change: _vm.formChange,
                        __r: function ($event) {
                          return _vm.$set(
                            _vm.watchOptions,
                            "timeLimit",
                            $event.target.value
                          )
                        },
                      },
                    }),
                    _vm._v(" "),
                    _c("div", { staticClass: "text-secondary" }, [
                      _vm._v(
                        _vm._s(
                          _vm._f("toNoun")(
                            _vm.watchOptions.timeLimit,
                            "min",
                            "mins"
                          )
                        )
                      ),
                    ]),
                  ],
                  1
                ),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "form-input text-nowrap" },
                  [
                    _c(
                      "SelectMenu",
                      {
                        staticClass: "me-1",
                        on: { change: _vm.formChange },
                        model: {
                          value: _vm.watchOptions.changeCheck,
                          callback: function ($$v) {
                            _vm.$set(_vm.watchOptions, "changeCheck", $$v)
                          },
                          expression: "watchOptions.changeCheck",
                        },
                      },
                      [
                        _c("option", { attrs: { value: "above" } }, [
                          _vm._v("24h % above"),
                        ]),
                        _vm._v(" "),
                        _c("option", { attrs: { value: "below" } }, [
                          _vm._v("24h % below"),
                        ]),
                      ]
                    ),
                    _vm._v(" "),
                    _c("input", {
                      directives: [
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.watchOptions.change,
                          expression: "watchOptions.change",
                        },
                      ],
                      staticClass: "flex-1 me-1",
                      attrs: {
                        type: "range",
                        min: "0.0",
                        max: "100.0",
                        step: "0.5",
                      },
                      domProps: { value: _vm.watchOptions.change },
                      on: {
                        change: _vm.formChange,
                        __r: function ($event) {
                          return _vm.$set(
                            _vm.watchOptions,
                            "change",
                            $event.target.value
                          )
                        },
                      },
                    }),
                    _vm._v(" "),
                    _c("span", { staticClass: "text-secondary" }, [
                      _vm._v(
                        _vm._s(_vm._f("toFixed")(_vm.watchOptions.change, 1)) +
                          "%"
                      ),
                    ]),
                  ],
                  1
                ),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "form-input text-nowrap" },
                  [
                    _c(
                      "SelectMenu",
                      {
                        staticClass: "me-1",
                        on: { change: _vm.formChange },
                        model: {
                          value: _vm.watchOptions.volatilityCheck,
                          callback: function ($$v) {
                            _vm.$set(_vm.watchOptions, "volatilityCheck", $$v)
                          },
                          expression: "watchOptions.volatilityCheck",
                        },
                      },
                      [
                        _c("option", { attrs: { value: "above" } }, [
                          _vm._v("Volatility above"),
                        ]),
                        _vm._v(" "),
                        _c("option", { attrs: { value: "below" } }, [
                          _vm._v("Volatility below"),
                        ]),
                      ]
                    ),
                    _vm._v(" "),
                    _c("input", {
                      directives: [
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.watchOptions.volatility,
                          expression: "watchOptions.volatility",
                        },
                      ],
                      staticClass: "flex-1 me-1",
                      attrs: {
                        type: "range",
                        min: "0.0",
                        max: "100.0",
                        step: "0.5",
                      },
                      domProps: { value: _vm.watchOptions.volatility },
                      on: {
                        change: _vm.formChange,
                        __r: function ($event) {
                          return _vm.$set(
                            _vm.watchOptions,
                            "volatility",
                            $event.target.value
                          )
                        },
                      },
                    }),
                    _vm._v(" "),
                    _c("span", { staticClass: "text-secondary" }, [
                      _vm._v(
                        _vm._s(
                          _vm._f("toFixed")(_vm.watchOptions.volatility, 1)
                        ) + "%"
                      ),
                    ]),
                  ],
                  1
                ),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "form-input text-nowrap" },
                  [
                    _c(
                      "SelectMenu",
                      {
                        staticClass: "me-1",
                        on: { change: _vm.formChange },
                        model: {
                          value: _vm.watchOptions.dangerCheck,
                          callback: function ($$v) {
                            _vm.$set(_vm.watchOptions, "dangerCheck", $$v)
                          },
                          expression: "watchOptions.dangerCheck",
                        },
                      },
                      [
                        _c("option", { attrs: { value: "above" } }, [
                          _vm._v("Danger above"),
                        ]),
                        _vm._v(" "),
                        _c("option", { attrs: { value: "below" } }, [
                          _vm._v("Danger below"),
                        ]),
                      ]
                    ),
                    _vm._v(" "),
                    _c("input", {
                      directives: [
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.watchOptions.danger,
                          expression: "watchOptions.danger",
                        },
                      ],
                      staticClass: "flex-1 me-1",
                      attrs: {
                        type: "range",
                        min: "0.0",
                        max: "100.0",
                        step: "0.5",
                      },
                      domProps: { value: _vm.watchOptions.danger },
                      on: {
                        change: _vm.formChange,
                        __r: function ($event) {
                          return _vm.$set(
                            _vm.watchOptions,
                            "danger",
                            $event.target.value
                          )
                        },
                      },
                    }),
                    _vm._v(" "),
                    _c("span", { staticClass: "text-secondary" }, [
                      _vm._v(
                        _vm._s(_vm._f("toFixed")(_vm.watchOptions.danger, 1)) +
                          "%"
                      ),
                    ]),
                  ],
                  1
                ),
                _vm._v(" "),
                _c(
                  "div",
                  { staticClass: "form-input text-nowrap" },
                  [
                    _c(
                      "SelectMenu",
                      {
                        staticClass: "me-1",
                        on: { change: _vm.formChange },
                        model: {
                          value: _vm.watchOptions.filterType,
                          callback: function ($$v) {
                            _vm.$set(_vm.watchOptions, "filterType", $$v)
                          },
                          expression: "watchOptions.filterType",
                        },
                      },
                      [
                        _c("option", { attrs: { value: "allow" } }, [
                          _vm._v("Only tokens"),
                        ]),
                        _vm._v(" "),
                        _c("option", { attrs: { value: "deny" } }, [
                          _vm._v("Skip tokens"),
                        ]),
                      ]
                    ),
                    _vm._v(" "),
                    _c("input", {
                      directives: [
                        {
                          name: "model",
                          rawName: "v-model",
                          value: _vm.watchOptions.filterText,
                          expression: "watchOptions.filterText",
                        },
                      ],
                      staticClass: "flex-1 me-1 text-light",
                      attrs: { type: "text", placeholder: "TOKEN1 TOKEN2 ..." },
                      domProps: { value: _vm.watchOptions.filterText },
                      on: {
                        change: _vm.formChange,
                        input: function ($event) {
                          if ($event.target.composing) {
                            return
                          }
                          _vm.$set(
                            _vm.watchOptions,
                            "filterText",
                            $event.target.value
                          )
                        },
                      },
                    }),
                  ],
                  1
                ),
                _vm._v(" "),
                _c("div", [
                  _c(
                    "button",
                    {
                      staticClass: "btn iconLeft",
                      class: {
                        "btn-danger bi bi-stop-circle": _vm.active,
                        "btn-success bi bi-caret-right-fill": !_vm.active,
                      },
                      attrs: { type: "button", disabled: !_vm.tickerStatus },
                      on: {
                        click: function ($event) {
                          $event.preventDefault()
                          return _vm.toggleWatch.apply(null, arguments)
                        },
                      },
                    },
                    [
                      _vm._v(
                        "\n                " +
                          _vm._s(
                            _vm.active
                              ? "Watching " + _vm.elapsed + " ..."
                              : "Start watching ..."
                          ) +
                          "\n            "
                      ),
                    ]
                  ),
                ]),
              ]),
            ]),
          ]),
        ]
      ),
    ]
  )
}
var staticRenderFns = []
render._withStripped = true



/***/ }),

/***/ "./node_modules/vue-loader/lib/runtime/componentNormalizer.js":
/*!********************************************************************!*\
  !*** ./node_modules/vue-loader/lib/runtime/componentNormalizer.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ normalizeComponent)
/* harmony export */ });
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode /* vue-cli only */
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () {
        injectStyles.call(
          this,
          (options.functional ? this.parent : this).$root.$options.shadowRoot
        )
      }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functional component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}


/***/ }),

/***/ "./node_modules/vue/dist/vue.esm.js":
/*!******************************************!*\
  !*** ./node_modules/vue/dist/vue.esm.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/*!
 * Vue.js v2.6.14
 * (c) 2014-2021 Evan You
 * Released under the MIT License.
 */
/*  */

var emptyObject = Object.freeze({});

// These helpers produce better VM code in JS engines due to their
// explicitness and function inlining.
function isUndef (v) {
  return v === undefined || v === null
}

function isDef (v) {
  return v !== undefined && v !== null
}

function isTrue (v) {
  return v === true
}

function isFalse (v) {
  return v === false
}

/**
 * Check if value is primitive.
 */
function isPrimitive (value) {
  return (
    typeof value === 'string' ||
    typeof value === 'number' ||
    // $flow-disable-line
    typeof value === 'symbol' ||
    typeof value === 'boolean'
  )
}

/**
 * Quick object check - this is primarily used to tell
 * Objects from primitive values when we know the value
 * is a JSON-compliant type.
 */
function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

/**
 * Get the raw type string of a value, e.g., [object Object].
 */
var _toString = Object.prototype.toString;

function toRawType (value) {
  return _toString.call(value).slice(8, -1)
}

/**
 * Strict object type check. Only returns true
 * for plain JavaScript objects.
 */
function isPlainObject (obj) {
  return _toString.call(obj) === '[object Object]'
}

function isRegExp (v) {
  return _toString.call(v) === '[object RegExp]'
}

/**
 * Check if val is a valid array index.
 */
function isValidArrayIndex (val) {
  var n = parseFloat(String(val));
  return n >= 0 && Math.floor(n) === n && isFinite(val)
}

function isPromise (val) {
  return (
    isDef(val) &&
    typeof val.then === 'function' &&
    typeof val.catch === 'function'
  )
}

/**
 * Convert a value to a string that is actually rendered.
 */
function toString (val) {
  return val == null
    ? ''
    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)
      ? JSON.stringify(val, null, 2)
      : String(val)
}

/**
 * Convert an input value to a number for persistence.
 * If the conversion fails, return original string.
 */
function toNumber (val) {
  var n = parseFloat(val);
  return isNaN(n) ? val : n
}

/**
 * Make a map and return a function for checking if a key
 * is in that map.
 */
function makeMap (
  str,
  expectsLowerCase
) {
  var map = Object.create(null);
  var list = str.split(',');
  for (var i = 0; i < list.length; i++) {
    map[list[i]] = true;
  }
  return expectsLowerCase
    ? function (val) { return map[val.toLowerCase()]; }
    : function (val) { return map[val]; }
}

/**
 * Check if a tag is a built-in tag.
 */
var isBuiltInTag = makeMap('slot,component', true);

/**
 * Check if an attribute is a reserved attribute.
 */
var isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');

/**
 * Remove an item from an array.
 */
function remove (arr, item) {
  if (arr.length) {
    var index = arr.indexOf(item);
    if (index > -1) {
      return arr.splice(index, 1)
    }
  }
}

/**
 * Check whether an object has the property.
 */
var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn (obj, key) {
  return hasOwnProperty.call(obj, key)
}

/**
 * Create a cached version of a pure function.
 */
function cached (fn) {
  var cache = Object.create(null);
  return (function cachedFn (str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str))
  })
}

/**
 * Camelize a hyphen-delimited string.
 */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })
});

/**
 * Capitalize a string.
 */
var capitalize = cached(function (str) {
  return str.charAt(0).toUpperCase() + str.slice(1)
});

/**
 * Hyphenate a camelCase string.
 */
var hyphenateRE = /\B([A-Z])/g;
var hyphenate = cached(function (str) {
  return str.replace(hyphenateRE, '-$1').toLowerCase()
});

/**
 * Simple bind polyfill for environments that do not support it,
 * e.g., PhantomJS 1.x. Technically, we don't need this anymore
 * since native bind is now performant enough in most browsers.
 * But removing it would mean breaking code that was able to run in
 * PhantomJS 1.x, so this must be kept for backward compatibility.
 */

/* istanbul ignore next */
function polyfillBind (fn, ctx) {
  function boundFn (a) {
    var l = arguments.length;
    return l
      ? l > 1
        ? fn.apply(ctx, arguments)
        : fn.call(ctx, a)
      : fn.call(ctx)
  }

  boundFn._length = fn.length;
  return boundFn
}

function nativeBind (fn, ctx) {
  return fn.bind(ctx)
}

var bind = Function.prototype.bind
  ? nativeBind
  : polyfillBind;

/**
 * Convert an Array-like object to a real Array.
 */
function toArray (list, start) {
  start = start || 0;
  var i = list.length - start;
  var ret = new Array(i);
  while (i--) {
    ret[i] = list[i + start];
  }
  return ret
}

/**
 * Mix properties into target object.
 */
function extend (to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }
  return to
}

/**
 * Merge an Array of Objects into a single Object.
 */
function toObject (arr) {
  var res = {};
  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }
  return res
}

/* eslint-disable no-unused-vars */

/**
 * Perform no operation.
 * Stubbing args to make Flow happy without leaving useless transpiled code
 * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).
 */
function noop (a, b, c) {}

/**
 * Always return false.
 */
var no = function (a, b, c) { return false; };

/* eslint-enable no-unused-vars */

/**
 * Return the same value.
 */
var identity = function (_) { return _; };

/**
 * Generate a string containing static keys from compiler modules.
 */
function genStaticKeys (modules) {
  return modules.reduce(function (keys, m) {
    return keys.concat(m.staticKeys || [])
  }, []).join(',')
}

/**
 * Check if two values are loosely equal - that is,
 * if they are plain objects, do they have the same shape?
 */
function looseEqual (a, b) {
  if (a === b) { return true }
  var isObjectA = isObject(a);
  var isObjectB = isObject(b);
  if (isObjectA && isObjectB) {
    try {
      var isArrayA = Array.isArray(a);
      var isArrayB = Array.isArray(b);
      if (isArrayA && isArrayB) {
        return a.length === b.length && a.every(function (e, i) {
          return looseEqual(e, b[i])
        })
      } else if (a instanceof Date && b instanceof Date) {
        return a.getTime() === b.getTime()
      } else if (!isArrayA && !isArrayB) {
        var keysA = Object.keys(a);
        var keysB = Object.keys(b);
        return keysA.length === keysB.length && keysA.every(function (key) {
          return looseEqual(a[key], b[key])
        })
      } else {
        /* istanbul ignore next */
        return false
      }
    } catch (e) {
      /* istanbul ignore next */
      return false
    }
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b)
  } else {
    return false
  }
}

/**
 * Return the first index at which a loosely equal value can be
 * found in the array (if value is a plain object, the array must
 * contain an object of the same shape), or -1 if it is not present.
 */
function looseIndexOf (arr, val) {
  for (var i = 0; i < arr.length; i++) {
    if (looseEqual(arr[i], val)) { return i }
  }
  return -1
}

/**
 * Ensure a function is called only once.
 */
function once (fn) {
  var called = false;
  return function () {
    if (!called) {
      called = true;
      fn.apply(this, arguments);
    }
  }
}

var SSR_ATTR = 'data-server-rendered';

var ASSET_TYPES = [
  'component',
  'directive',
  'filter'
];

var LIFECYCLE_HOOKS = [
  'beforeCreate',
  'created',
  'beforeMount',
  'mounted',
  'beforeUpdate',
  'updated',
  'beforeDestroy',
  'destroyed',
  'activated',
  'deactivated',
  'errorCaptured',
  'serverPrefetch'
];

/*  */



var config = ({
  /**
   * Option merge strategies (used in core/util/options)
   */
  // $flow-disable-line
  optionMergeStrategies: Object.create(null),

  /**
   * Whether to suppress warnings.
   */
  silent: false,

  /**
   * Show production mode tip message on boot?
   */
  productionTip: "development" !== 'production',

  /**
   * Whether to enable devtools
   */
  devtools: "development" !== 'production',

  /**
   * Whether to record perf
   */
  performance: false,

  /**
   * Error handler for watcher errors
   */
  errorHandler: null,

  /**
   * Warn handler for watcher warns
   */
  warnHandler: null,

  /**
   * Ignore certain custom elements
   */
  ignoredElements: [],

  /**
   * Custom user key aliases for v-on
   */
  // $flow-disable-line
  keyCodes: Object.create(null),

  /**
   * Check if a tag is reserved so that it cannot be registered as a
   * component. This is platform-dependent and may be overwritten.
   */
  isReservedTag: no,

  /**
   * Check if an attribute is reserved so that it cannot be used as a component
   * prop. This is platform-dependent and may be overwritten.
   */
  isReservedAttr: no,

  /**
   * Check if a tag is an unknown element.
   * Platform-dependent.
   */
  isUnknownElement: no,

  /**
   * Get the namespace of an element
   */
  getTagNamespace: noop,

  /**
   * Parse the real tag name for the specific platform.
   */
  parsePlatformTagName: identity,

  /**
   * Check if an attribute must be bound using property, e.g. value
   * Platform-dependent.
   */
  mustUseProp: no,

  /**
   * Perform updates asynchronously. Intended to be used by Vue Test Utils
   * This will significantly reduce performance if set to false.
   */
  async: true,

  /**
   * Exposed for legacy reasons
   */
  _lifecycleHooks: LIFECYCLE_HOOKS
});

/*  */

/**
 * unicode letters used for parsing html tags, component names and property paths.
 * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname
 * skipping \u10000-\uEFFFF due to it freezing up PhantomJS
 */
var unicodeRegExp = /a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;

/**
 * Check if a string starts with $ or _
 */
function isReserved (str) {
  var c = (str + '').charCodeAt(0);
  return c === 0x24 || c === 0x5F
}

/**
 * Define a property.
 */
function def (obj, key, val, enumerable) {
  Object.defineProperty(obj, key, {
    value: val,
    enumerable: !!enumerable,
    writable: true,
    configurable: true
  });
}

/**
 * Parse simple path.
 */
var bailRE = new RegExp(("[^" + (unicodeRegExp.source) + ".$_\\d]"));
function parsePath (path) {
  if (bailRE.test(path)) {
    return
  }
  var segments = path.split('.');
  return function (obj) {
    for (var i = 0; i < segments.length; i++) {
      if (!obj) { return }
      obj = obj[segments[i]];
    }
    return obj
  }
}

/*  */

// can we use __proto__?
var hasProto = '__proto__' in {};

// Browser environment sniffing
var inBrowser = typeof window !== 'undefined';
var inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;
var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();
var UA = inBrowser && window.navigator.userAgent.toLowerCase();
var isIE = UA && /msie|trident/.test(UA);
var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
var isEdge = UA && UA.indexOf('edge/') > 0;
var isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');
var isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');
var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;
var isPhantomJS = UA && /phantomjs/.test(UA);
var isFF = UA && UA.match(/firefox\/(\d+)/);

// Firefox has a "watch" function on Object.prototype...
var nativeWatch = ({}).watch;

var supportsPassive = false;
if (inBrowser) {
  try {
    var opts = {};
    Object.defineProperty(opts, 'passive', ({
      get: function get () {
        /* istanbul ignore next */
        supportsPassive = true;
      }
    })); // https://github.com/facebook/flow/issues/285
    window.addEventListener('test-passive', null, opts);
  } catch (e) {}
}

// this needs to be lazy-evaled because vue may be required before
// vue-server-renderer can set VUE_ENV
var _isServer;
var isServerRendering = function () {
  if (_isServer === undefined) {
    /* istanbul ignore if */
    if (!inBrowser && !inWeex && typeof __webpack_require__.g !== 'undefined') {
      // detect presence of vue-server-renderer and avoid
      // Webpack shimming the process
      _isServer = __webpack_require__.g['process'] && __webpack_require__.g['process'].env.VUE_ENV === 'server';
    } else {
      _isServer = false;
    }
  }
  return _isServer
};

// detect devtools
var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

/* istanbul ignore next */
function isNative (Ctor) {
  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())
}

var hasSymbol =
  typeof Symbol !== 'undefined' && isNative(Symbol) &&
  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

var _Set;
/* istanbul ignore if */ // $flow-disable-line
if (typeof Set !== 'undefined' && isNative(Set)) {
  // use native Set when available.
  _Set = Set;
} else {
  // a non-standard Set polyfill that only works with primitive keys.
  _Set = /*@__PURE__*/(function () {
    function Set () {
      this.set = Object.create(null);
    }
    Set.prototype.has = function has (key) {
      return this.set[key] === true
    };
    Set.prototype.add = function add (key) {
      this.set[key] = true;
    };
    Set.prototype.clear = function clear () {
      this.set = Object.create(null);
    };

    return Set;
  }());
}

/*  */

var warn = noop;
var tip = noop;
var generateComponentTrace = (noop); // work around flow check
var formatComponentName = (noop);

if (true) {
  var hasConsole = typeof console !== 'undefined';
  var classifyRE = /(?:^|[-_])(\w)/g;
  var classify = function (str) { return str
    .replace(classifyRE, function (c) { return c.toUpperCase(); })
    .replace(/[-_]/g, ''); };

  warn = function (msg, vm) {
    var trace = vm ? generateComponentTrace(vm) : '';

    if (config.warnHandler) {
      config.warnHandler.call(null, msg, vm, trace);
    } else if (hasConsole && (!config.silent)) {
      console.error(("[Vue warn]: " + msg + trace));
    }
  };

  tip = function (msg, vm) {
    if (hasConsole && (!config.silent)) {
      console.warn("[Vue tip]: " + msg + (
        vm ? generateComponentTrace(vm) : ''
      ));
    }
  };

  formatComponentName = function (vm, includeFile) {
    if (vm.$root === vm) {
      return '<Root>'
    }
    var options = typeof vm === 'function' && vm.cid != null
      ? vm.options
      : vm._isVue
        ? vm.$options || vm.constructor.options
        : vm;
    var name = options.name || options._componentTag;
    var file = options.__file;
    if (!name && file) {
      var match = file.match(/([^/\\]+)\.vue$/);
      name = match && match[1];
    }

    return (
      (name ? ("<" + (classify(name)) + ">") : "<Anonymous>") +
      (file && includeFile !== false ? (" at " + file) : '')
    )
  };

  var repeat = function (str, n) {
    var res = '';
    while (n) {
      if (n % 2 === 1) { res += str; }
      if (n > 1) { str += str; }
      n >>= 1;
    }
    return res
  };

  generateComponentTrace = function (vm) {
    if (vm._isVue && vm.$parent) {
      var tree = [];
      var currentRecursiveSequence = 0;
      while (vm) {
        if (tree.length > 0) {
          var last = tree[tree.length - 1];
          if (last.constructor === vm.constructor) {
            currentRecursiveSequence++;
            vm = vm.$parent;
            continue
          } else if (currentRecursiveSequence > 0) {
            tree[tree.length - 1] = [last, currentRecursiveSequence];
            currentRecursiveSequence = 0;
          }
        }
        tree.push(vm);
        vm = vm.$parent;
      }
      return '\n\nfound in\n\n' + tree
        .map(function (vm, i) { return ("" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)
            ? ((formatComponentName(vm[0])) + "... (" + (vm[1]) + " recursive calls)")
            : formatComponentName(vm))); })
        .join('\n')
    } else {
      return ("\n\n(found in " + (formatComponentName(vm)) + ")")
    }
  };
}

/*  */

var uid = 0;

/**
 * A dep is an observable that can have multiple
 * directives subscribing to it.
 */
var Dep = function Dep () {
  this.id = uid++;
  this.subs = [];
};

Dep.prototype.addSub = function addSub (sub) {
  this.subs.push(sub);
};

Dep.prototype.removeSub = function removeSub (sub) {
  remove(this.subs, sub);
};

Dep.prototype.depend = function depend () {
  if (Dep.target) {
    Dep.target.addDep(this);
  }
};

Dep.prototype.notify = function notify () {
  // stabilize the subscriber list first
  var subs = this.subs.slice();
  if ( true && !config.async) {
    // subs aren't sorted in scheduler if not running async
    // we need to sort them now to make sure they fire in correct
    // order
    subs.sort(function (a, b) { return a.id - b.id; });
  }
  for (var i = 0, l = subs.length; i < l; i++) {
    subs[i].update();
  }
};

// The current target watcher being evaluated.
// This is globally unique because only one watcher
// can be evaluated at a time.
Dep.target = null;
var targetStack = [];

function pushTarget (target) {
  targetStack.push(target);
  Dep.target = target;
}

function popTarget () {
  targetStack.pop();
  Dep.target = targetStack[targetStack.length - 1];
}

/*  */

var VNode = function VNode (
  tag,
  data,
  children,
  text,
  elm,
  context,
  componentOptions,
  asyncFactory
) {
  this.tag = tag;
  this.data = data;
  this.children = children;
  this.text = text;
  this.elm = elm;
  this.ns = undefined;
  this.context = context;
  this.fnContext = undefined;
  this.fnOptions = undefined;
  this.fnScopeId = undefined;
  this.key = data && data.key;
  this.componentOptions = componentOptions;
  this.componentInstance = undefined;
  this.parent = undefined;
  this.raw = false;
  this.isStatic = false;
  this.isRootInsert = true;
  this.isComment = false;
  this.isCloned = false;
  this.isOnce = false;
  this.asyncFactory = asyncFactory;
  this.asyncMeta = undefined;
  this.isAsyncPlaceholder = false;
};

var prototypeAccessors = { child: { configurable: true } };

// DEPRECATED: alias for componentInstance for backwards compat.
/* istanbul ignore next */
prototypeAccessors.child.get = function () {
  return this.componentInstance
};

Object.defineProperties( VNode.prototype, prototypeAccessors );

var createEmptyVNode = function (text) {
  if ( text === void 0 ) text = '';

  var node = new VNode();
  node.text = text;
  node.isComment = true;
  return node
};

function createTextVNode (val) {
  return new VNode(undefined, undefined, undefined, String(val))
}

// optimized shallow clone
// used for static nodes and slot nodes because they may be reused across
// multiple renders, cloning them avoids errors when DOM manipulations rely
// on their elm reference.
function cloneVNode (vnode) {
  var cloned = new VNode(
    vnode.tag,
    vnode.data,
    // #7975
    // clone children array to avoid mutating original in case of cloning
    // a child.
    vnode.children && vnode.children.slice(),
    vnode.text,
    vnode.elm,
    vnode.context,
    vnode.componentOptions,
    vnode.asyncFactory
  );
  cloned.ns = vnode.ns;
  cloned.isStatic = vnode.isStatic;
  cloned.key = vnode.key;
  cloned.isComment = vnode.isComment;
  cloned.fnContext = vnode.fnContext;
  cloned.fnOptions = vnode.fnOptions;
  cloned.fnScopeId = vnode.fnScopeId;
  cloned.asyncMeta = vnode.asyncMeta;
  cloned.isCloned = true;
  return cloned
}

/*
 * not type checking this file because flow doesn't play well with
 * dynamically accessing methods on Array prototype
 */

var arrayProto = Array.prototype;
var arrayMethods = Object.create(arrayProto);

var methodsToPatch = [
  'push',
  'pop',
  'shift',
  'unshift',
  'splice',
  'sort',
  'reverse'
];

/**
 * Intercept mutating methods and emit events
 */
methodsToPatch.forEach(function (method) {
  // cache original method
  var original = arrayProto[method];
  def(arrayMethods, method, function mutator () {
    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];

    var result = original.apply(this, args);
    var ob = this.__ob__;
    var inserted;
    switch (method) {
      case 'push':
      case 'unshift':
        inserted = args;
        break
      case 'splice':
        inserted = args.slice(2);
        break
    }
    if (inserted) { ob.observeArray(inserted); }
    // notify change
    ob.dep.notify();
    return result
  });
});

/*  */

var arrayKeys = Object.getOwnPropertyNames(arrayMethods);

/**
 * In some cases we may want to disable observation inside a component's
 * update computation.
 */
var shouldObserve = true;

function toggleObserving (value) {
  shouldObserve = value;
}

/**
 * Observer class that is attached to each observed
 * object. Once attached, the observer converts the target
 * object's property keys into getter/setters that
 * collect dependencies and dispatch updates.
 */
var Observer = function Observer (value) {
  this.value = value;
  this.dep = new Dep();
  this.vmCount = 0;
  def(value, '__ob__', this);
  if (Array.isArray(value)) {
    if (hasProto) {
      protoAugment(value, arrayMethods);
    } else {
      copyAugment(value, arrayMethods, arrayKeys);
    }
    this.observeArray(value);
  } else {
    this.walk(value);
  }
};

/**
 * Walk through all properties and convert them into
 * getter/setters. This method should only be called when
 * value type is Object.
 */
Observer.prototype.walk = function walk (obj) {
  var keys = Object.keys(obj);
  for (var i = 0; i < keys.length; i++) {
    defineReactive$$1(obj, keys[i]);
  }
};

/**
 * Observe a list of Array items.
 */
Observer.prototype.observeArray = function observeArray (items) {
  for (var i = 0, l = items.length; i < l; i++) {
    observe(items[i]);
  }
};

// helpers

/**
 * Augment a target Object or Array by intercepting
 * the prototype chain using __proto__
 */
function protoAugment (target, src) {
  /* eslint-disable no-proto */
  target.__proto__ = src;
  /* eslint-enable no-proto */
}

/**
 * Augment a target Object or Array by defining
 * hidden properties.
 */
/* istanbul ignore next */
function copyAugment (target, src, keys) {
  for (var i = 0, l = keys.length; i < l; i++) {
    var key = keys[i];
    def(target, key, src[key]);
  }
}

/**
 * Attempt to create an observer instance for a value,
 * returns the new observer if successfully observed,
 * or the existing observer if the value already has one.
 */
function observe (value, asRootData) {
  if (!isObject(value) || value instanceof VNode) {
    return
  }
  var ob;
  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
    ob = value.__ob__;
  } else if (
    shouldObserve &&
    !isServerRendering() &&
    (Array.isArray(value) || isPlainObject(value)) &&
    Object.isExtensible(value) &&
    !value._isVue
  ) {
    ob = new Observer(value);
  }
  if (asRootData && ob) {
    ob.vmCount++;
  }
  return ob
}

/**
 * Define a reactive property on an Object.
 */
function defineReactive$$1 (
  obj,
  key,
  val,
  customSetter,
  shallow
) {
  var dep = new Dep();

  var property = Object.getOwnPropertyDescriptor(obj, key);
  if (property && property.configurable === false) {
    return
  }

  // cater for pre-defined getter/setters
  var getter = property && property.get;
  var setter = property && property.set;
  if ((!getter || setter) && arguments.length === 2) {
    val = obj[key];
  }

  var childOb = !shallow && observe(val);
  Object.defineProperty(obj, key, {
    enumerable: true,
    configurable: true,
    get: function reactiveGetter () {
      var value = getter ? getter.call(obj) : val;
      if (Dep.target) {
        dep.depend();
        if (childOb) {
          childOb.dep.depend();
          if (Array.isArray(value)) {
            dependArray(value);
          }
        }
      }
      return value
    },
    set: function reactiveSetter (newVal) {
      var value = getter ? getter.call(obj) : val;
      /* eslint-disable no-self-compare */
      if (newVal === value || (newVal !== newVal && value !== value)) {
        return
      }
      /* eslint-enable no-self-compare */
      if ( true && customSetter) {
        customSetter();
      }
      // #7981: for accessor properties without setter
      if (getter && !setter) { return }
      if (setter) {
        setter.call(obj, newVal);
      } else {
        val = newVal;
      }
      childOb = !shallow && observe(newVal);
      dep.notify();
    }
  });
}

/**
 * Set a property on an object. Adds the new property and
 * triggers change notification if the property doesn't
 * already exist.
 */
function set (target, key, val) {
  if ( true &&
    (isUndef(target) || isPrimitive(target))
  ) {
    warn(("Cannot set reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.length = Math.max(target.length, key);
    target.splice(key, 1, val);
    return val
  }
  if (key in target && !(key in Object.prototype)) {
    target[key] = val;
    return val
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
     true && warn(
      'Avoid adding reactive properties to a Vue instance or its root $data ' +
      'at runtime - declare it upfront in the data option.'
    );
    return val
  }
  if (!ob) {
    target[key] = val;
    return val
  }
  defineReactive$$1(ob.value, key, val);
  ob.dep.notify();
  return val
}

/**
 * Delete a property and trigger change if necessary.
 */
function del (target, key) {
  if ( true &&
    (isUndef(target) || isPrimitive(target))
  ) {
    warn(("Cannot delete reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.splice(key, 1);
    return
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
     true && warn(
      'Avoid deleting properties on a Vue instance or its root $data ' +
      '- just set it to null.'
    );
    return
  }
  if (!hasOwn(target, key)) {
    return
  }
  delete target[key];
  if (!ob) {
    return
  }
  ob.dep.notify();
}

/**
 * Collect dependencies on array elements when the array is touched, since
 * we cannot intercept array element access like property getters.
 */
function dependArray (value) {
  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {
    e = value[i];
    e && e.__ob__ && e.__ob__.dep.depend();
    if (Array.isArray(e)) {
      dependArray(e);
    }
  }
}

/*  */

/**
 * Option overwriting strategies are functions that handle
 * how to merge a parent option value and a child option
 * value into the final value.
 */
var strats = config.optionMergeStrategies;

/**
 * Options with restrictions
 */
if (true) {
  strats.el = strats.propsData = function (parent, child, vm, key) {
    if (!vm) {
      warn(
        "option \"" + key + "\" can only be used during instance " +
        'creation with the `new` keyword.'
      );
    }
    return defaultStrat(parent, child)
  };
}

/**
 * Helper that recursively merges two data objects together.
 */
function mergeData (to, from) {
  if (!from) { return to }
  var key, toVal, fromVal;

  var keys = hasSymbol
    ? Reflect.ownKeys(from)
    : Object.keys(from);

  for (var i = 0; i < keys.length; i++) {
    key = keys[i];
    // in case the object is already observed...
    if (key === '__ob__') { continue }
    toVal = to[key];
    fromVal = from[key];
    if (!hasOwn(to, key)) {
      set(to, key, fromVal);
    } else if (
      toVal !== fromVal &&
      isPlainObject(toVal) &&
      isPlainObject(fromVal)
    ) {
      mergeData(toVal, fromVal);
    }
  }
  return to
}

/**
 * Data
 */
function mergeDataOrFn (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    // in a Vue.extend merge, both should be functions
    if (!childVal) {
      return parentVal
    }
    if (!parentVal) {
      return childVal
    }
    // when parentVal & childVal are both present,
    // we need to return a function that returns the
    // merged result of both functions... no need to
    // check if parentVal is a function here because
    // it has to be a function to pass previous merges.
    return function mergedDataFn () {
      return mergeData(
        typeof childVal === 'function' ? childVal.call(this, this) : childVal,
        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal
      )
    }
  } else {
    return function mergedInstanceDataFn () {
      // instance merge
      var instanceData = typeof childVal === 'function'
        ? childVal.call(vm, vm)
        : childVal;
      var defaultData = typeof parentVal === 'function'
        ? parentVal.call(vm, vm)
        : parentVal;
      if (instanceData) {
        return mergeData(instanceData, defaultData)
      } else {
        return defaultData
      }
    }
  }
}

strats.data = function (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    if (childVal && typeof childVal !== 'function') {
       true && warn(
        'The "data" option should be a function ' +
        'that returns a per-instance value in component ' +
        'definitions.',
        vm
      );

      return parentVal
    }
    return mergeDataOrFn(parentVal, childVal)
  }

  return mergeDataOrFn(parentVal, childVal, vm)
};

/**
 * Hooks and props are merged as arrays.
 */
function mergeHook (
  parentVal,
  childVal
) {
  var res = childVal
    ? parentVal
      ? parentVal.concat(childVal)
      : Array.isArray(childVal)
        ? childVal
        : [childVal]
    : parentVal;
  return res
    ? dedupeHooks(res)
    : res
}

function dedupeHooks (hooks) {
  var res = [];
  for (var i = 0; i < hooks.length; i++) {
    if (res.indexOf(hooks[i]) === -1) {
      res.push(hooks[i]);
    }
  }
  return res
}

LIFECYCLE_HOOKS.forEach(function (hook) {
  strats[hook] = mergeHook;
});

/**
 * Assets
 *
 * When a vm is present (instance creation), we need to do
 * a three-way merge between constructor options, instance
 * options and parent options.
 */
function mergeAssets (
  parentVal,
  childVal,
  vm,
  key
) {
  var res = Object.create(parentVal || null);
  if (childVal) {
     true && assertObjectType(key, childVal, vm);
    return extend(res, childVal)
  } else {
    return res
  }
}

ASSET_TYPES.forEach(function (type) {
  strats[type + 's'] = mergeAssets;
});

/**
 * Watchers.
 *
 * Watchers hashes should not overwrite one
 * another, so we merge them as arrays.
 */
strats.watch = function (
  parentVal,
  childVal,
  vm,
  key
) {
  // work around Firefox's Object.prototype.watch...
  if (parentVal === nativeWatch) { parentVal = undefined; }
  if (childVal === nativeWatch) { childVal = undefined; }
  /* istanbul ignore if */
  if (!childVal) { return Object.create(parentVal || null) }
  if (true) {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = {};
  extend(ret, parentVal);
  for (var key$1 in childVal) {
    var parent = ret[key$1];
    var child = childVal[key$1];
    if (parent && !Array.isArray(parent)) {
      parent = [parent];
    }
    ret[key$1] = parent
      ? parent.concat(child)
      : Array.isArray(child) ? child : [child];
  }
  return ret
};

/**
 * Other object hashes.
 */
strats.props =
strats.methods =
strats.inject =
strats.computed = function (
  parentVal,
  childVal,
  vm,
  key
) {
  if (childVal && "development" !== 'production') {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = Object.create(null);
  extend(ret, parentVal);
  if (childVal) { extend(ret, childVal); }
  return ret
};
strats.provide = mergeDataOrFn;

/**
 * Default strategy.
 */
var defaultStrat = function (parentVal, childVal) {
  return childVal === undefined
    ? parentVal
    : childVal
};

/**
 * Validate component names
 */
function checkComponents (options) {
  for (var key in options.components) {
    validateComponentName(key);
  }
}

function validateComponentName (name) {
  if (!new RegExp(("^[a-zA-Z][\\-\\.0-9_" + (unicodeRegExp.source) + "]*$")).test(name)) {
    warn(
      'Invalid component name: "' + name + '". Component names ' +
      'should conform to valid custom element name in html5 specification.'
    );
  }
  if (isBuiltInTag(name) || config.isReservedTag(name)) {
    warn(
      'Do not use built-in or reserved HTML elements as component ' +
      'id: ' + name
    );
  }
}

/**
 * Ensure all props option syntax are normalized into the
 * Object-based format.
 */
function normalizeProps (options, vm) {
  var props = options.props;
  if (!props) { return }
  var res = {};
  var i, val, name;
  if (Array.isArray(props)) {
    i = props.length;
    while (i--) {
      val = props[i];
      if (typeof val === 'string') {
        name = camelize(val);
        res[name] = { type: null };
      } else if (true) {
        warn('props must be strings when using array syntax.');
      }
    }
  } else if (isPlainObject(props)) {
    for (var key in props) {
      val = props[key];
      name = camelize(key);
      res[name] = isPlainObject(val)
        ? val
        : { type: val };
    }
  } else if (true) {
    warn(
      "Invalid value for option \"props\": expected an Array or an Object, " +
      "but got " + (toRawType(props)) + ".",
      vm
    );
  }
  options.props = res;
}

/**
 * Normalize all injections into Object-based format
 */
function normalizeInject (options, vm) {
  var inject = options.inject;
  if (!inject) { return }
  var normalized = options.inject = {};
  if (Array.isArray(inject)) {
    for (var i = 0; i < inject.length; i++) {
      normalized[inject[i]] = { from: inject[i] };
    }
  } else if (isPlainObject(inject)) {
    for (var key in inject) {
      var val = inject[key];
      normalized[key] = isPlainObject(val)
        ? extend({ from: key }, val)
        : { from: val };
    }
  } else if (true) {
    warn(
      "Invalid value for option \"inject\": expected an Array or an Object, " +
      "but got " + (toRawType(inject)) + ".",
      vm
    );
  }
}

/**
 * Normalize raw function directives into object format.
 */
function normalizeDirectives (options) {
  var dirs = options.directives;
  if (dirs) {
    for (var key in dirs) {
      var def$$1 = dirs[key];
      if (typeof def$$1 === 'function') {
        dirs[key] = { bind: def$$1, update: def$$1 };
      }
    }
  }
}

function assertObjectType (name, value, vm) {
  if (!isPlainObject(value)) {
    warn(
      "Invalid value for option \"" + name + "\": expected an Object, " +
      "but got " + (toRawType(value)) + ".",
      vm
    );
  }
}

/**
 * Merge two option objects into a new one.
 * Core utility used in both instantiation and inheritance.
 */
function mergeOptions (
  parent,
  child,
  vm
) {
  if (true) {
    checkComponents(child);
  }

  if (typeof child === 'function') {
    child = child.options;
  }

  normalizeProps(child, vm);
  normalizeInject(child, vm);
  normalizeDirectives(child);

  // Apply extends and mixins on the child options,
  // but only if it is a raw options object that isn't
  // the result of another mergeOptions call.
  // Only merged options has the _base property.
  if (!child._base) {
    if (child.extends) {
      parent = mergeOptions(parent, child.extends, vm);
    }
    if (child.mixins) {
      for (var i = 0, l = child.mixins.length; i < l; i++) {
        parent = mergeOptions(parent, child.mixins[i], vm);
      }
    }
  }

  var options = {};
  var key;
  for (key in parent) {
    mergeField(key);
  }
  for (key in child) {
    if (!hasOwn(parent, key)) {
      mergeField(key);
    }
  }
  function mergeField (key) {
    var strat = strats[key] || defaultStrat;
    options[key] = strat(parent[key], child[key], vm, key);
  }
  return options
}

/**
 * Resolve an asset.
 * This function is used because child instances need access
 * to assets defined in its ancestor chain.
 */
function resolveAsset (
  options,
  type,
  id,
  warnMissing
) {
  /* istanbul ignore if */
  if (typeof id !== 'string') {
    return
  }
  var assets = options[type];
  // check local registration variations first
  if (hasOwn(assets, id)) { return assets[id] }
  var camelizedId = camelize(id);
  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }
  var PascalCaseId = capitalize(camelizedId);
  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }
  // fallback to prototype chain
  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
  if ( true && warnMissing && !res) {
    warn(
      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,
      options
    );
  }
  return res
}

/*  */



function validateProp (
  key,
  propOptions,
  propsData,
  vm
) {
  var prop = propOptions[key];
  var absent = !hasOwn(propsData, key);
  var value = propsData[key];
  // boolean casting
  var booleanIndex = getTypeIndex(Boolean, prop.type);
  if (booleanIndex > -1) {
    if (absent && !hasOwn(prop, 'default')) {
      value = false;
    } else if (value === '' || value === hyphenate(key)) {
      // only cast empty string / same name to boolean if
      // boolean has higher priority
      var stringIndex = getTypeIndex(String, prop.type);
      if (stringIndex < 0 || booleanIndex < stringIndex) {
        value = true;
      }
    }
  }
  // check default value
  if (value === undefined) {
    value = getPropDefaultValue(vm, prop, key);
    // since the default value is a fresh copy,
    // make sure to observe it.
    var prevShouldObserve = shouldObserve;
    toggleObserving(true);
    observe(value);
    toggleObserving(prevShouldObserve);
  }
  if (
    true
  ) {
    assertProp(prop, key, value, vm, absent);
  }
  return value
}

/**
 * Get the default value of a prop.
 */
function getPropDefaultValue (vm, prop, key) {
  // no default, return undefined
  if (!hasOwn(prop, 'default')) {
    return undefined
  }
  var def = prop.default;
  // warn against non-factory defaults for Object & Array
  if ( true && isObject(def)) {
    warn(
      'Invalid default value for prop "' + key + '": ' +
      'Props with type Object/Array must use a factory function ' +
      'to return the default value.',
      vm
    );
  }
  // the raw prop value was also undefined from previous render,
  // return previous default value to avoid unnecessary watcher trigger
  if (vm && vm.$options.propsData &&
    vm.$options.propsData[key] === undefined &&
    vm._props[key] !== undefined
  ) {
    return vm._props[key]
  }
  // call factory function for non-Function types
  // a value is Function if its prototype is function even across different execution context
  return typeof def === 'function' && getType(prop.type) !== 'Function'
    ? def.call(vm)
    : def
}

/**
 * Assert whether a prop is valid.
 */
function assertProp (
  prop,
  name,
  value,
  vm,
  absent
) {
  if (prop.required && absent) {
    warn(
      'Missing required prop: "' + name + '"',
      vm
    );
    return
  }
  if (value == null && !prop.required) {
    return
  }
  var type = prop.type;
  var valid = !type || type === true;
  var expectedTypes = [];
  if (type) {
    if (!Array.isArray(type)) {
      type = [type];
    }
    for (var i = 0; i < type.length && !valid; i++) {
      var assertedType = assertType(value, type[i], vm);
      expectedTypes.push(assertedType.expectedType || '');
      valid = assertedType.valid;
    }
  }

  var haveExpectedTypes = expectedTypes.some(function (t) { return t; });
  if (!valid && haveExpectedTypes) {
    warn(
      getInvalidTypeMessage(name, value, expectedTypes),
      vm
    );
    return
  }
  var validator = prop.validator;
  if (validator) {
    if (!validator(value)) {
      warn(
        'Invalid prop: custom validator check failed for prop "' + name + '".',
        vm
      );
    }
  }
}

var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol|BigInt)$/;

function assertType (value, type, vm) {
  var valid;
  var expectedType = getType(type);
  if (simpleCheckRE.test(expectedType)) {
    var t = typeof value;
    valid = t === expectedType.toLowerCase();
    // for primitive wrapper objects
    if (!valid && t === 'object') {
      valid = value instanceof type;
    }
  } else if (expectedType === 'Object') {
    valid = isPlainObject(value);
  } else if (expectedType === 'Array') {
    valid = Array.isArray(value);
  } else {
    try {
      valid = value instanceof type;
    } catch (e) {
      warn('Invalid prop type: "' + String(type) + '" is not a constructor', vm);
      valid = false;
    }
  }
  return {
    valid: valid,
    expectedType: expectedType
  }
}

var functionTypeCheckRE = /^\s*function (\w+)/;

/**
 * Use function string name to check built-in types,
 * because a simple equality check will fail when running
 * across different vms / iframes.
 */
function getType (fn) {
  var match = fn && fn.toString().match(functionTypeCheckRE);
  return match ? match[1] : ''
}

function isSameType (a, b) {
  return getType(a) === getType(b)
}

function getTypeIndex (type, expectedTypes) {
  if (!Array.isArray(expectedTypes)) {
    return isSameType(expectedTypes, type) ? 0 : -1
  }
  for (var i = 0, len = expectedTypes.length; i < len; i++) {
    if (isSameType(expectedTypes[i], type)) {
      return i
    }
  }
  return -1
}

function getInvalidTypeMessage (name, value, expectedTypes) {
  var message = "Invalid prop: type check failed for prop \"" + name + "\"." +
    " Expected " + (expectedTypes.map(capitalize).join(', '));
  var expectedType = expectedTypes[0];
  var receivedType = toRawType(value);
  // check if we need to specify expected value
  if (
    expectedTypes.length === 1 &&
    isExplicable(expectedType) &&
    isExplicable(typeof value) &&
    !isBoolean(expectedType, receivedType)
  ) {
    message += " with value " + (styleValue(value, expectedType));
  }
  message += ", got " + receivedType + " ";
  // check if we need to specify received value
  if (isExplicable(receivedType)) {
    message += "with value " + (styleValue(value, receivedType)) + ".";
  }
  return message
}

function styleValue (value, type) {
  if (type === 'String') {
    return ("\"" + value + "\"")
  } else if (type === 'Number') {
    return ("" + (Number(value)))
  } else {
    return ("" + value)
  }
}

var EXPLICABLE_TYPES = ['string', 'number', 'boolean'];
function isExplicable (value) {
  return EXPLICABLE_TYPES.some(function (elem) { return value.toLowerCase() === elem; })
}

function isBoolean () {
  var args = [], len = arguments.length;
  while ( len-- ) args[ len ] = arguments[ len ];

  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })
}

/*  */

function handleError (err, vm, info) {
  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.
  // See: https://github.com/vuejs/vuex/issues/1505
  pushTarget();
  try {
    if (vm) {
      var cur = vm;
      while ((cur = cur.$parent)) {
        var hooks = cur.$options.errorCaptured;
        if (hooks) {
          for (var i = 0; i < hooks.length; i++) {
            try {
              var capture = hooks[i].call(cur, err, vm, info) === false;
              if (capture) { return }
            } catch (e) {
              globalHandleError(e, cur, 'errorCaptured hook');
            }
          }
        }
      }
    }
    globalHandleError(err, vm, info);
  } finally {
    popTarget();
  }
}

function invokeWithErrorHandling (
  handler,
  context,
  args,
  vm,
  info
) {
  var res;
  try {
    res = args ? handler.apply(context, args) : handler.call(context);
    if (res && !res._isVue && isPromise(res) && !res._handled) {
      res.catch(function (e) { return handleError(e, vm, info + " (Promise/async)"); });
      // issue #9511
      // avoid catch triggering multiple times when nested calls
      res._handled = true;
    }
  } catch (e) {
    handleError(e, vm, info);
  }
  return res
}

function globalHandleError (err, vm, info) {
  if (config.errorHandler) {
    try {
      return config.errorHandler.call(null, err, vm, info)
    } catch (e) {
      // if the user intentionally throws the original error in the handler,
      // do not log it twice
      if (e !== err) {
        logError(e, null, 'config.errorHandler');
      }
    }
  }
  logError(err, vm, info);
}

function logError (err, vm, info) {
  if (true) {
    warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
  }
  /* istanbul ignore else */
  if ((inBrowser || inWeex) && typeof console !== 'undefined') {
    console.error(err);
  } else {
    throw err
  }
}

/*  */

var isUsingMicroTask = false;

var callbacks = [];
var pending = false;

function flushCallbacks () {
  pending = false;
  var copies = callbacks.slice(0);
  callbacks.length = 0;
  for (var i = 0; i < copies.length; i++) {
    copies[i]();
  }
}

// Here we have async deferring wrappers using microtasks.
// In 2.5 we used (macro) tasks (in combination with microtasks).
// However, it has subtle problems when state is changed right before repaint
// (e.g. #6813, out-in transitions).
// Also, using (macro) tasks in event handler would cause some weird behaviors
// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).
// So we now use microtasks everywhere, again.
// A major drawback of this tradeoff is that there are some scenarios
// where microtasks have too high a priority and fire in between supposedly
// sequential events (e.g. #4521, #6690, which have workarounds)
// or even between bubbling of the same event (#6566).
var timerFunc;

// The nextTick behavior leverages the microtask queue, which can be accessed
// via either native Promise.then or MutationObserver.
// MutationObserver has wider support, however it is seriously bugged in
// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
// completely stops working after triggering a few times... so, if native
// Promise is available, we will use it:
/* istanbul ignore next, $flow-disable-line */
if (typeof Promise !== 'undefined' && isNative(Promise)) {
  var p = Promise.resolve();
  timerFunc = function () {
    p.then(flushCallbacks);
    // In problematic UIWebViews, Promise.then doesn't completely break, but
    // it can get stuck in a weird state where callbacks are pushed into the
    // microtask queue but the queue isn't being flushed, until the browser
    // needs to do some other work, e.g. handle a timer. Therefore we can
    // "force" the microtask queue to be flushed by adding an empty timer.
    if (isIOS) { setTimeout(noop); }
  };
  isUsingMicroTask = true;
} else if (!isIE && typeof MutationObserver !== 'undefined' && (
  isNative(MutationObserver) ||
  // PhantomJS and iOS 7.x
  MutationObserver.toString() === '[object MutationObserverConstructor]'
)) {
  // Use MutationObserver where native Promise is not available,
  // e.g. PhantomJS, iOS7, Android 4.4
  // (#6466 MutationObserver is unreliable in IE11)
  var counter = 1;
  var observer = new MutationObserver(flushCallbacks);
  var textNode = document.createTextNode(String(counter));
  observer.observe(textNode, {
    characterData: true
  });
  timerFunc = function () {
    counter = (counter + 1) % 2;
    textNode.data = String(counter);
  };
  isUsingMicroTask = true;
} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {
  // Fallback to setImmediate.
  // Technically it leverages the (macro) task queue,
  // but it is still a better choice than setTimeout.
  timerFunc = function () {
    setImmediate(flushCallbacks);
  };
} else {
  // Fallback to setTimeout.
  timerFunc = function () {
    setTimeout(flushCallbacks, 0);
  };
}

function nextTick (cb, ctx) {
  var _resolve;
  callbacks.push(function () {
    if (cb) {
      try {
        cb.call(ctx);
      } catch (e) {
        handleError(e, ctx, 'nextTick');
      }
    } else if (_resolve) {
      _resolve(ctx);
    }
  });
  if (!pending) {
    pending = true;
    timerFunc();
  }
  // $flow-disable-line
  if (!cb && typeof Promise !== 'undefined') {
    return new Promise(function (resolve) {
      _resolve = resolve;
    })
  }
}

/*  */

var mark;
var measure;

if (true) {
  var perf = inBrowser && window.performance;
  /* istanbul ignore if */
  if (
    perf &&
    perf.mark &&
    perf.measure &&
    perf.clearMarks &&
    perf.clearMeasures
  ) {
    mark = function (tag) { return perf.mark(tag); };
    measure = function (name, startTag, endTag) {
      perf.measure(name, startTag, endTag);
      perf.clearMarks(startTag);
      perf.clearMarks(endTag);
      // perf.clearMeasures(name)
    };
  }
}

/* not type checking this file because flow doesn't play well with Proxy */

var initProxy;

if (true) {
  var allowedGlobals = makeMap(
    'Infinity,undefined,NaN,isFinite,isNaN,' +
    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +
    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,' +
    'require' // for Webpack/Browserify
  );

  var warnNonPresent = function (target, key) {
    warn(
      "Property or method \"" + key + "\" is not defined on the instance but " +
      'referenced during render. Make sure that this property is reactive, ' +
      'either in the data option, or for class-based components, by ' +
      'initializing the property. ' +
      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',
      target
    );
  };

  var warnReservedPrefix = function (target, key) {
    warn(
      "Property \"" + key + "\" must be accessed with \"$data." + key + "\" because " +
      'properties starting with "$" or "_" are not proxied in the Vue instance to ' +
      'prevent conflicts with Vue internals. ' +
      'See: https://vuejs.org/v2/api/#data',
      target
    );
  };

  var hasProxy =
    typeof Proxy !== 'undefined' && isNative(Proxy);

  if (hasProxy) {
    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');
    config.keyCodes = new Proxy(config.keyCodes, {
      set: function set (target, key, value) {
        if (isBuiltInModifier(key)) {
          warn(("Avoid overwriting built-in modifier in config.keyCodes: ." + key));
          return false
        } else {
          target[key] = value;
          return true
        }
      }
    });
  }

  var hasHandler = {
    has: function has (target, key) {
      var has = key in target;
      var isAllowed = allowedGlobals(key) ||
        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));
      if (!has && !isAllowed) {
        if (key in target.$data) { warnReservedPrefix(target, key); }
        else { warnNonPresent(target, key); }
      }
      return has || !isAllowed
    }
  };

  var getHandler = {
    get: function get (target, key) {
      if (typeof key === 'string' && !(key in target)) {
        if (key in target.$data) { warnReservedPrefix(target, key); }
        else { warnNonPresent(target, key); }
      }
      return target[key]
    }
  };

  initProxy = function initProxy (vm) {
    if (hasProxy) {
      // determine which proxy handler to use
      var options = vm.$options;
      var handlers = options.render && options.render._withStripped
        ? getHandler
        : hasHandler;
      vm._renderProxy = new Proxy(vm, handlers);
    } else {
      vm._renderProxy = vm;
    }
  };
}

/*  */

var seenObjects = new _Set();

/**
 * Recursively traverse an object to evoke all converted
 * getters, so that every nested property inside the object
 * is collected as a "deep" dependency.
 */
function traverse (val) {
  _traverse(val, seenObjects);
  seenObjects.clear();
}

function _traverse (val, seen) {
  var i, keys;
  var isA = Array.isArray(val);
  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {
    return
  }
  if (val.__ob__) {
    var depId = val.__ob__.dep.id;
    if (seen.has(depId)) {
      return
    }
    seen.add(depId);
  }
  if (isA) {
    i = val.length;
    while (i--) { _traverse(val[i], seen); }
  } else {
    keys = Object.keys(val);
    i = keys.length;
    while (i--) { _traverse(val[keys[i]], seen); }
  }
}

/*  */

var normalizeEvent = cached(function (name) {
  var passive = name.charAt(0) === '&';
  name = passive ? name.slice(1) : name;
  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first
  name = once$$1 ? name.slice(1) : name;
  var capture = name.charAt(0) === '!';
  name = capture ? name.slice(1) : name;
  return {
    name: name,
    once: once$$1,
    capture: capture,
    passive: passive
  }
});

function createFnInvoker (fns, vm) {
  function invoker () {
    var arguments$1 = arguments;

    var fns = invoker.fns;
    if (Array.isArray(fns)) {
      var cloned = fns.slice();
      for (var i = 0; i < cloned.length; i++) {
        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, "v-on handler");
      }
    } else {
      // return handler return value for single handlers
      return invokeWithErrorHandling(fns, null, arguments, vm, "v-on handler")
    }
  }
  invoker.fns = fns;
  return invoker
}

function updateListeners (
  on,
  oldOn,
  add,
  remove$$1,
  createOnceHandler,
  vm
) {
  var name, def$$1, cur, old, event;
  for (name in on) {
    def$$1 = cur = on[name];
    old = oldOn[name];
    event = normalizeEvent(name);
    if (isUndef(cur)) {
       true && warn(
        "Invalid handler for event \"" + (event.name) + "\": got " + String(cur),
        vm
      );
    } else if (isUndef(old)) {
      if (isUndef(cur.fns)) {
        cur = on[name] = createFnInvoker(cur, vm);
      }
      if (isTrue(event.once)) {
        cur = on[name] = createOnceHandler(event.name, cur, event.capture);
      }
      add(event.name, cur, event.capture, event.passive, event.params);
    } else if (cur !== old) {
      old.fns = cur;
      on[name] = old;
    }
  }
  for (name in oldOn) {
    if (isUndef(on[name])) {
      event = normalizeEvent(name);
      remove$$1(event.name, oldOn[name], event.capture);
    }
  }
}

/*  */

function mergeVNodeHook (def, hookKey, hook) {
  if (def instanceof VNode) {
    def = def.data.hook || (def.data.hook = {});
  }
  var invoker;
  var oldHook = def[hookKey];

  function wrappedHook () {
    hook.apply(this, arguments);
    // important: remove merged hook to ensure it's called only once
    // and prevent memory leak
    remove(invoker.fns, wrappedHook);
  }

  if (isUndef(oldHook)) {
    // no existing hook
    invoker = createFnInvoker([wrappedHook]);
  } else {
    /* istanbul ignore if */
    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {
      // already a merged invoker
      invoker = oldHook;
      invoker.fns.push(wrappedHook);
    } else {
      // existing plain hook
      invoker = createFnInvoker([oldHook, wrappedHook]);
    }
  }

  invoker.merged = true;
  def[hookKey] = invoker;
}

/*  */

function extractPropsFromVNodeData (
  data,
  Ctor,
  tag
) {
  // we are only extracting raw values here.
  // validation and default values are handled in the child
  // component itself.
  var propOptions = Ctor.options.props;
  if (isUndef(propOptions)) {
    return
  }
  var res = {};
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      if (true) {
        var keyInLowerCase = key.toLowerCase();
        if (
          key !== keyInLowerCase &&
          attrs && hasOwn(attrs, keyInLowerCase)
        ) {
          tip(
            "Prop \"" + keyInLowerCase + "\" is passed to component " +
            (formatComponentName(tag || Ctor)) + ", but the declared prop name is" +
            " \"" + key + "\". " +
            "Note that HTML attributes are case-insensitive and camelCased " +
            "props need to use their kebab-case equivalents when using in-DOM " +
            "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\"."
          );
        }
      }
      checkProp(res, props, key, altKey, true) ||
      checkProp(res, attrs, key, altKey, false);
    }
  }
  return res
}

function checkProp (
  res,
  hash,
  key,
  altKey,
  preserve
) {
  if (isDef(hash)) {
    if (hasOwn(hash, key)) {
      res[key] = hash[key];
      if (!preserve) {
        delete hash[key];
      }
      return true
    } else if (hasOwn(hash, altKey)) {
      res[key] = hash[altKey];
      if (!preserve) {
        delete hash[altKey];
      }
      return true
    }
  }
  return false
}

/*  */

// The template compiler attempts to minimize the need for normalization by
// statically analyzing the template at compile time.
//
// For plain HTML markup, normalization can be completely skipped because the
// generated render function is guaranteed to return Array<VNode>. There are
// two cases where extra normalization is needed:

// 1. When the children contains components - because a functional component
// may return an Array instead of a single root. In this case, just a simple
// normalization is needed - if any child is an Array, we flatten the whole
// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
// because functional components already normalize their own children.
function simpleNormalizeChildren (children) {
  for (var i = 0; i < children.length; i++) {
    if (Array.isArray(children[i])) {
      return Array.prototype.concat.apply([], children)
    }
  }
  return children
}

// 2. When the children contains constructs that always generated nested Arrays,
// e.g. <template>, <slot>, v-for, or when the children is provided by user
// with hand-written render functions / JSX. In such cases a full normalization
// is needed to cater to all possible types of children values.
function normalizeChildren (children) {
  return isPrimitive(children)
    ? [createTextVNode(children)]
    : Array.isArray(children)
      ? normalizeArrayChildren(children)
      : undefined
}

function isTextNode (node) {
  return isDef(node) && isDef(node.text) && isFalse(node.isComment)
}

function normalizeArrayChildren (children, nestedIndex) {
  var res = [];
  var i, c, lastIndex, last;
  for (i = 0; i < children.length; i++) {
    c = children[i];
    if (isUndef(c) || typeof c === 'boolean') { continue }
    lastIndex = res.length - 1;
    last = res[lastIndex];
    //  nested
    if (Array.isArray(c)) {
      if (c.length > 0) {
        c = normalizeArrayChildren(c, ((nestedIndex || '') + "_" + i));
        // merge adjacent text nodes
        if (isTextNode(c[0]) && isTextNode(last)) {
          res[lastIndex] = createTextVNode(last.text + (c[0]).text);
          c.shift();
        }
        res.push.apply(res, c);
      }
    } else if (isPrimitive(c)) {
      if (isTextNode(last)) {
        // merge adjacent text nodes
        // this is necessary for SSR hydration because text nodes are
        // essentially merged when rendered to HTML strings
        res[lastIndex] = createTextVNode(last.text + c);
      } else if (c !== '') {
        // convert primitive to vnode
        res.push(createTextVNode(c));
      }
    } else {
      if (isTextNode(c) && isTextNode(last)) {
        // merge adjacent text nodes
        res[lastIndex] = createTextVNode(last.text + c.text);
      } else {
        // default key for nested array children (likely generated by v-for)
        if (isTrue(children._isVList) &&
          isDef(c.tag) &&
          isUndef(c.key) &&
          isDef(nestedIndex)) {
          c.key = "__vlist" + nestedIndex + "_" + i + "__";
        }
        res.push(c);
      }
    }
  }
  return res
}

/*  */

function initProvide (vm) {
  var provide = vm.$options.provide;
  if (provide) {
    vm._provided = typeof provide === 'function'
      ? provide.call(vm)
      : provide;
  }
}

function initInjections (vm) {
  var result = resolveInject(vm.$options.inject, vm);
  if (result) {
    toggleObserving(false);
    Object.keys(result).forEach(function (key) {
      /* istanbul ignore else */
      if (true) {
        defineReactive$$1(vm, key, result[key], function () {
          warn(
            "Avoid mutating an injected value directly since the changes will be " +
            "overwritten whenever the provided component re-renders. " +
            "injection being mutated: \"" + key + "\"",
            vm
          );
        });
      } else {}
    });
    toggleObserving(true);
  }
}

function resolveInject (inject, vm) {
  if (inject) {
    // inject is :any because flow is not smart enough to figure out cached
    var result = Object.create(null);
    var keys = hasSymbol
      ? Reflect.ownKeys(inject)
      : Object.keys(inject);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      // #6574 in case the inject object is observed...
      if (key === '__ob__') { continue }
      var provideKey = inject[key].from;
      var source = vm;
      while (source) {
        if (source._provided && hasOwn(source._provided, provideKey)) {
          result[key] = source._provided[provideKey];
          break
        }
        source = source.$parent;
      }
      if (!source) {
        if ('default' in inject[key]) {
          var provideDefault = inject[key].default;
          result[key] = typeof provideDefault === 'function'
            ? provideDefault.call(vm)
            : provideDefault;
        } else if (true) {
          warn(("Injection \"" + key + "\" not found"), vm);
        }
      }
    }
    return result
  }
}

/*  */



/**
 * Runtime helper for resolving raw children VNodes into a slot object.
 */
function resolveSlots (
  children,
  context
) {
  if (!children || !children.length) {
    return {}
  }
  var slots = {};
  for (var i = 0, l = children.length; i < l; i++) {
    var child = children[i];
    var data = child.data;
    // remove slot attribute if the node is resolved as a Vue slot node
    if (data && data.attrs && data.attrs.slot) {
      delete data.attrs.slot;
    }
    // named slots should only be respected if the vnode was rendered in the
    // same context.
    if ((child.context === context || child.fnContext === context) &&
      data && data.slot != null
    ) {
      var name = data.slot;
      var slot = (slots[name] || (slots[name] = []));
      if (child.tag === 'template') {
        slot.push.apply(slot, child.children || []);
      } else {
        slot.push(child);
      }
    } else {
      (slots.default || (slots.default = [])).push(child);
    }
  }
  // ignore slots that contains only whitespace
  for (var name$1 in slots) {
    if (slots[name$1].every(isWhitespace)) {
      delete slots[name$1];
    }
  }
  return slots
}

function isWhitespace (node) {
  return (node.isComment && !node.asyncFactory) || node.text === ' '
}

/*  */

function isAsyncPlaceholder (node) {
  return node.isComment && node.asyncFactory
}

/*  */

function normalizeScopedSlots (
  slots,
  normalSlots,
  prevSlots
) {
  var res;
  var hasNormalSlots = Object.keys(normalSlots).length > 0;
  var isStable = slots ? !!slots.$stable : !hasNormalSlots;
  var key = slots && slots.$key;
  if (!slots) {
    res = {};
  } else if (slots._normalized) {
    // fast path 1: child component re-render only, parent did not change
    return slots._normalized
  } else if (
    isStable &&
    prevSlots &&
    prevSlots !== emptyObject &&
    key === prevSlots.$key &&
    !hasNormalSlots &&
    !prevSlots.$hasNormal
  ) {
    // fast path 2: stable scoped slots w/ no normal slots to proxy,
    // only need to normalize once
    return prevSlots
  } else {
    res = {};
    for (var key$1 in slots) {
      if (slots[key$1] && key$1[0] !== '$') {
        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);
      }
    }
  }
  // expose normal slots on scopedSlots
  for (var key$2 in normalSlots) {
    if (!(key$2 in res)) {
      res[key$2] = proxyNormalSlot(normalSlots, key$2);
    }
  }
  // avoriaz seems to mock a non-extensible $scopedSlots object
  // and when that is passed down this would cause an error
  if (slots && Object.isExtensible(slots)) {
    (slots)._normalized = res;
  }
  def(res, '$stable', isStable);
  def(res, '$key', key);
  def(res, '$hasNormal', hasNormalSlots);
  return res
}

function normalizeScopedSlot(normalSlots, key, fn) {
  var normalized = function () {
    var res = arguments.length ? fn.apply(null, arguments) : fn({});
    res = res && typeof res === 'object' && !Array.isArray(res)
      ? [res] // single vnode
      : normalizeChildren(res);
    var vnode = res && res[0];
    return res && (
      !vnode ||
      (res.length === 1 && vnode.isComment && !isAsyncPlaceholder(vnode)) // #9658, #10391
    ) ? undefined
      : res
  };
  // this is a slot using the new v-slot syntax without scope. although it is
  // compiled as a scoped slot, render fn users would expect it to be present
  // on this.$slots because the usage is semantically a normal slot.
  if (fn.proxy) {
    Object.defineProperty(normalSlots, key, {
      get: normalized,
      enumerable: true,
      configurable: true
    });
  }
  return normalized
}

function proxyNormalSlot(slots, key) {
  return function () { return slots[key]; }
}

/*  */

/**
 * Runtime helper for rendering v-for lists.
 */
function renderList (
  val,
  render
) {
  var ret, i, l, keys, key;
  if (Array.isArray(val) || typeof val === 'string') {
    ret = new Array(val.length);
    for (i = 0, l = val.length; i < l; i++) {
      ret[i] = render(val[i], i);
    }
  } else if (typeof val === 'number') {
    ret = new Array(val);
    for (i = 0; i < val; i++) {
      ret[i] = render(i + 1, i);
    }
  } else if (isObject(val)) {
    if (hasSymbol && val[Symbol.iterator]) {
      ret = [];
      var iterator = val[Symbol.iterator]();
      var result = iterator.next();
      while (!result.done) {
        ret.push(render(result.value, ret.length));
        result = iterator.next();
      }
    } else {
      keys = Object.keys(val);
      ret = new Array(keys.length);
      for (i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        ret[i] = render(val[key], key, i);
      }
    }
  }
  if (!isDef(ret)) {
    ret = [];
  }
  (ret)._isVList = true;
  return ret
}

/*  */

/**
 * Runtime helper for rendering <slot>
 */
function renderSlot (
  name,
  fallbackRender,
  props,
  bindObject
) {
  var scopedSlotFn = this.$scopedSlots[name];
  var nodes;
  if (scopedSlotFn) {
    // scoped slot
    props = props || {};
    if (bindObject) {
      if ( true && !isObject(bindObject)) {
        warn('slot v-bind without argument expects an Object', this);
      }
      props = extend(extend({}, bindObject), props);
    }
    nodes =
      scopedSlotFn(props) ||
      (typeof fallbackRender === 'function' ? fallbackRender() : fallbackRender);
  } else {
    nodes =
      this.$slots[name] ||
      (typeof fallbackRender === 'function' ? fallbackRender() : fallbackRender);
  }

  var target = props && props.slot;
  if (target) {
    return this.$createElement('template', { slot: target }, nodes)
  } else {
    return nodes
  }
}

/*  */

/**
 * Runtime helper for resolving filters
 */
function resolveFilter (id) {
  return resolveAsset(this.$options, 'filters', id, true) || identity
}

/*  */

function isKeyNotMatch (expect, actual) {
  if (Array.isArray(expect)) {
    return expect.indexOf(actual) === -1
  } else {
    return expect !== actual
  }
}

/**
 * Runtime helper for checking keyCodes from config.
 * exposed as Vue.prototype._k
 * passing in eventKeyName as last argument separately for backwards compat
 */
function checkKeyCodes (
  eventKeyCode,
  key,
  builtInKeyCode,
  eventKeyName,
  builtInKeyName
) {
  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;
  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {
    return isKeyNotMatch(builtInKeyName, eventKeyName)
  } else if (mappedKeyCode) {
    return isKeyNotMatch(mappedKeyCode, eventKeyCode)
  } else if (eventKeyName) {
    return hyphenate(eventKeyName) !== key
  }
  return eventKeyCode === undefined
}

/*  */

/**
 * Runtime helper for merging v-bind="object" into a VNode's data.
 */
function bindObjectProps (
  data,
  tag,
  value,
  asProp,
  isSync
) {
  if (value) {
    if (!isObject(value)) {
       true && warn(
        'v-bind without argument expects an Object or Array value',
        this
      );
    } else {
      if (Array.isArray(value)) {
        value = toObject(value);
      }
      var hash;
      var loop = function ( key ) {
        if (
          key === 'class' ||
          key === 'style' ||
          isReservedAttribute(key)
        ) {
          hash = data;
        } else {
          var type = data.attrs && data.attrs.type;
          hash = asProp || config.mustUseProp(tag, type, key)
            ? data.domProps || (data.domProps = {})
            : data.attrs || (data.attrs = {});
        }
        var camelizedKey = camelize(key);
        var hyphenatedKey = hyphenate(key);
        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {
          hash[key] = value[key];

          if (isSync) {
            var on = data.on || (data.on = {});
            on[("update:" + key)] = function ($event) {
              value[key] = $event;
            };
          }
        }
      };

      for (var key in value) loop( key );
    }
  }
  return data
}

/*  */

/**
 * Runtime helper for rendering static trees.
 */
function renderStatic (
  index,
  isInFor
) {
  var cached = this._staticTrees || (this._staticTrees = []);
  var tree = cached[index];
  // if has already-rendered static tree and not inside v-for,
  // we can reuse the same tree.
  if (tree && !isInFor) {
    return tree
  }
  // otherwise, render a fresh tree.
  tree = cached[index] = this.$options.staticRenderFns[index].call(
    this._renderProxy,
    null,
    this // for render fns generated for functional component templates
  );
  markStatic(tree, ("__static__" + index), false);
  return tree
}

/**
 * Runtime helper for v-once.
 * Effectively it means marking the node as static with a unique key.
 */
function markOnce (
  tree,
  index,
  key
) {
  markStatic(tree, ("__once__" + index + (key ? ("_" + key) : "")), true);
  return tree
}

function markStatic (
  tree,
  key,
  isOnce
) {
  if (Array.isArray(tree)) {
    for (var i = 0; i < tree.length; i++) {
      if (tree[i] && typeof tree[i] !== 'string') {
        markStaticNode(tree[i], (key + "_" + i), isOnce);
      }
    }
  } else {
    markStaticNode(tree, key, isOnce);
  }
}

function markStaticNode (node, key, isOnce) {
  node.isStatic = true;
  node.key = key;
  node.isOnce = isOnce;
}

/*  */

function bindObjectListeners (data, value) {
  if (value) {
    if (!isPlainObject(value)) {
       true && warn(
        'v-on without argument expects an Object value',
        this
      );
    } else {
      var on = data.on = data.on ? extend({}, data.on) : {};
      for (var key in value) {
        var existing = on[key];
        var ours = value[key];
        on[key] = existing ? [].concat(existing, ours) : ours;
      }
    }
  }
  return data
}

/*  */

function resolveScopedSlots (
  fns, // see flow/vnode
  res,
  // the following are added in 2.6
  hasDynamicKeys,
  contentHashKey
) {
  res = res || { $stable: !hasDynamicKeys };
  for (var i = 0; i < fns.length; i++) {
    var slot = fns[i];
    if (Array.isArray(slot)) {
      resolveScopedSlots(slot, res, hasDynamicKeys);
    } else if (slot) {
      // marker for reverse proxying v-slot without scope on this.$slots
      if (slot.proxy) {
        slot.fn.proxy = true;
      }
      res[slot.key] = slot.fn;
    }
  }
  if (contentHashKey) {
    (res).$key = contentHashKey;
  }
  return res
}

/*  */

function bindDynamicKeys (baseObj, values) {
  for (var i = 0; i < values.length; i += 2) {
    var key = values[i];
    if (typeof key === 'string' && key) {
      baseObj[values[i]] = values[i + 1];
    } else if ( true && key !== '' && key !== null) {
      // null is a special value for explicitly removing a binding
      warn(
        ("Invalid value for dynamic directive argument (expected string or null): " + key),
        this
      );
    }
  }
  return baseObj
}

// helper to dynamically append modifier runtime markers to event names.
// ensure only append when value is already string, otherwise it will be cast
// to string and cause the type check to miss.
function prependModifier (value, symbol) {
  return typeof value === 'string' ? symbol + value : value
}

/*  */

function installRenderHelpers (target) {
  target._o = markOnce;
  target._n = toNumber;
  target._s = toString;
  target._l = renderList;
  target._t = renderSlot;
  target._q = looseEqual;
  target._i = looseIndexOf;
  target._m = renderStatic;
  target._f = resolveFilter;
  target._k = checkKeyCodes;
  target._b = bindObjectProps;
  target._v = createTextVNode;
  target._e = createEmptyVNode;
  target._u = resolveScopedSlots;
  target._g = bindObjectListeners;
  target._d = bindDynamicKeys;
  target._p = prependModifier;
}

/*  */

function FunctionalRenderContext (
  data,
  props,
  children,
  parent,
  Ctor
) {
  var this$1 = this;

  var options = Ctor.options;
  // ensure the createElement function in functional components
  // gets a unique context - this is necessary for correct named slot check
  var contextVm;
  if (hasOwn(parent, '_uid')) {
    contextVm = Object.create(parent);
    // $flow-disable-line
    contextVm._original = parent;
  } else {
    // the context vm passed in is a functional context as well.
    // in this case we want to make sure we are able to get a hold to the
    // real context instance.
    contextVm = parent;
    // $flow-disable-line
    parent = parent._original;
  }
  var isCompiled = isTrue(options._compiled);
  var needNormalization = !isCompiled;

  this.data = data;
  this.props = props;
  this.children = children;
  this.parent = parent;
  this.listeners = data.on || emptyObject;
  this.injections = resolveInject(options.inject, parent);
  this.slots = function () {
    if (!this$1.$slots) {
      normalizeScopedSlots(
        data.scopedSlots,
        this$1.$slots = resolveSlots(children, parent)
      );
    }
    return this$1.$slots
  };

  Object.defineProperty(this, 'scopedSlots', ({
    enumerable: true,
    get: function get () {
      return normalizeScopedSlots(data.scopedSlots, this.slots())
    }
  }));

  // support for compiled functional template
  if (isCompiled) {
    // exposing $options for renderStatic()
    this.$options = options;
    // pre-resolve slots for renderSlot()
    this.$slots = this.slots();
    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);
  }

  if (options._scopeId) {
    this._c = function (a, b, c, d) {
      var vnode = createElement(contextVm, a, b, c, d, needNormalization);
      if (vnode && !Array.isArray(vnode)) {
        vnode.fnScopeId = options._scopeId;
        vnode.fnContext = parent;
      }
      return vnode
    };
  } else {
    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };
  }
}

installRenderHelpers(FunctionalRenderContext.prototype);

function createFunctionalComponent (
  Ctor,
  propsData,
  data,
  contextVm,
  children
) {
  var options = Ctor.options;
  var props = {};
  var propOptions = options.props;
  if (isDef(propOptions)) {
    for (var key in propOptions) {
      props[key] = validateProp(key, propOptions, propsData || emptyObject);
    }
  } else {
    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }
    if (isDef(data.props)) { mergeProps(props, data.props); }
  }

  var renderContext = new FunctionalRenderContext(
    data,
    props,
    children,
    contextVm,
    Ctor
  );

  var vnode = options.render.call(null, renderContext._c, renderContext);

  if (vnode instanceof VNode) {
    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)
  } else if (Array.isArray(vnode)) {
    var vnodes = normalizeChildren(vnode) || [];
    var res = new Array(vnodes.length);
    for (var i = 0; i < vnodes.length; i++) {
      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);
    }
    return res
  }
}

function cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {
  // #7817 clone node before setting fnContext, otherwise if the node is reused
  // (e.g. it was from a cached normal slot) the fnContext causes named slots
  // that should not be matched to match.
  var clone = cloneVNode(vnode);
  clone.fnContext = contextVm;
  clone.fnOptions = options;
  if (true) {
    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;
  }
  if (data.slot) {
    (clone.data || (clone.data = {})).slot = data.slot;
  }
  return clone
}

function mergeProps (to, from) {
  for (var key in from) {
    to[camelize(key)] = from[key];
  }
}

/*  */

/*  */

/*  */

/*  */

// inline hooks to be invoked on component VNodes during patch
var componentVNodeHooks = {
  init: function init (vnode, hydrating) {
    if (
      vnode.componentInstance &&
      !vnode.componentInstance._isDestroyed &&
      vnode.data.keepAlive
    ) {
      // kept-alive components, treat as a patch
      var mountedNode = vnode; // work around flow
      componentVNodeHooks.prepatch(mountedNode, mountedNode);
    } else {
      var child = vnode.componentInstance = createComponentInstanceForVnode(
        vnode,
        activeInstance
      );
      child.$mount(hydrating ? vnode.elm : undefined, hydrating);
    }
  },

  prepatch: function prepatch (oldVnode, vnode) {
    var options = vnode.componentOptions;
    var child = vnode.componentInstance = oldVnode.componentInstance;
    updateChildComponent(
      child,
      options.propsData, // updated props
      options.listeners, // updated listeners
      vnode, // new parent vnode
      options.children // new children
    );
  },

  insert: function insert (vnode) {
    var context = vnode.context;
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isMounted) {
      componentInstance._isMounted = true;
      callHook(componentInstance, 'mounted');
    }
    if (vnode.data.keepAlive) {
      if (context._isMounted) {
        // vue-router#1212
        // During updates, a kept-alive component's child components may
        // change, so directly walking the tree here may call activated hooks
        // on incorrect children. Instead we push them into a queue which will
        // be processed after the whole patch process ended.
        queueActivatedComponent(componentInstance);
      } else {
        activateChildComponent(componentInstance, true /* direct */);
      }
    }
  },

  destroy: function destroy (vnode) {
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isDestroyed) {
      if (!vnode.data.keepAlive) {
        componentInstance.$destroy();
      } else {
        deactivateChildComponent(componentInstance, true /* direct */);
      }
    }
  }
};

var hooksToMerge = Object.keys(componentVNodeHooks);

function createComponent (
  Ctor,
  data,
  context,
  children,
  tag
) {
  if (isUndef(Ctor)) {
    return
  }

  var baseCtor = context.$options._base;

  // plain options object: turn it into a constructor
  if (isObject(Ctor)) {
    Ctor = baseCtor.extend(Ctor);
  }

  // if at this stage it's not a constructor or an async component factory,
  // reject.
  if (typeof Ctor !== 'function') {
    if (true) {
      warn(("Invalid Component definition: " + (String(Ctor))), context);
    }
    return
  }

  // async component
  var asyncFactory;
  if (isUndef(Ctor.cid)) {
    asyncFactory = Ctor;
    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);
    if (Ctor === undefined) {
      // return a placeholder node for async component, which is rendered
      // as a comment node but preserves all the raw information for the node.
      // the information will be used for async server-rendering and hydration.
      return createAsyncPlaceholder(
        asyncFactory,
        data,
        context,
        children,
        tag
      )
    }
  }

  data = data || {};

  // resolve constructor options in case global mixins are applied after
  // component constructor creation
  resolveConstructorOptions(Ctor);

  // transform component v-model data into props & events
  if (isDef(data.model)) {
    transformModel(Ctor.options, data);
  }

  // extract props
  var propsData = extractPropsFromVNodeData(data, Ctor, tag);

  // functional component
  if (isTrue(Ctor.options.functional)) {
    return createFunctionalComponent(Ctor, propsData, data, context, children)
  }

  // extract listeners, since these needs to be treated as
  // child component listeners instead of DOM listeners
  var listeners = data.on;
  // replace with listeners with .native modifier
  // so it gets processed during parent component patch.
  data.on = data.nativeOn;

  if (isTrue(Ctor.options.abstract)) {
    // abstract components do not keep anything
    // other than props & listeners & slot

    // work around flow
    var slot = data.slot;
    data = {};
    if (slot) {
      data.slot = slot;
    }
  }

  // install component management hooks onto the placeholder node
  installComponentHooks(data);

  // return a placeholder vnode
  var name = Ctor.options.name || tag;
  var vnode = new VNode(
    ("vue-component-" + (Ctor.cid) + (name ? ("-" + name) : '')),
    data, undefined, undefined, undefined, context,
    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },
    asyncFactory
  );

  return vnode
}

function createComponentInstanceForVnode (
  // we know it's MountedComponentVNode but flow doesn't
  vnode,
  // activeInstance in lifecycle state
  parent
) {
  var options = {
    _isComponent: true,
    _parentVnode: vnode,
    parent: parent
  };
  // check inline-template render functions
  var inlineTemplate = vnode.data.inlineTemplate;
  if (isDef(inlineTemplate)) {
    options.render = inlineTemplate.render;
    options.staticRenderFns = inlineTemplate.staticRenderFns;
  }
  return new vnode.componentOptions.Ctor(options)
}

function installComponentHooks (data) {
  var hooks = data.hook || (data.hook = {});
  for (var i = 0; i < hooksToMerge.length; i++) {
    var key = hooksToMerge[i];
    var existing = hooks[key];
    var toMerge = componentVNodeHooks[key];
    if (existing !== toMerge && !(existing && existing._merged)) {
      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;
    }
  }
}

function mergeHook$1 (f1, f2) {
  var merged = function (a, b) {
    // flow complains about extra args which is why we use any
    f1(a, b);
    f2(a, b);
  };
  merged._merged = true;
  return merged
}

// transform component v-model info (value and callback) into
// prop and event handler respectively.
function transformModel (options, data) {
  var prop = (options.model && options.model.prop) || 'value';
  var event = (options.model && options.model.event) || 'input'
  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;
  var on = data.on || (data.on = {});
  var existing = on[event];
  var callback = data.model.callback;
  if (isDef(existing)) {
    if (
      Array.isArray(existing)
        ? existing.indexOf(callback) === -1
        : existing !== callback
    ) {
      on[event] = [callback].concat(existing);
    }
  } else {
    on[event] = callback;
  }
}

/*  */

var SIMPLE_NORMALIZE = 1;
var ALWAYS_NORMALIZE = 2;

// wrapper function for providing a more flexible interface
// without getting yelled at by flow
function createElement (
  context,
  tag,
  data,
  children,
  normalizationType,
  alwaysNormalize
) {
  if (Array.isArray(data) || isPrimitive(data)) {
    normalizationType = children;
    children = data;
    data = undefined;
  }
  if (isTrue(alwaysNormalize)) {
    normalizationType = ALWAYS_NORMALIZE;
  }
  return _createElement(context, tag, data, children, normalizationType)
}

function _createElement (
  context,
  tag,
  data,
  children,
  normalizationType
) {
  if (isDef(data) && isDef((data).__ob__)) {
     true && warn(
      "Avoid using observed data object as vnode data: " + (JSON.stringify(data)) + "\n" +
      'Always create fresh vnode data objects in each render!',
      context
    );
    return createEmptyVNode()
  }
  // object syntax in v-bind
  if (isDef(data) && isDef(data.is)) {
    tag = data.is;
  }
  if (!tag) {
    // in case of component :is set to falsy value
    return createEmptyVNode()
  }
  // warn against non-primitive key
  if ( true &&
    isDef(data) && isDef(data.key) && !isPrimitive(data.key)
  ) {
    {
      warn(
        'Avoid using non-primitive value as key, ' +
        'use string/number value instead.',
        context
      );
    }
  }
  // support single function children as default scoped slot
  if (Array.isArray(children) &&
    typeof children[0] === 'function'
  ) {
    data = data || {};
    data.scopedSlots = { default: children[0] };
    children.length = 0;
  }
  if (normalizationType === ALWAYS_NORMALIZE) {
    children = normalizeChildren(children);
  } else if (normalizationType === SIMPLE_NORMALIZE) {
    children = simpleNormalizeChildren(children);
  }
  var vnode, ns;
  if (typeof tag === 'string') {
    var Ctor;
    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);
    if (config.isReservedTag(tag)) {
      // platform built-in elements
      if ( true && isDef(data) && isDef(data.nativeOn) && data.tag !== 'component') {
        warn(
          ("The .native modifier for v-on is only valid on components but it was used on <" + tag + ">."),
          context
        );
      }
      vnode = new VNode(
        config.parsePlatformTagName(tag), data, children,
        undefined, undefined, context
      );
    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
      // component
      vnode = createComponent(Ctor, data, context, children, tag);
    } else {
      // unknown or unlisted namespaced elements
      // check at runtime because it may get assigned a namespace when its
      // parent normalizes children
      vnode = new VNode(
        tag, data, children,
        undefined, undefined, context
      );
    }
  } else {
    // direct component options / constructor
    vnode = createComponent(tag, data, context, children);
  }
  if (Array.isArray(vnode)) {
    return vnode
  } else if (isDef(vnode)) {
    if (isDef(ns)) { applyNS(vnode, ns); }
    if (isDef(data)) { registerDeepBindings(data); }
    return vnode
  } else {
    return createEmptyVNode()
  }
}

function applyNS (vnode, ns, force) {
  vnode.ns = ns;
  if (vnode.tag === 'foreignObject') {
    // use default namespace inside foreignObject
    ns = undefined;
    force = true;
  }
  if (isDef(vnode.children)) {
    for (var i = 0, l = vnode.children.length; i < l; i++) {
      var child = vnode.children[i];
      if (isDef(child.tag) && (
        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {
        applyNS(child, ns, force);
      }
    }
  }
}

// ref #5318
// necessary to ensure parent re-render when deep bindings like :style and
// :class are used on slot nodes
function registerDeepBindings (data) {
  if (isObject(data.style)) {
    traverse(data.style);
  }
  if (isObject(data.class)) {
    traverse(data.class);
  }
}

/*  */

function initRender (vm) {
  vm._vnode = null; // the root of the child tree
  vm._staticTrees = null; // v-once cached trees
  var options = vm.$options;
  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree
  var renderContext = parentVnode && parentVnode.context;
  vm.$slots = resolveSlots(options._renderChildren, renderContext);
  vm.$scopedSlots = emptyObject;
  // bind the createElement fn to this instance
  // so that we get proper render context inside it.
  // args order: tag, data, children, normalizationType, alwaysNormalize
  // internal version is used by render functions compiled from templates
  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };
  // normalization is always applied for the public version, used in
  // user-written render functions.
  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };

  // $attrs & $listeners are exposed for easier HOC creation.
  // they need to be reactive so that HOCs using them are always updated
  var parentData = parentVnode && parentVnode.data;

  /* istanbul ignore else */
  if (true) {
    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {
      !isUpdatingChildComponent && warn("$attrs is readonly.", vm);
    }, true);
    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {
      !isUpdatingChildComponent && warn("$listeners is readonly.", vm);
    }, true);
  } else {}
}

var currentRenderingInstance = null;

function renderMixin (Vue) {
  // install runtime convenience helpers
  installRenderHelpers(Vue.prototype);

  Vue.prototype.$nextTick = function (fn) {
    return nextTick(fn, this)
  };

  Vue.prototype._render = function () {
    var vm = this;
    var ref = vm.$options;
    var render = ref.render;
    var _parentVnode = ref._parentVnode;

    if (_parentVnode) {
      vm.$scopedSlots = normalizeScopedSlots(
        _parentVnode.data.scopedSlots,
        vm.$slots,
        vm.$scopedSlots
      );
    }

    // set parent vnode. this allows render functions to have access
    // to the data on the placeholder node.
    vm.$vnode = _parentVnode;
    // render self
    var vnode;
    try {
      // There's no need to maintain a stack because all render fns are called
      // separately from one another. Nested component's render fns are called
      // when parent component is patched.
      currentRenderingInstance = vm;
      vnode = render.call(vm._renderProxy, vm.$createElement);
    } catch (e) {
      handleError(e, vm, "render");
      // return error render result,
      // or previous vnode to prevent render error causing blank component
      /* istanbul ignore else */
      if ( true && vm.$options.renderError) {
        try {
          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);
        } catch (e) {
          handleError(e, vm, "renderError");
          vnode = vm._vnode;
        }
      } else {
        vnode = vm._vnode;
      }
    } finally {
      currentRenderingInstance = null;
    }
    // if the returned array contains only a single node, allow it
    if (Array.isArray(vnode) && vnode.length === 1) {
      vnode = vnode[0];
    }
    // return empty vnode in case the render function errored out
    if (!(vnode instanceof VNode)) {
      if ( true && Array.isArray(vnode)) {
        warn(
          'Multiple root nodes returned from render function. Render function ' +
          'should return a single root node.',
          vm
        );
      }
      vnode = createEmptyVNode();
    }
    // set parent
    vnode.parent = _parentVnode;
    return vnode
  };
}

/*  */

function ensureCtor (comp, base) {
  if (
    comp.__esModule ||
    (hasSymbol && comp[Symbol.toStringTag] === 'Module')
  ) {
    comp = comp.default;
  }
  return isObject(comp)
    ? base.extend(comp)
    : comp
}

function createAsyncPlaceholder (
  factory,
  data,
  context,
  children,
  tag
) {
  var node = createEmptyVNode();
  node.asyncFactory = factory;
  node.asyncMeta = { data: data, context: context, children: children, tag: tag };
  return node
}

function resolveAsyncComponent (
  factory,
  baseCtor
) {
  if (isTrue(factory.error) && isDef(factory.errorComp)) {
    return factory.errorComp
  }

  if (isDef(factory.resolved)) {
    return factory.resolved
  }

  var owner = currentRenderingInstance;
  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {
    // already pending
    factory.owners.push(owner);
  }

  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
    return factory.loadingComp
  }

  if (owner && !isDef(factory.owners)) {
    var owners = factory.owners = [owner];
    var sync = true;
    var timerLoading = null;
    var timerTimeout = null

    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });

    var forceRender = function (renderCompleted) {
      for (var i = 0, l = owners.length; i < l; i++) {
        (owners[i]).$forceUpdate();
      }

      if (renderCompleted) {
        owners.length = 0;
        if (timerLoading !== null) {
          clearTimeout(timerLoading);
          timerLoading = null;
        }
        if (timerTimeout !== null) {
          clearTimeout(timerTimeout);
          timerTimeout = null;
        }
      }
    };

    var resolve = once(function (res) {
      // cache resolved
      factory.resolved = ensureCtor(res, baseCtor);
      // invoke callbacks only if this is not a synchronous resolve
      // (async resolves are shimmed as synchronous during SSR)
      if (!sync) {
        forceRender(true);
      } else {
        owners.length = 0;
      }
    });

    var reject = once(function (reason) {
       true && warn(
        "Failed to resolve async component: " + (String(factory)) +
        (reason ? ("\nReason: " + reason) : '')
      );
      if (isDef(factory.errorComp)) {
        factory.error = true;
        forceRender(true);
      }
    });

    var res = factory(resolve, reject);

    if (isObject(res)) {
      if (isPromise(res)) {
        // () => Promise
        if (isUndef(factory.resolved)) {
          res.then(resolve, reject);
        }
      } else if (isPromise(res.component)) {
        res.component.then(resolve, reject);

        if (isDef(res.error)) {
          factory.errorComp = ensureCtor(res.error, baseCtor);
        }

        if (isDef(res.loading)) {
          factory.loadingComp = ensureCtor(res.loading, baseCtor);
          if (res.delay === 0) {
            factory.loading = true;
          } else {
            timerLoading = setTimeout(function () {
              timerLoading = null;
              if (isUndef(factory.resolved) && isUndef(factory.error)) {
                factory.loading = true;
                forceRender(false);
              }
            }, res.delay || 200);
          }
        }

        if (isDef(res.timeout)) {
          timerTimeout = setTimeout(function () {
            timerTimeout = null;
            if (isUndef(factory.resolved)) {
              reject(
                 true
                  ? ("timeout (" + (res.timeout) + "ms)")
                  : 0
              );
            }
          }, res.timeout);
        }
      }
    }

    sync = false;
    // return in case resolved synchronously
    return factory.loading
      ? factory.loadingComp
      : factory.resolved
  }
}

/*  */

function getFirstComponentChild (children) {
  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      var c = children[i];
      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {
        return c
      }
    }
  }
}

/*  */

/*  */

function initEvents (vm) {
  vm._events = Object.create(null);
  vm._hasHookEvent = false;
  // init parent attached events
  var listeners = vm.$options._parentListeners;
  if (listeners) {
    updateComponentListeners(vm, listeners);
  }
}

var target;

function add (event, fn) {
  target.$on(event, fn);
}

function remove$1 (event, fn) {
  target.$off(event, fn);
}

function createOnceHandler (event, fn) {
  var _target = target;
  return function onceHandler () {
    var res = fn.apply(null, arguments);
    if (res !== null) {
      _target.$off(event, onceHandler);
    }
  }
}

function updateComponentListeners (
  vm,
  listeners,
  oldListeners
) {
  target = vm;
  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);
  target = undefined;
}

function eventsMixin (Vue) {
  var hookRE = /^hook:/;
  Vue.prototype.$on = function (event, fn) {
    var vm = this;
    if (Array.isArray(event)) {
      for (var i = 0, l = event.length; i < l; i++) {
        vm.$on(event[i], fn);
      }
    } else {
      (vm._events[event] || (vm._events[event] = [])).push(fn);
      // optimize hook:event cost by using a boolean flag marked at registration
      // instead of a hash lookup
      if (hookRE.test(event)) {
        vm._hasHookEvent = true;
      }
    }
    return vm
  };

  Vue.prototype.$once = function (event, fn) {
    var vm = this;
    function on () {
      vm.$off(event, on);
      fn.apply(vm, arguments);
    }
    on.fn = fn;
    vm.$on(event, on);
    return vm
  };

  Vue.prototype.$off = function (event, fn) {
    var vm = this;
    // all
    if (!arguments.length) {
      vm._events = Object.create(null);
      return vm
    }
    // array of events
    if (Array.isArray(event)) {
      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {
        vm.$off(event[i$1], fn);
      }
      return vm
    }
    // specific event
    var cbs = vm._events[event];
    if (!cbs) {
      return vm
    }
    if (!fn) {
      vm._events[event] = null;
      return vm
    }
    // specific handler
    var cb;
    var i = cbs.length;
    while (i--) {
      cb = cbs[i];
      if (cb === fn || cb.fn === fn) {
        cbs.splice(i, 1);
        break
      }
    }
    return vm
  };

  Vue.prototype.$emit = function (event) {
    var vm = this;
    if (true) {
      var lowerCaseEvent = event.toLowerCase();
      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
        tip(
          "Event \"" + lowerCaseEvent + "\" is emitted in component " +
          (formatComponentName(vm)) + " but the handler is registered for \"" + event + "\". " +
          "Note that HTML attributes are case-insensitive and you cannot use " +
          "v-on to listen to camelCase events when using in-DOM templates. " +
          "You should probably use \"" + (hyphenate(event)) + "\" instead of \"" + event + "\"."
        );
      }
    }
    var cbs = vm._events[event];
    if (cbs) {
      cbs = cbs.length > 1 ? toArray(cbs) : cbs;
      var args = toArray(arguments, 1);
      var info = "event handler for \"" + event + "\"";
      for (var i = 0, l = cbs.length; i < l; i++) {
        invokeWithErrorHandling(cbs[i], vm, args, vm, info);
      }
    }
    return vm
  };
}

/*  */

var activeInstance = null;
var isUpdatingChildComponent = false;

function setActiveInstance(vm) {
  var prevActiveInstance = activeInstance;
  activeInstance = vm;
  return function () {
    activeInstance = prevActiveInstance;
  }
}

function initLifecycle (vm) {
  var options = vm.$options;

  // locate first non-abstract parent
  var parent = options.parent;
  if (parent && !options.abstract) {
    while (parent.$options.abstract && parent.$parent) {
      parent = parent.$parent;
    }
    parent.$children.push(vm);
  }

  vm.$parent = parent;
  vm.$root = parent ? parent.$root : vm;

  vm.$children = [];
  vm.$refs = {};

  vm._watcher = null;
  vm._inactive = null;
  vm._directInactive = false;
  vm._isMounted = false;
  vm._isDestroyed = false;
  vm._isBeingDestroyed = false;
}

function lifecycleMixin (Vue) {
  Vue.prototype._update = function (vnode, hydrating) {
    var vm = this;
    var prevEl = vm.$el;
    var prevVnode = vm._vnode;
    var restoreActiveInstance = setActiveInstance(vm);
    vm._vnode = vnode;
    // Vue.prototype.__patch__ is injected in entry points
    // based on the rendering backend used.
    if (!prevVnode) {
      // initial render
      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);
    } else {
      // updates
      vm.$el = vm.__patch__(prevVnode, vnode);
    }
    restoreActiveInstance();
    // update __vue__ reference
    if (prevEl) {
      prevEl.__vue__ = null;
    }
    if (vm.$el) {
      vm.$el.__vue__ = vm;
    }
    // if parent is an HOC, update its $el as well
    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
      vm.$parent.$el = vm.$el;
    }
    // updated hook is called by the scheduler to ensure that children are
    // updated in a parent's updated hook.
  };

  Vue.prototype.$forceUpdate = function () {
    var vm = this;
    if (vm._watcher) {
      vm._watcher.update();
    }
  };

  Vue.prototype.$destroy = function () {
    var vm = this;
    if (vm._isBeingDestroyed) {
      return
    }
    callHook(vm, 'beforeDestroy');
    vm._isBeingDestroyed = true;
    // remove self from parent
    var parent = vm.$parent;
    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
      remove(parent.$children, vm);
    }
    // teardown watchers
    if (vm._watcher) {
      vm._watcher.teardown();
    }
    var i = vm._watchers.length;
    while (i--) {
      vm._watchers[i].teardown();
    }
    // remove reference from data ob
    // frozen object may not have observer.
    if (vm._data.__ob__) {
      vm._data.__ob__.vmCount--;
    }
    // call the last hook...
    vm._isDestroyed = true;
    // invoke destroy hooks on current rendered tree
    vm.__patch__(vm._vnode, null);
    // fire destroyed hook
    callHook(vm, 'destroyed');
    // turn off all instance listeners.
    vm.$off();
    // remove __vue__ reference
    if (vm.$el) {
      vm.$el.__vue__ = null;
    }
    // release circular reference (#6759)
    if (vm.$vnode) {
      vm.$vnode.parent = null;
    }
  };
}

function mountComponent (
  vm,
  el,
  hydrating
) {
  vm.$el = el;
  if (!vm.$options.render) {
    vm.$options.render = createEmptyVNode;
    if (true) {
      /* istanbul ignore if */
      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||
        vm.$options.el || el) {
        warn(
          'You are using the runtime-only build of Vue where the template ' +
          'compiler is not available. Either pre-compile the templates into ' +
          'render functions, or use the compiler-included build.',
          vm
        );
      } else {
        warn(
          'Failed to mount component: template or render function not defined.',
          vm
        );
      }
    }
  }
  callHook(vm, 'beforeMount');

  var updateComponent;
  /* istanbul ignore if */
  if ( true && config.performance && mark) {
    updateComponent = function () {
      var name = vm._name;
      var id = vm._uid;
      var startTag = "vue-perf-start:" + id;
      var endTag = "vue-perf-end:" + id;

      mark(startTag);
      var vnode = vm._render();
      mark(endTag);
      measure(("vue " + name + " render"), startTag, endTag);

      mark(startTag);
      vm._update(vnode, hydrating);
      mark(endTag);
      measure(("vue " + name + " patch"), startTag, endTag);
    };
  } else {
    updateComponent = function () {
      vm._update(vm._render(), hydrating);
    };
  }

  // we set this to vm._watcher inside the watcher's constructor
  // since the watcher's initial patch may call $forceUpdate (e.g. inside child
  // component's mounted hook), which relies on vm._watcher being already defined
  new Watcher(vm, updateComponent, noop, {
    before: function before () {
      if (vm._isMounted && !vm._isDestroyed) {
        callHook(vm, 'beforeUpdate');
      }
    }
  }, true /* isRenderWatcher */);
  hydrating = false;

  // manually mounted instance, call mounted on self
  // mounted is called for render-created child components in its inserted hook
  if (vm.$vnode == null) {
    vm._isMounted = true;
    callHook(vm, 'mounted');
  }
  return vm
}

function updateChildComponent (
  vm,
  propsData,
  listeners,
  parentVnode,
  renderChildren
) {
  if (true) {
    isUpdatingChildComponent = true;
  }

  // determine whether component has slot children
  // we need to do this before overwriting $options._renderChildren.

  // check if there are dynamic scopedSlots (hand-written or compiled but with
  // dynamic slot names). Static scoped slots compiled from template has the
  // "$stable" marker.
  var newScopedSlots = parentVnode.data.scopedSlots;
  var oldScopedSlots = vm.$scopedSlots;
  var hasDynamicScopedSlot = !!(
    (newScopedSlots && !newScopedSlots.$stable) ||
    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||
    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key) ||
    (!newScopedSlots && vm.$scopedSlots.$key)
  );

  // Any static slot children from the parent may have changed during parent's
  // update. Dynamic scoped slots may also have changed. In such cases, a forced
  // update is necessary to ensure correctness.
  var needsForceUpdate = !!(
    renderChildren ||               // has new static slots
    vm.$options._renderChildren ||  // has old static slots
    hasDynamicScopedSlot
  );

  vm.$options._parentVnode = parentVnode;
  vm.$vnode = parentVnode; // update vm's placeholder node without re-render

  if (vm._vnode) { // update child tree's parent
    vm._vnode.parent = parentVnode;
  }
  vm.$options._renderChildren = renderChildren;

  // update $attrs and $listeners hash
  // these are also reactive so they may trigger child update if the child
  // used them during render
  vm.$attrs = parentVnode.data.attrs || emptyObject;
  vm.$listeners = listeners || emptyObject;

  // update props
  if (propsData && vm.$options.props) {
    toggleObserving(false);
    var props = vm._props;
    var propKeys = vm.$options._propKeys || [];
    for (var i = 0; i < propKeys.length; i++) {
      var key = propKeys[i];
      var propOptions = vm.$options.props; // wtf flow?
      props[key] = validateProp(key, propOptions, propsData, vm);
    }
    toggleObserving(true);
    // keep a copy of raw propsData
    vm.$options.propsData = propsData;
  }

  // update listeners
  listeners = listeners || emptyObject;
  var oldListeners = vm.$options._parentListeners;
  vm.$options._parentListeners = listeners;
  updateComponentListeners(vm, listeners, oldListeners);

  // resolve slots + force update if has children
  if (needsForceUpdate) {
    vm.$slots = resolveSlots(renderChildren, parentVnode.context);
    vm.$forceUpdate();
  }

  if (true) {
    isUpdatingChildComponent = false;
  }
}

function isInInactiveTree (vm) {
  while (vm && (vm = vm.$parent)) {
    if (vm._inactive) { return true }
  }
  return false
}

function activateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = false;
    if (isInInactiveTree(vm)) {
      return
    }
  } else if (vm._directInactive) {
    return
  }
  if (vm._inactive || vm._inactive === null) {
    vm._inactive = false;
    for (var i = 0; i < vm.$children.length; i++) {
      activateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'activated');
  }
}

function deactivateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = true;
    if (isInInactiveTree(vm)) {
      return
    }
  }
  if (!vm._inactive) {
    vm._inactive = true;
    for (var i = 0; i < vm.$children.length; i++) {
      deactivateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'deactivated');
  }
}

function callHook (vm, hook) {
  // #7573 disable dep collection when invoking lifecycle hooks
  pushTarget();
  var handlers = vm.$options[hook];
  var info = hook + " hook";
  if (handlers) {
    for (var i = 0, j = handlers.length; i < j; i++) {
      invokeWithErrorHandling(handlers[i], vm, null, vm, info);
    }
  }
  if (vm._hasHookEvent) {
    vm.$emit('hook:' + hook);
  }
  popTarget();
}

/*  */

var MAX_UPDATE_COUNT = 100;

var queue = [];
var activatedChildren = [];
var has = {};
var circular = {};
var waiting = false;
var flushing = false;
var index = 0;

/**
 * Reset the scheduler's state.
 */
function resetSchedulerState () {
  index = queue.length = activatedChildren.length = 0;
  has = {};
  if (true) {
    circular = {};
  }
  waiting = flushing = false;
}

// Async edge case #6566 requires saving the timestamp when event listeners are
// attached. However, calling performance.now() has a perf overhead especially
// if the page has thousands of event listeners. Instead, we take a timestamp
// every time the scheduler flushes and use that for all event listeners
// attached during that flush.
var currentFlushTimestamp = 0;

// Async edge case fix requires storing an event listener's attach timestamp.
var getNow = Date.now;

// Determine what event timestamp the browser is using. Annoyingly, the
// timestamp can either be hi-res (relative to page load) or low-res
// (relative to UNIX epoch), so in order to compare time we have to use the
// same timestamp type when saving the flush timestamp.
// All IE versions use low-res event timestamps, and have problematic clock
// implementations (#9632)
if (inBrowser && !isIE) {
  var performance = window.performance;
  if (
    performance &&
    typeof performance.now === 'function' &&
    getNow() > document.createEvent('Event').timeStamp
  ) {
    // if the event timestamp, although evaluated AFTER the Date.now(), is
    // smaller than it, it means the event is using a hi-res timestamp,
    // and we need to use the hi-res version for event listener timestamps as
    // well.
    getNow = function () { return performance.now(); };
  }
}

/**
 * Flush both queues and run the watchers.
 */
function flushSchedulerQueue () {
  currentFlushTimestamp = getNow();
  flushing = true;
  var watcher, id;

  // Sort queue before flush.
  // This ensures that:
  // 1. Components are updated from parent to child. (because parent is always
  //    created before the child)
  // 2. A component's user watchers are run before its render watcher (because
  //    user watchers are created before the render watcher)
  // 3. If a component is destroyed during a parent component's watcher run,
  //    its watchers can be skipped.
  queue.sort(function (a, b) { return a.id - b.id; });

  // do not cache length because more watchers might be pushed
  // as we run existing watchers
  for (index = 0; index < queue.length; index++) {
    watcher = queue[index];
    if (watcher.before) {
      watcher.before();
    }
    id = watcher.id;
    has[id] = null;
    watcher.run();
    // in dev build, check and stop circular updates.
    if ( true && has[id] != null) {
      circular[id] = (circular[id] || 0) + 1;
      if (circular[id] > MAX_UPDATE_COUNT) {
        warn(
          'You may have an infinite update loop ' + (
            watcher.user
              ? ("in watcher with expression \"" + (watcher.expression) + "\"")
              : "in a component render function."
          ),
          watcher.vm
        );
        break
      }
    }
  }

  // keep copies of post queues before resetting state
  var activatedQueue = activatedChildren.slice();
  var updatedQueue = queue.slice();

  resetSchedulerState();

  // call component updated and activated hooks
  callActivatedHooks(activatedQueue);
  callUpdatedHooks(updatedQueue);

  // devtool hook
  /* istanbul ignore if */
  if (devtools && config.devtools) {
    devtools.emit('flush');
  }
}

function callUpdatedHooks (queue) {
  var i = queue.length;
  while (i--) {
    var watcher = queue[i];
    var vm = watcher.vm;
    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {
      callHook(vm, 'updated');
    }
  }
}

/**
 * Queue a kept-alive component that was activated during patch.
 * The queue will be processed after the entire tree has been patched.
 */
function queueActivatedComponent (vm) {
  // setting _inactive to false here so that a render function can
  // rely on checking whether it's in an inactive tree (e.g. router-view)
  vm._inactive = false;
  activatedChildren.push(vm);
}

function callActivatedHooks (queue) {
  for (var i = 0; i < queue.length; i++) {
    queue[i]._inactive = true;
    activateChildComponent(queue[i], true /* true */);
  }
}

/**
 * Push a watcher into the watcher queue.
 * Jobs with duplicate IDs will be skipped unless it's
 * pushed when the queue is being flushed.
 */
function queueWatcher (watcher) {
  var id = watcher.id;
  if (has[id] == null) {
    has[id] = true;
    if (!flushing) {
      queue.push(watcher);
    } else {
      // if already flushing, splice the watcher based on its id
      // if already past its id, it will be run next immediately.
      var i = queue.length - 1;
      while (i > index && queue[i].id > watcher.id) {
        i--;
      }
      queue.splice(i + 1, 0, watcher);
    }
    // queue the flush
    if (!waiting) {
      waiting = true;

      if ( true && !config.async) {
        flushSchedulerQueue();
        return
      }
      nextTick(flushSchedulerQueue);
    }
  }
}

/*  */



var uid$2 = 0;

/**
 * A watcher parses an expression, collects dependencies,
 * and fires callback when the expression value changes.
 * This is used for both the $watch() api and directives.
 */
var Watcher = function Watcher (
  vm,
  expOrFn,
  cb,
  options,
  isRenderWatcher
) {
  this.vm = vm;
  if (isRenderWatcher) {
    vm._watcher = this;
  }
  vm._watchers.push(this);
  // options
  if (options) {
    this.deep = !!options.deep;
    this.user = !!options.user;
    this.lazy = !!options.lazy;
    this.sync = !!options.sync;
    this.before = options.before;
  } else {
    this.deep = this.user = this.lazy = this.sync = false;
  }
  this.cb = cb;
  this.id = ++uid$2; // uid for batching
  this.active = true;
  this.dirty = this.lazy; // for lazy watchers
  this.deps = [];
  this.newDeps = [];
  this.depIds = new _Set();
  this.newDepIds = new _Set();
  this.expression =  true
    ? expOrFn.toString()
    : 0;
  // parse expression for getter
  if (typeof expOrFn === 'function') {
    this.getter = expOrFn;
  } else {
    this.getter = parsePath(expOrFn);
    if (!this.getter) {
      this.getter = noop;
       true && warn(
        "Failed watching path: \"" + expOrFn + "\" " +
        'Watcher only accepts simple dot-delimited paths. ' +
        'For full control, use a function instead.',
        vm
      );
    }
  }
  this.value = this.lazy
    ? undefined
    : this.get();
};

/**
 * Evaluate the getter, and re-collect dependencies.
 */
Watcher.prototype.get = function get () {
  pushTarget(this);
  var value;
  var vm = this.vm;
  try {
    value = this.getter.call(vm, vm);
  } catch (e) {
    if (this.user) {
      handleError(e, vm, ("getter for watcher \"" + (this.expression) + "\""));
    } else {
      throw e
    }
  } finally {
    // "touch" every property so they are all tracked as
    // dependencies for deep watching
    if (this.deep) {
      traverse(value);
    }
    popTarget();
    this.cleanupDeps();
  }
  return value
};

/**
 * Add a dependency to this directive.
 */
Watcher.prototype.addDep = function addDep (dep) {
  var id = dep.id;
  if (!this.newDepIds.has(id)) {
    this.newDepIds.add(id);
    this.newDeps.push(dep);
    if (!this.depIds.has(id)) {
      dep.addSub(this);
    }
  }
};

/**
 * Clean up for dependency collection.
 */
Watcher.prototype.cleanupDeps = function cleanupDeps () {
  var i = this.deps.length;
  while (i--) {
    var dep = this.deps[i];
    if (!this.newDepIds.has(dep.id)) {
      dep.removeSub(this);
    }
  }
  var tmp = this.depIds;
  this.depIds = this.newDepIds;
  this.newDepIds = tmp;
  this.newDepIds.clear();
  tmp = this.deps;
  this.deps = this.newDeps;
  this.newDeps = tmp;
  this.newDeps.length = 0;
};

/**
 * Subscriber interface.
 * Will be called when a dependency changes.
 */
Watcher.prototype.update = function update () {
  /* istanbul ignore else */
  if (this.lazy) {
    this.dirty = true;
  } else if (this.sync) {
    this.run();
  } else {
    queueWatcher(this);
  }
};

/**
 * Scheduler job interface.
 * Will be called by the scheduler.
 */
Watcher.prototype.run = function run () {
  if (this.active) {
    var value = this.get();
    if (
      value !== this.value ||
      // Deep watchers and watchers on Object/Arrays should fire even
      // when the value is the same, because the value may
      // have mutated.
      isObject(value) ||
      this.deep
    ) {
      // set new value
      var oldValue = this.value;
      this.value = value;
      if (this.user) {
        var info = "callback for watcher \"" + (this.expression) + "\"";
        invokeWithErrorHandling(this.cb, this.vm, [value, oldValue], this.vm, info);
      } else {
        this.cb.call(this.vm, value, oldValue);
      }
    }
  }
};

/**
 * Evaluate the value of the watcher.
 * This only gets called for lazy watchers.
 */
Watcher.prototype.evaluate = function evaluate () {
  this.value = this.get();
  this.dirty = false;
};

/**
 * Depend on all deps collected by this watcher.
 */
Watcher.prototype.depend = function depend () {
  var i = this.deps.length;
  while (i--) {
    this.deps[i].depend();
  }
};

/**
 * Remove self from all dependencies' subscriber list.
 */
Watcher.prototype.teardown = function teardown () {
  if (this.active) {
    // remove self from vm's watcher list
    // this is a somewhat expensive operation so we skip it
    // if the vm is being destroyed.
    if (!this.vm._isBeingDestroyed) {
      remove(this.vm._watchers, this);
    }
    var i = this.deps.length;
    while (i--) {
      this.deps[i].removeSub(this);
    }
    this.active = false;
  }
};

/*  */

var sharedPropertyDefinition = {
  enumerable: true,
  configurable: true,
  get: noop,
  set: noop
};

function proxy (target, sourceKey, key) {
  sharedPropertyDefinition.get = function proxyGetter () {
    return this[sourceKey][key]
  };
  sharedPropertyDefinition.set = function proxySetter (val) {
    this[sourceKey][key] = val;
  };
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function initState (vm) {
  vm._watchers = [];
  var opts = vm.$options;
  if (opts.props) { initProps(vm, opts.props); }
  if (opts.methods) { initMethods(vm, opts.methods); }
  if (opts.data) {
    initData(vm);
  } else {
    observe(vm._data = {}, true /* asRootData */);
  }
  if (opts.computed) { initComputed(vm, opts.computed); }
  if (opts.watch && opts.watch !== nativeWatch) {
    initWatch(vm, opts.watch);
  }
}

function initProps (vm, propsOptions) {
  var propsData = vm.$options.propsData || {};
  var props = vm._props = {};
  // cache prop keys so that future props updates can iterate using Array
  // instead of dynamic object key enumeration.
  var keys = vm.$options._propKeys = [];
  var isRoot = !vm.$parent;
  // root instance props should be converted
  if (!isRoot) {
    toggleObserving(false);
  }
  var loop = function ( key ) {
    keys.push(key);
    var value = validateProp(key, propsOptions, propsData, vm);
    /* istanbul ignore else */
    if (true) {
      var hyphenatedKey = hyphenate(key);
      if (isReservedAttribute(hyphenatedKey) ||
          config.isReservedAttr(hyphenatedKey)) {
        warn(
          ("\"" + hyphenatedKey + "\" is a reserved attribute and cannot be used as component prop."),
          vm
        );
      }
      defineReactive$$1(props, key, value, function () {
        if (!isRoot && !isUpdatingChildComponent) {
          warn(
            "Avoid mutating a prop directly since the value will be " +
            "overwritten whenever the parent component re-renders. " +
            "Instead, use a data or computed property based on the prop's " +
            "value. Prop being mutated: \"" + key + "\"",
            vm
          );
        }
      });
    } else {}
    // static props are already proxied on the component's prototype
    // during Vue.extend(). We only need to proxy props defined at
    // instantiation here.
    if (!(key in vm)) {
      proxy(vm, "_props", key);
    }
  };

  for (var key in propsOptions) loop( key );
  toggleObserving(true);
}

function initData (vm) {
  var data = vm.$options.data;
  data = vm._data = typeof data === 'function'
    ? getData(data, vm)
    : data || {};
  if (!isPlainObject(data)) {
    data = {};
     true && warn(
      'data functions should return an object:\n' +
      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',
      vm
    );
  }
  // proxy data on instance
  var keys = Object.keys(data);
  var props = vm.$options.props;
  var methods = vm.$options.methods;
  var i = keys.length;
  while (i--) {
    var key = keys[i];
    if (true) {
      if (methods && hasOwn(methods, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a data property."),
          vm
        );
      }
    }
    if (props && hasOwn(props, key)) {
       true && warn(
        "The data property \"" + key + "\" is already declared as a prop. " +
        "Use prop default value instead.",
        vm
      );
    } else if (!isReserved(key)) {
      proxy(vm, "_data", key);
    }
  }
  // observe data
  observe(data, true /* asRootData */);
}

function getData (data, vm) {
  // #7573 disable dep collection when invoking data getters
  pushTarget();
  try {
    return data.call(vm, vm)
  } catch (e) {
    handleError(e, vm, "data()");
    return {}
  } finally {
    popTarget();
  }
}

var computedWatcherOptions = { lazy: true };

function initComputed (vm, computed) {
  // $flow-disable-line
  var watchers = vm._computedWatchers = Object.create(null);
  // computed properties are just getters during SSR
  var isSSR = isServerRendering();

  for (var key in computed) {
    var userDef = computed[key];
    var getter = typeof userDef === 'function' ? userDef : userDef.get;
    if ( true && getter == null) {
      warn(
        ("Getter is missing for computed property \"" + key + "\"."),
        vm
      );
    }

    if (!isSSR) {
      // create internal watcher for the computed property.
      watchers[key] = new Watcher(
        vm,
        getter || noop,
        noop,
        computedWatcherOptions
      );
    }

    // component-defined computed properties are already defined on the
    // component prototype. We only need to define computed properties defined
    // at instantiation here.
    if (!(key in vm)) {
      defineComputed(vm, key, userDef);
    } else if (true) {
      if (key in vm.$data) {
        warn(("The computed property \"" + key + "\" is already defined in data."), vm);
      } else if (vm.$options.props && key in vm.$options.props) {
        warn(("The computed property \"" + key + "\" is already defined as a prop."), vm);
      } else if (vm.$options.methods && key in vm.$options.methods) {
        warn(("The computed property \"" + key + "\" is already defined as a method."), vm);
      }
    }
  }
}

function defineComputed (
  target,
  key,
  userDef
) {
  var shouldCache = !isServerRendering();
  if (typeof userDef === 'function') {
    sharedPropertyDefinition.get = shouldCache
      ? createComputedGetter(key)
      : createGetterInvoker(userDef);
    sharedPropertyDefinition.set = noop;
  } else {
    sharedPropertyDefinition.get = userDef.get
      ? shouldCache && userDef.cache !== false
        ? createComputedGetter(key)
        : createGetterInvoker(userDef.get)
      : noop;
    sharedPropertyDefinition.set = userDef.set || noop;
  }
  if ( true &&
      sharedPropertyDefinition.set === noop) {
    sharedPropertyDefinition.set = function () {
      warn(
        ("Computed property \"" + key + "\" was assigned to but it has no setter."),
        this
      );
    };
  }
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function createComputedGetter (key) {
  return function computedGetter () {
    var watcher = this._computedWatchers && this._computedWatchers[key];
    if (watcher) {
      if (watcher.dirty) {
        watcher.evaluate();
      }
      if (Dep.target) {
        watcher.depend();
      }
      return watcher.value
    }
  }
}

function createGetterInvoker(fn) {
  return function computedGetter () {
    return fn.call(this, this)
  }
}

function initMethods (vm, methods) {
  var props = vm.$options.props;
  for (var key in methods) {
    if (true) {
      if (typeof methods[key] !== 'function') {
        warn(
          "Method \"" + key + "\" has type \"" + (typeof methods[key]) + "\" in the component definition. " +
          "Did you reference the function correctly?",
          vm
        );
      }
      if (props && hasOwn(props, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a prop."),
          vm
        );
      }
      if ((key in vm) && isReserved(key)) {
        warn(
          "Method \"" + key + "\" conflicts with an existing Vue instance method. " +
          "Avoid defining component methods that start with _ or $."
        );
      }
    }
    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);
  }
}

function initWatch (vm, watch) {
  for (var key in watch) {
    var handler = watch[key];
    if (Array.isArray(handler)) {
      for (var i = 0; i < handler.length; i++) {
        createWatcher(vm, key, handler[i]);
      }
    } else {
      createWatcher(vm, key, handler);
    }
  }
}

function createWatcher (
  vm,
  expOrFn,
  handler,
  options
) {
  if (isPlainObject(handler)) {
    options = handler;
    handler = handler.handler;
  }
  if (typeof handler === 'string') {
    handler = vm[handler];
  }
  return vm.$watch(expOrFn, handler, options)
}

function stateMixin (Vue) {
  // flow somehow has problems with directly declared definition object
  // when using Object.defineProperty, so we have to procedurally build up
  // the object here.
  var dataDef = {};
  dataDef.get = function () { return this._data };
  var propsDef = {};
  propsDef.get = function () { return this._props };
  if (true) {
    dataDef.set = function () {
      warn(
        'Avoid replacing instance root $data. ' +
        'Use nested data properties instead.',
        this
      );
    };
    propsDef.set = function () {
      warn("$props is readonly.", this);
    };
  }
  Object.defineProperty(Vue.prototype, '$data', dataDef);
  Object.defineProperty(Vue.prototype, '$props', propsDef);

  Vue.prototype.$set = set;
  Vue.prototype.$delete = del;

  Vue.prototype.$watch = function (
    expOrFn,
    cb,
    options
  ) {
    var vm = this;
    if (isPlainObject(cb)) {
      return createWatcher(vm, expOrFn, cb, options)
    }
    options = options || {};
    options.user = true;
    var watcher = new Watcher(vm, expOrFn, cb, options);
    if (options.immediate) {
      var info = "callback for immediate watcher \"" + (watcher.expression) + "\"";
      pushTarget();
      invokeWithErrorHandling(cb, vm, [watcher.value], vm, info);
      popTarget();
    }
    return function unwatchFn () {
      watcher.teardown();
    }
  };
}

/*  */

var uid$3 = 0;

function initMixin (Vue) {
  Vue.prototype._init = function (options) {
    var vm = this;
    // a uid
    vm._uid = uid$3++;

    var startTag, endTag;
    /* istanbul ignore if */
    if ( true && config.performance && mark) {
      startTag = "vue-perf-start:" + (vm._uid);
      endTag = "vue-perf-end:" + (vm._uid);
      mark(startTag);
    }

    // a flag to avoid this being observed
    vm._isVue = true;
    // merge options
    if (options && options._isComponent) {
      // optimize internal component instantiation
      // since dynamic options merging is pretty slow, and none of the
      // internal component options needs special treatment.
      initInternalComponent(vm, options);
    } else {
      vm.$options = mergeOptions(
        resolveConstructorOptions(vm.constructor),
        options || {},
        vm
      );
    }
    /* istanbul ignore else */
    if (true) {
      initProxy(vm);
    } else {}
    // expose real self
    vm._self = vm;
    initLifecycle(vm);
    initEvents(vm);
    initRender(vm);
    callHook(vm, 'beforeCreate');
    initInjections(vm); // resolve injections before data/props
    initState(vm);
    initProvide(vm); // resolve provide after data/props
    callHook(vm, 'created');

    /* istanbul ignore if */
    if ( true && config.performance && mark) {
      vm._name = formatComponentName(vm, false);
      mark(endTag);
      measure(("vue " + (vm._name) + " init"), startTag, endTag);
    }

    if (vm.$options.el) {
      vm.$mount(vm.$options.el);
    }
  };
}

function initInternalComponent (vm, options) {
  var opts = vm.$options = Object.create(vm.constructor.options);
  // doing this because it's faster than dynamic enumeration.
  var parentVnode = options._parentVnode;
  opts.parent = options.parent;
  opts._parentVnode = parentVnode;

  var vnodeComponentOptions = parentVnode.componentOptions;
  opts.propsData = vnodeComponentOptions.propsData;
  opts._parentListeners = vnodeComponentOptions.listeners;
  opts._renderChildren = vnodeComponentOptions.children;
  opts._componentTag = vnodeComponentOptions.tag;

  if (options.render) {
    opts.render = options.render;
    opts.staticRenderFns = options.staticRenderFns;
  }
}

function resolveConstructorOptions (Ctor) {
  var options = Ctor.options;
  if (Ctor.super) {
    var superOptions = resolveConstructorOptions(Ctor.super);
    var cachedSuperOptions = Ctor.superOptions;
    if (superOptions !== cachedSuperOptions) {
      // super option changed,
      // need to resolve new options.
      Ctor.superOptions = superOptions;
      // check if there are any late-modified/attached options (#4976)
      var modifiedOptions = resolveModifiedOptions(Ctor);
      // update base extend options
      if (modifiedOptions) {
        extend(Ctor.extendOptions, modifiedOptions);
      }
      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
      if (options.name) {
        options.components[options.name] = Ctor;
      }
    }
  }
  return options
}

function resolveModifiedOptions (Ctor) {
  var modified;
  var latest = Ctor.options;
  var sealed = Ctor.sealedOptions;
  for (var key in latest) {
    if (latest[key] !== sealed[key]) {
      if (!modified) { modified = {}; }
      modified[key] = latest[key];
    }
  }
  return modified
}

function Vue (options) {
  if ( true &&
    !(this instanceof Vue)
  ) {
    warn('Vue is a constructor and should be called with the `new` keyword');
  }
  this._init(options);
}

initMixin(Vue);
stateMixin(Vue);
eventsMixin(Vue);
lifecycleMixin(Vue);
renderMixin(Vue);

/*  */

function initUse (Vue) {
  Vue.use = function (plugin) {
    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));
    if (installedPlugins.indexOf(plugin) > -1) {
      return this
    }

    // additional parameters
    var args = toArray(arguments, 1);
    args.unshift(this);
    if (typeof plugin.install === 'function') {
      plugin.install.apply(plugin, args);
    } else if (typeof plugin === 'function') {
      plugin.apply(null, args);
    }
    installedPlugins.push(plugin);
    return this
  };
}

/*  */

function initMixin$1 (Vue) {
  Vue.mixin = function (mixin) {
    this.options = mergeOptions(this.options, mixin);
    return this
  };
}

/*  */

function initExtend (Vue) {
  /**
   * Each instance constructor, including Vue, has a unique
   * cid. This enables us to create wrapped "child
   * constructors" for prototypal inheritance and cache them.
   */
  Vue.cid = 0;
  var cid = 1;

  /**
   * Class inheritance
   */
  Vue.extend = function (extendOptions) {
    extendOptions = extendOptions || {};
    var Super = this;
    var SuperId = Super.cid;
    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
    if (cachedCtors[SuperId]) {
      return cachedCtors[SuperId]
    }

    var name = extendOptions.name || Super.options.name;
    if ( true && name) {
      validateComponentName(name);
    }

    var Sub = function VueComponent (options) {
      this._init(options);
    };
    Sub.prototype = Object.create(Super.prototype);
    Sub.prototype.constructor = Sub;
    Sub.cid = cid++;
    Sub.options = mergeOptions(
      Super.options,
      extendOptions
    );
    Sub['super'] = Super;

    // For props and computed properties, we define the proxy getters on
    // the Vue instances at extension time, on the extended prototype. This
    // avoids Object.defineProperty calls for each instance created.
    if (Sub.options.props) {
      initProps$1(Sub);
    }
    if (Sub.options.computed) {
      initComputed$1(Sub);
    }

    // allow further extension/mixin/plugin usage
    Sub.extend = Super.extend;
    Sub.mixin = Super.mixin;
    Sub.use = Super.use;

    // create asset registers, so extended classes
    // can have their private assets too.
    ASSET_TYPES.forEach(function (type) {
      Sub[type] = Super[type];
    });
    // enable recursive self-lookup
    if (name) {
      Sub.options.components[name] = Sub;
    }

    // keep a reference to the super options at extension time.
    // later at instantiation we can check if Super's options have
    // been updated.
    Sub.superOptions = Super.options;
    Sub.extendOptions = extendOptions;
    Sub.sealedOptions = extend({}, Sub.options);

    // cache constructor
    cachedCtors[SuperId] = Sub;
    return Sub
  };
}

function initProps$1 (Comp) {
  var props = Comp.options.props;
  for (var key in props) {
    proxy(Comp.prototype, "_props", key);
  }
}

function initComputed$1 (Comp) {
  var computed = Comp.options.computed;
  for (var key in computed) {
    defineComputed(Comp.prototype, key, computed[key]);
  }
}

/*  */

function initAssetRegisters (Vue) {
  /**
   * Create asset registration methods.
   */
  ASSET_TYPES.forEach(function (type) {
    Vue[type] = function (
      id,
      definition
    ) {
      if (!definition) {
        return this.options[type + 's'][id]
      } else {
        /* istanbul ignore if */
        if ( true && type === 'component') {
          validateComponentName(id);
        }
        if (type === 'component' && isPlainObject(definition)) {
          definition.name = definition.name || id;
          definition = this.options._base.extend(definition);
        }
        if (type === 'directive' && typeof definition === 'function') {
          definition = { bind: definition, update: definition };
        }
        this.options[type + 's'][id] = definition;
        return definition
      }
    };
  });
}

/*  */





function getComponentName (opts) {
  return opts && (opts.Ctor.options.name || opts.tag)
}

function matches (pattern, name) {
  if (Array.isArray(pattern)) {
    return pattern.indexOf(name) > -1
  } else if (typeof pattern === 'string') {
    return pattern.split(',').indexOf(name) > -1
  } else if (isRegExp(pattern)) {
    return pattern.test(name)
  }
  /* istanbul ignore next */
  return false
}

function pruneCache (keepAliveInstance, filter) {
  var cache = keepAliveInstance.cache;
  var keys = keepAliveInstance.keys;
  var _vnode = keepAliveInstance._vnode;
  for (var key in cache) {
    var entry = cache[key];
    if (entry) {
      var name = entry.name;
      if (name && !filter(name)) {
        pruneCacheEntry(cache, key, keys, _vnode);
      }
    }
  }
}

function pruneCacheEntry (
  cache,
  key,
  keys,
  current
) {
  var entry = cache[key];
  if (entry && (!current || entry.tag !== current.tag)) {
    entry.componentInstance.$destroy();
  }
  cache[key] = null;
  remove(keys, key);
}

var patternTypes = [String, RegExp, Array];

var KeepAlive = {
  name: 'keep-alive',
  abstract: true,

  props: {
    include: patternTypes,
    exclude: patternTypes,
    max: [String, Number]
  },

  methods: {
    cacheVNode: function cacheVNode() {
      var ref = this;
      var cache = ref.cache;
      var keys = ref.keys;
      var vnodeToCache = ref.vnodeToCache;
      var keyToCache = ref.keyToCache;
      if (vnodeToCache) {
        var tag = vnodeToCache.tag;
        var componentInstance = vnodeToCache.componentInstance;
        var componentOptions = vnodeToCache.componentOptions;
        cache[keyToCache] = {
          name: getComponentName(componentOptions),
          tag: tag,
          componentInstance: componentInstance,
        };
        keys.push(keyToCache);
        // prune oldest entry
        if (this.max && keys.length > parseInt(this.max)) {
          pruneCacheEntry(cache, keys[0], keys, this._vnode);
        }
        this.vnodeToCache = null;
      }
    }
  },

  created: function created () {
    this.cache = Object.create(null);
    this.keys = [];
  },

  destroyed: function destroyed () {
    for (var key in this.cache) {
      pruneCacheEntry(this.cache, key, this.keys);
    }
  },

  mounted: function mounted () {
    var this$1 = this;

    this.cacheVNode();
    this.$watch('include', function (val) {
      pruneCache(this$1, function (name) { return matches(val, name); });
    });
    this.$watch('exclude', function (val) {
      pruneCache(this$1, function (name) { return !matches(val, name); });
    });
  },

  updated: function updated () {
    this.cacheVNode();
  },

  render: function render () {
    var slot = this.$slots.default;
    var vnode = getFirstComponentChild(slot);
    var componentOptions = vnode && vnode.componentOptions;
    if (componentOptions) {
      // check pattern
      var name = getComponentName(componentOptions);
      var ref = this;
      var include = ref.include;
      var exclude = ref.exclude;
      if (
        // not included
        (include && (!name || !matches(include, name))) ||
        // excluded
        (exclude && name && matches(exclude, name))
      ) {
        return vnode
      }

      var ref$1 = this;
      var cache = ref$1.cache;
      var keys = ref$1.keys;
      var key = vnode.key == null
        // same constructor may get registered as different local components
        // so cid alone is not enough (#3269)
        ? componentOptions.Ctor.cid + (componentOptions.tag ? ("::" + (componentOptions.tag)) : '')
        : vnode.key;
      if (cache[key]) {
        vnode.componentInstance = cache[key].componentInstance;
        // make current key freshest
        remove(keys, key);
        keys.push(key);
      } else {
        // delay setting the cache until update
        this.vnodeToCache = vnode;
        this.keyToCache = key;
      }

      vnode.data.keepAlive = true;
    }
    return vnode || (slot && slot[0])
  }
};

var builtInComponents = {
  KeepAlive: KeepAlive
};

/*  */

function initGlobalAPI (Vue) {
  // config
  var configDef = {};
  configDef.get = function () { return config; };
  if (true) {
    configDef.set = function () {
      warn(
        'Do not replace the Vue.config object, set individual fields instead.'
      );
    };
  }
  Object.defineProperty(Vue, 'config', configDef);

  // exposed util methods.
  // NOTE: these are not considered part of the public API - avoid relying on
  // them unless you are aware of the risk.
  Vue.util = {
    warn: warn,
    extend: extend,
    mergeOptions: mergeOptions,
    defineReactive: defineReactive$$1
  };

  Vue.set = set;
  Vue.delete = del;
  Vue.nextTick = nextTick;

  // 2.6 explicit observable API
  Vue.observable = function (obj) {
    observe(obj);
    return obj
  };

  Vue.options = Object.create(null);
  ASSET_TYPES.forEach(function (type) {
    Vue.options[type + 's'] = Object.create(null);
  });

  // this is used to identify the "base" constructor to extend all plain-object
  // components with in Weex's multi-instance scenarios.
  Vue.options._base = Vue;

  extend(Vue.options.components, builtInComponents);

  initUse(Vue);
  initMixin$1(Vue);
  initExtend(Vue);
  initAssetRegisters(Vue);
}

initGlobalAPI(Vue);

Object.defineProperty(Vue.prototype, '$isServer', {
  get: isServerRendering
});

Object.defineProperty(Vue.prototype, '$ssrContext', {
  get: function get () {
    /* istanbul ignore next */
    return this.$vnode && this.$vnode.ssrContext
  }
});

// expose FunctionalRenderContext for ssr runtime helper installation
Object.defineProperty(Vue, 'FunctionalRenderContext', {
  value: FunctionalRenderContext
});

Vue.version = '2.6.14';

/*  */

// these are reserved for web because they are directly compiled away
// during template compilation
var isReservedAttr = makeMap('style,class');

// attributes that should be using props for binding
var acceptValue = makeMap('input,textarea,option,select,progress');
var mustUseProp = function (tag, type, attr) {
  return (
    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||
    (attr === 'selected' && tag === 'option') ||
    (attr === 'checked' && tag === 'input') ||
    (attr === 'muted' && tag === 'video')
  )
};

var isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');

var isValidContentEditableValue = makeMap('events,caret,typing,plaintext-only');

var convertEnumeratedValue = function (key, value) {
  return isFalsyAttrValue(value) || value === 'false'
    ? 'false'
    // allow arbitrary string value for contenteditable
    : key === 'contenteditable' && isValidContentEditableValue(value)
      ? value
      : 'true'
};

var isBooleanAttr = makeMap(
  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +
  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +
  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +
  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +
  'required,reversed,scoped,seamless,selected,sortable,' +
  'truespeed,typemustmatch,visible'
);

var xlinkNS = 'http://www.w3.org/1999/xlink';

var isXlink = function (name) {
  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'
};

var getXlinkProp = function (name) {
  return isXlink(name) ? name.slice(6, name.length) : ''
};

var isFalsyAttrValue = function (val) {
  return val == null || val === false
};

/*  */

function genClassForVnode (vnode) {
  var data = vnode.data;
  var parentNode = vnode;
  var childNode = vnode;
  while (isDef(childNode.componentInstance)) {
    childNode = childNode.componentInstance._vnode;
    if (childNode && childNode.data) {
      data = mergeClassData(childNode.data, data);
    }
  }
  while (isDef(parentNode = parentNode.parent)) {
    if (parentNode && parentNode.data) {
      data = mergeClassData(data, parentNode.data);
    }
  }
  return renderClass(data.staticClass, data.class)
}

function mergeClassData (child, parent) {
  return {
    staticClass: concat(child.staticClass, parent.staticClass),
    class: isDef(child.class)
      ? [child.class, parent.class]
      : parent.class
  }
}

function renderClass (
  staticClass,
  dynamicClass
) {
  if (isDef(staticClass) || isDef(dynamicClass)) {
    return concat(staticClass, stringifyClass(dynamicClass))
  }
  /* istanbul ignore next */
  return ''
}

function concat (a, b) {
  return a ? b ? (a + ' ' + b) : a : (b || '')
}

function stringifyClass (value) {
  if (Array.isArray(value)) {
    return stringifyArray(value)
  }
  if (isObject(value)) {
    return stringifyObject(value)
  }
  if (typeof value === 'string') {
    return value
  }
  /* istanbul ignore next */
  return ''
}

function stringifyArray (value) {
  var res = '';
  var stringified;
  for (var i = 0, l = value.length; i < l; i++) {
    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
      if (res) { res += ' '; }
      res += stringified;
    }
  }
  return res
}

function stringifyObject (value) {
  var res = '';
  for (var key in value) {
    if (value[key]) {
      if (res) { res += ' '; }
      res += key;
    }
  }
  return res
}

/*  */

var namespaceMap = {
  svg: 'http://www.w3.org/2000/svg',
  math: 'http://www.w3.org/1998/Math/MathML'
};

var isHTMLTag = makeMap(
  'html,body,base,head,link,meta,style,title,' +
  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +
  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +
  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +
  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +
  'embed,object,param,source,canvas,script,noscript,del,ins,' +
  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +
  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +
  'output,progress,select,textarea,' +
  'details,dialog,menu,menuitem,summary,' +
  'content,element,shadow,template,blockquote,iframe,tfoot'
);

// this map is intentionally selective, only covering SVG elements that may
// contain child elements.
var isSVG = makeMap(
  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +
  'foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +
  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',
  true
);

var isPreTag = function (tag) { return tag === 'pre'; };

var isReservedTag = function (tag) {
  return isHTMLTag(tag) || isSVG(tag)
};

function getTagNamespace (tag) {
  if (isSVG(tag)) {
    return 'svg'
  }
  // basic support for MathML
  // note it doesn't support other MathML elements being component roots
  if (tag === 'math') {
    return 'math'
  }
}

var unknownElementCache = Object.create(null);
function isUnknownElement (tag) {
  /* istanbul ignore if */
  if (!inBrowser) {
    return true
  }
  if (isReservedTag(tag)) {
    return false
  }
  tag = tag.toLowerCase();
  /* istanbul ignore if */
  if (unknownElementCache[tag] != null) {
    return unknownElementCache[tag]
  }
  var el = document.createElement(tag);
  if (tag.indexOf('-') > -1) {
    // http://stackoverflow.com/a/28210364/1070244
    return (unknownElementCache[tag] = (
      el.constructor === window.HTMLUnknownElement ||
      el.constructor === window.HTMLElement
    ))
  } else {
    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))
  }
}

var isTextInputType = makeMap('text,number,password,search,email,tel,url');

/*  */

/**
 * Query an element selector if it's not an element already.
 */
function query (el) {
  if (typeof el === 'string') {
    var selected = document.querySelector(el);
    if (!selected) {
       true && warn(
        'Cannot find element: ' + el
      );
      return document.createElement('div')
    }
    return selected
  } else {
    return el
  }
}

/*  */

function createElement$1 (tagName, vnode) {
  var elm = document.createElement(tagName);
  if (tagName !== 'select') {
    return elm
  }
  // false or null will remove the attribute but undefined will not
  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {
    elm.setAttribute('multiple', 'multiple');
  }
  return elm
}

function createElementNS (namespace, tagName) {
  return document.createElementNS(namespaceMap[namespace], tagName)
}

function createTextNode (text) {
  return document.createTextNode(text)
}

function createComment (text) {
  return document.createComment(text)
}

function insertBefore (parentNode, newNode, referenceNode) {
  parentNode.insertBefore(newNode, referenceNode);
}

function removeChild (node, child) {
  node.removeChild(child);
}

function appendChild (node, child) {
  node.appendChild(child);
}

function parentNode (node) {
  return node.parentNode
}

function nextSibling (node) {
  return node.nextSibling
}

function tagName (node) {
  return node.tagName
}

function setTextContent (node, text) {
  node.textContent = text;
}

function setStyleScope (node, scopeId) {
  node.setAttribute(scopeId, '');
}

var nodeOps = /*#__PURE__*/Object.freeze({
  createElement: createElement$1,
  createElementNS: createElementNS,
  createTextNode: createTextNode,
  createComment: createComment,
  insertBefore: insertBefore,
  removeChild: removeChild,
  appendChild: appendChild,
  parentNode: parentNode,
  nextSibling: nextSibling,
  tagName: tagName,
  setTextContent: setTextContent,
  setStyleScope: setStyleScope
});

/*  */

var ref = {
  create: function create (_, vnode) {
    registerRef(vnode);
  },
  update: function update (oldVnode, vnode) {
    if (oldVnode.data.ref !== vnode.data.ref) {
      registerRef(oldVnode, true);
      registerRef(vnode);
    }
  },
  destroy: function destroy (vnode) {
    registerRef(vnode, true);
  }
};

function registerRef (vnode, isRemoval) {
  var key = vnode.data.ref;
  if (!isDef(key)) { return }

  var vm = vnode.context;
  var ref = vnode.componentInstance || vnode.elm;
  var refs = vm.$refs;
  if (isRemoval) {
    if (Array.isArray(refs[key])) {
      remove(refs[key], ref);
    } else if (refs[key] === ref) {
      refs[key] = undefined;
    }
  } else {
    if (vnode.data.refInFor) {
      if (!Array.isArray(refs[key])) {
        refs[key] = [ref];
      } else if (refs[key].indexOf(ref) < 0) {
        // $flow-disable-line
        refs[key].push(ref);
      }
    } else {
      refs[key] = ref;
    }
  }
}

/**
 * Virtual DOM patching algorithm based on Snabbdom by
 * Simon Friis Vindum (@paldepind)
 * Licensed under the MIT License
 * https://github.com/paldepind/snabbdom/blob/master/LICENSE
 *
 * modified by Evan You (@yyx990803)
 *
 * Not type-checking this because this file is perf-critical and the cost
 * of making flow understand it is not worth it.
 */

var emptyNode = new VNode('', {}, []);

var hooks = ['create', 'activate', 'update', 'remove', 'destroy'];

function sameVnode (a, b) {
  return (
    a.key === b.key &&
    a.asyncFactory === b.asyncFactory && (
      (
        a.tag === b.tag &&
        a.isComment === b.isComment &&
        isDef(a.data) === isDef(b.data) &&
        sameInputType(a, b)
      ) || (
        isTrue(a.isAsyncPlaceholder) &&
        isUndef(b.asyncFactory.error)
      )
    )
  )
}

function sameInputType (a, b) {
  if (a.tag !== 'input') { return true }
  var i;
  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;
  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;
  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)
}

function createKeyToOldIdx (children, beginIdx, endIdx) {
  var i, key;
  var map = {};
  for (i = beginIdx; i <= endIdx; ++i) {
    key = children[i].key;
    if (isDef(key)) { map[key] = i; }
  }
  return map
}

function createPatchFunction (backend) {
  var i, j;
  var cbs = {};

  var modules = backend.modules;
  var nodeOps = backend.nodeOps;

  for (i = 0; i < hooks.length; ++i) {
    cbs[hooks[i]] = [];
    for (j = 0; j < modules.length; ++j) {
      if (isDef(modules[j][hooks[i]])) {
        cbs[hooks[i]].push(modules[j][hooks[i]]);
      }
    }
  }

  function emptyNodeAt (elm) {
    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)
  }

  function createRmCb (childElm, listeners) {
    function remove$$1 () {
      if (--remove$$1.listeners === 0) {
        removeNode(childElm);
      }
    }
    remove$$1.listeners = listeners;
    return remove$$1
  }

  function removeNode (el) {
    var parent = nodeOps.parentNode(el);
    // element may have already been removed due to v-html / v-text
    if (isDef(parent)) {
      nodeOps.removeChild(parent, el);
    }
  }

  function isUnknownElement$$1 (vnode, inVPre) {
    return (
      !inVPre &&
      !vnode.ns &&
      !(
        config.ignoredElements.length &&
        config.ignoredElements.some(function (ignore) {
          return isRegExp(ignore)
            ? ignore.test(vnode.tag)
            : ignore === vnode.tag
        })
      ) &&
      config.isUnknownElement(vnode.tag)
    )
  }

  var creatingElmInVPre = 0;

  function createElm (
    vnode,
    insertedVnodeQueue,
    parentElm,
    refElm,
    nested,
    ownerArray,
    index
  ) {
    if (isDef(vnode.elm) && isDef(ownerArray)) {
      // This vnode was used in a previous render!
      // now it's used as a new node, overwriting its elm would cause
      // potential patch errors down the road when it's used as an insertion
      // reference node. Instead, we clone the node on-demand before creating
      // associated DOM element for it.
      vnode = ownerArray[index] = cloneVNode(vnode);
    }

    vnode.isRootInsert = !nested; // for transition enter check
    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {
      return
    }

    var data = vnode.data;
    var children = vnode.children;
    var tag = vnode.tag;
    if (isDef(tag)) {
      if (true) {
        if (data && data.pre) {
          creatingElmInVPre++;
        }
        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {
          warn(
            'Unknown custom element: <' + tag + '> - did you ' +
            'register the component correctly? For recursive components, ' +
            'make sure to provide the "name" option.',
            vnode.context
          );
        }
      }

      vnode.elm = vnode.ns
        ? nodeOps.createElementNS(vnode.ns, tag)
        : nodeOps.createElement(tag, vnode);
      setScope(vnode);

      /* istanbul ignore if */
      {
        createChildren(vnode, children, insertedVnodeQueue);
        if (isDef(data)) {
          invokeCreateHooks(vnode, insertedVnodeQueue);
        }
        insert(parentElm, vnode.elm, refElm);
      }

      if ( true && data && data.pre) {
        creatingElmInVPre--;
      }
    } else if (isTrue(vnode.isComment)) {
      vnode.elm = nodeOps.createComment(vnode.text);
      insert(parentElm, vnode.elm, refElm);
    } else {
      vnode.elm = nodeOps.createTextNode(vnode.text);
      insert(parentElm, vnode.elm, refElm);
    }
  }

  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
    var i = vnode.data;
    if (isDef(i)) {
      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;
      if (isDef(i = i.hook) && isDef(i = i.init)) {
        i(vnode, false /* hydrating */);
      }
      // after calling the init hook, if the vnode is a child component
      // it should've created a child instance and mounted it. the child
      // component also has set the placeholder vnode's elm.
      // in that case we can just return the element and be done.
      if (isDef(vnode.componentInstance)) {
        initComponent(vnode, insertedVnodeQueue);
        insert(parentElm, vnode.elm, refElm);
        if (isTrue(isReactivated)) {
          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);
        }
        return true
      }
    }
  }

  function initComponent (vnode, insertedVnodeQueue) {
    if (isDef(vnode.data.pendingInsert)) {
      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);
      vnode.data.pendingInsert = null;
    }
    vnode.elm = vnode.componentInstance.$el;
    if (isPatchable(vnode)) {
      invokeCreateHooks(vnode, insertedVnodeQueue);
      setScope(vnode);
    } else {
      // empty component root.
      // skip all element-related modules except for ref (#3455)
      registerRef(vnode);
      // make sure to invoke the insert hook
      insertedVnodeQueue.push(vnode);
    }
  }

  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {
    var i;
    // hack for #4339: a reactivated component with inner transition
    // does not trigger because the inner node's created hooks are not called
    // again. It's not ideal to involve module-specific logic in here but
    // there doesn't seem to be a better way to do it.
    var innerNode = vnode;
    while (innerNode.componentInstance) {
      innerNode = innerNode.componentInstance._vnode;
      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {
        for (i = 0; i < cbs.activate.length; ++i) {
          cbs.activate[i](emptyNode, innerNode);
        }
        insertedVnodeQueue.push(innerNode);
        break
      }
    }
    // unlike a newly created component,
    // a reactivated keep-alive component doesn't insert itself
    insert(parentElm, vnode.elm, refElm);
  }

  function insert (parent, elm, ref$$1) {
    if (isDef(parent)) {
      if (isDef(ref$$1)) {
        if (nodeOps.parentNode(ref$$1) === parent) {
          nodeOps.insertBefore(parent, elm, ref$$1);
        }
      } else {
        nodeOps.appendChild(parent, elm);
      }
    }
  }

  function createChildren (vnode, children, insertedVnodeQueue) {
    if (Array.isArray(children)) {
      if (true) {
        checkDuplicateKeys(children);
      }
      for (var i = 0; i < children.length; ++i) {
        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);
      }
    } else if (isPrimitive(vnode.text)) {
      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));
    }
  }

  function isPatchable (vnode) {
    while (vnode.componentInstance) {
      vnode = vnode.componentInstance._vnode;
    }
    return isDef(vnode.tag)
  }

  function invokeCreateHooks (vnode, insertedVnodeQueue) {
    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
      cbs.create[i$1](emptyNode, vnode);
    }
    i = vnode.data.hook; // Reuse variable
    if (isDef(i)) {
      if (isDef(i.create)) { i.create(emptyNode, vnode); }
      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }
    }
  }

  // set scope id attribute for scoped CSS.
  // this is implemented as a special case to avoid the overhead
  // of going through the normal attribute patching process.
  function setScope (vnode) {
    var i;
    if (isDef(i = vnode.fnScopeId)) {
      nodeOps.setStyleScope(vnode.elm, i);
    } else {
      var ancestor = vnode;
      while (ancestor) {
        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {
          nodeOps.setStyleScope(vnode.elm, i);
        }
        ancestor = ancestor.parent;
      }
    }
    // for slot content they should also get the scopeId from the host instance.
    if (isDef(i = activeInstance) &&
      i !== vnode.context &&
      i !== vnode.fnContext &&
      isDef(i = i.$options._scopeId)
    ) {
      nodeOps.setStyleScope(vnode.elm, i);
    }
  }

  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {
    for (; startIdx <= endIdx; ++startIdx) {
      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);
    }
  }

  function invokeDestroyHook (vnode) {
    var i, j;
    var data = vnode.data;
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }
      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }
    }
    if (isDef(i = vnode.children)) {
      for (j = 0; j < vnode.children.length; ++j) {
        invokeDestroyHook(vnode.children[j]);
      }
    }
  }

  function removeVnodes (vnodes, startIdx, endIdx) {
    for (; startIdx <= endIdx; ++startIdx) {
      var ch = vnodes[startIdx];
      if (isDef(ch)) {
        if (isDef(ch.tag)) {
          removeAndInvokeRemoveHook(ch);
          invokeDestroyHook(ch);
        } else { // Text node
          removeNode(ch.elm);
        }
      }
    }
  }

  function removeAndInvokeRemoveHook (vnode, rm) {
    if (isDef(rm) || isDef(vnode.data)) {
      var i;
      var listeners = cbs.remove.length + 1;
      if (isDef(rm)) {
        // we have a recursively passed down rm callback
        // increase the listeners count
        rm.listeners += listeners;
      } else {
        // directly removing
        rm = createRmCb(vnode.elm, listeners);
      }
      // recursively invoke hooks on child component root node
      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {
        removeAndInvokeRemoveHook(i, rm);
      }
      for (i = 0; i < cbs.remove.length; ++i) {
        cbs.remove[i](vnode, rm);
      }
      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {
        i(vnode, rm);
      } else {
        rm();
      }
    } else {
      removeNode(vnode.elm);
    }
  }

  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {
    var oldStartIdx = 0;
    var newStartIdx = 0;
    var oldEndIdx = oldCh.length - 1;
    var oldStartVnode = oldCh[0];
    var oldEndVnode = oldCh[oldEndIdx];
    var newEndIdx = newCh.length - 1;
    var newStartVnode = newCh[0];
    var newEndVnode = newCh[newEndIdx];
    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;

    // removeOnly is a special flag used only by <transition-group>
    // to ensure removed elements stay in correct relative positions
    // during leaving transitions
    var canMove = !removeOnly;

    if (true) {
      checkDuplicateKeys(newCh);
    }

    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
      if (isUndef(oldStartVnode)) {
        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left
      } else if (isUndef(oldEndVnode)) {
        oldEndVnode = oldCh[--oldEndIdx];
      } else if (sameVnode(oldStartVnode, newStartVnode)) {
        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);
        oldStartVnode = oldCh[++oldStartIdx];
        newStartVnode = newCh[++newStartIdx];
      } else if (sameVnode(oldEndVnode, newEndVnode)) {
        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);
        oldEndVnode = oldCh[--oldEndIdx];
        newEndVnode = newCh[--newEndIdx];
      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right
        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);
        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));
        oldStartVnode = oldCh[++oldStartIdx];
        newEndVnode = newCh[--newEndIdx];
      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left
        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);
        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
        oldEndVnode = oldCh[--oldEndIdx];
        newStartVnode = newCh[++newStartIdx];
      } else {
        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }
        idxInOld = isDef(newStartVnode.key)
          ? oldKeyToIdx[newStartVnode.key]
          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);
        if (isUndef(idxInOld)) { // New element
          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
        } else {
          vnodeToMove = oldCh[idxInOld];
          if (sameVnode(vnodeToMove, newStartVnode)) {
            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);
            oldCh[idxInOld] = undefined;
            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);
          } else {
            // same key but different element. treat as new element
            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
          }
        }
        newStartVnode = newCh[++newStartIdx];
      }
    }
    if (oldStartIdx > oldEndIdx) {
      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;
      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
    } else if (newStartIdx > newEndIdx) {
      removeVnodes(oldCh, oldStartIdx, oldEndIdx);
    }
  }

  function checkDuplicateKeys (children) {
    var seenKeys = {};
    for (var i = 0; i < children.length; i++) {
      var vnode = children[i];
      var key = vnode.key;
      if (isDef(key)) {
        if (seenKeys[key]) {
          warn(
            ("Duplicate keys detected: '" + key + "'. This may cause an update error."),
            vnode.context
          );
        } else {
          seenKeys[key] = true;
        }
      }
    }
  }

  function findIdxInOld (node, oldCh, start, end) {
    for (var i = start; i < end; i++) {
      var c = oldCh[i];
      if (isDef(c) && sameVnode(node, c)) { return i }
    }
  }

  function patchVnode (
    oldVnode,
    vnode,
    insertedVnodeQueue,
    ownerArray,
    index,
    removeOnly
  ) {
    if (oldVnode === vnode) {
      return
    }

    if (isDef(vnode.elm) && isDef(ownerArray)) {
      // clone reused vnode
      vnode = ownerArray[index] = cloneVNode(vnode);
    }

    var elm = vnode.elm = oldVnode.elm;

    if (isTrue(oldVnode.isAsyncPlaceholder)) {
      if (isDef(vnode.asyncFactory.resolved)) {
        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);
      } else {
        vnode.isAsyncPlaceholder = true;
      }
      return
    }

    // reuse element for static trees.
    // note we only do this if the vnode is cloned -
    // if the new node is not cloned it means the render functions have been
    // reset by the hot-reload-api and we need to do a proper re-render.
    if (isTrue(vnode.isStatic) &&
      isTrue(oldVnode.isStatic) &&
      vnode.key === oldVnode.key &&
      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))
    ) {
      vnode.componentInstance = oldVnode.componentInstance;
      return
    }

    var i;
    var data = vnode.data;
    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {
      i(oldVnode, vnode);
    }

    var oldCh = oldVnode.children;
    var ch = vnode.children;
    if (isDef(data) && isPatchable(vnode)) {
      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }
      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }
    }
    if (isUndef(vnode.text)) {
      if (isDef(oldCh) && isDef(ch)) {
        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }
      } else if (isDef(ch)) {
        if (true) {
          checkDuplicateKeys(ch);
        }
        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }
        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
      } else if (isDef(oldCh)) {
        removeVnodes(oldCh, 0, oldCh.length - 1);
      } else if (isDef(oldVnode.text)) {
        nodeOps.setTextContent(elm, '');
      }
    } else if (oldVnode.text !== vnode.text) {
      nodeOps.setTextContent(elm, vnode.text);
    }
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }
    }
  }

  function invokeInsertHook (vnode, queue, initial) {
    // delay insert hooks for component root nodes, invoke them after the
    // element is really inserted
    if (isTrue(initial) && isDef(vnode.parent)) {
      vnode.parent.data.pendingInsert = queue;
    } else {
      for (var i = 0; i < queue.length; ++i) {
        queue[i].data.hook.insert(queue[i]);
      }
    }
  }

  var hydrationBailed = false;
  // list of modules that can skip create hook during hydration because they
  // are already rendered on the client or has no need for initialization
  // Note: style is excluded because it relies on initial clone for future
  // deep updates (#7063).
  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');

  // Note: this is a browser-only function so we can assume elms are DOM nodes.
  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {
    var i;
    var tag = vnode.tag;
    var data = vnode.data;
    var children = vnode.children;
    inVPre = inVPre || (data && data.pre);
    vnode.elm = elm;

    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {
      vnode.isAsyncPlaceholder = true;
      return true
    }
    // assert node match
    if (true) {
      if (!assertNodeMatch(elm, vnode, inVPre)) {
        return false
      }
    }
    if (isDef(data)) {
      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }
      if (isDef(i = vnode.componentInstance)) {
        // child component. it should have hydrated its own tree.
        initComponent(vnode, insertedVnodeQueue);
        return true
      }
    }
    if (isDef(tag)) {
      if (isDef(children)) {
        // empty element, allow client to pick up and populate children
        if (!elm.hasChildNodes()) {
          createChildren(vnode, children, insertedVnodeQueue);
        } else {
          // v-html and domProps: innerHTML
          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {
            if (i !== elm.innerHTML) {
              /* istanbul ignore if */
              if ( true &&
                typeof console !== 'undefined' &&
                !hydrationBailed
              ) {
                hydrationBailed = true;
                console.warn('Parent: ', elm);
                console.warn('server innerHTML: ', i);
                console.warn('client innerHTML: ', elm.innerHTML);
              }
              return false
            }
          } else {
            // iterate and compare children lists
            var childrenMatch = true;
            var childNode = elm.firstChild;
            for (var i$1 = 0; i$1 < children.length; i$1++) {
              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {
                childrenMatch = false;
                break
              }
              childNode = childNode.nextSibling;
            }
            // if childNode is not null, it means the actual childNodes list is
            // longer than the virtual children list.
            if (!childrenMatch || childNode) {
              /* istanbul ignore if */
              if ( true &&
                typeof console !== 'undefined' &&
                !hydrationBailed
              ) {
                hydrationBailed = true;
                console.warn('Parent: ', elm);
                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);
              }
              return false
            }
          }
        }
      }
      if (isDef(data)) {
        var fullInvoke = false;
        for (var key in data) {
          if (!isRenderedModule(key)) {
            fullInvoke = true;
            invokeCreateHooks(vnode, insertedVnodeQueue);
            break
          }
        }
        if (!fullInvoke && data['class']) {
          // ensure collecting deps for deep class bindings for future updates
          traverse(data['class']);
        }
      }
    } else if (elm.data !== vnode.text) {
      elm.data = vnode.text;
    }
    return true
  }

  function assertNodeMatch (node, vnode, inVPre) {
    if (isDef(vnode.tag)) {
      return vnode.tag.indexOf('vue-component') === 0 || (
        !isUnknownElement$$1(vnode, inVPre) &&
        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())
      )
    } else {
      return node.nodeType === (vnode.isComment ? 8 : 3)
    }
  }

  return function patch (oldVnode, vnode, hydrating, removeOnly) {
    if (isUndef(vnode)) {
      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }
      return
    }

    var isInitialPatch = false;
    var insertedVnodeQueue = [];

    if (isUndef(oldVnode)) {
      // empty mount (likely as component), create new root element
      isInitialPatch = true;
      createElm(vnode, insertedVnodeQueue);
    } else {
      var isRealElement = isDef(oldVnode.nodeType);
      if (!isRealElement && sameVnode(oldVnode, vnode)) {
        // patch existing root node
        patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly);
      } else {
        if (isRealElement) {
          // mounting to a real element
          // check if this is server-rendered content and if we can perform
          // a successful hydration.
          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {
            oldVnode.removeAttribute(SSR_ATTR);
            hydrating = true;
          }
          if (isTrue(hydrating)) {
            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {
              invokeInsertHook(vnode, insertedVnodeQueue, true);
              return oldVnode
            } else if (true) {
              warn(
                'The client-side rendered virtual DOM tree is not matching ' +
                'server-rendered content. This is likely caused by incorrect ' +
                'HTML markup, for example nesting block-level elements inside ' +
                '<p>, or missing <tbody>. Bailing hydration and performing ' +
                'full client-side render.'
              );
            }
          }
          // either not server-rendered, or hydration failed.
          // create an empty node and replace it
          oldVnode = emptyNodeAt(oldVnode);
        }

        // replacing existing element
        var oldElm = oldVnode.elm;
        var parentElm = nodeOps.parentNode(oldElm);

        // create new node
        createElm(
          vnode,
          insertedVnodeQueue,
          // extremely rare edge case: do not insert if old element is in a
          // leaving transition. Only happens when combining transition +
          // keep-alive + HOCs. (#4590)
          oldElm._leaveCb ? null : parentElm,
          nodeOps.nextSibling(oldElm)
        );

        // update parent placeholder node element, recursively
        if (isDef(vnode.parent)) {
          var ancestor = vnode.parent;
          var patchable = isPatchable(vnode);
          while (ancestor) {
            for (var i = 0; i < cbs.destroy.length; ++i) {
              cbs.destroy[i](ancestor);
            }
            ancestor.elm = vnode.elm;
            if (patchable) {
              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
                cbs.create[i$1](emptyNode, ancestor);
              }
              // #6513
              // invoke insert hooks that may have been merged by create hooks.
              // e.g. for directives that uses the "inserted" hook.
              var insert = ancestor.data.hook.insert;
              if (insert.merged) {
                // start at index 1 to avoid re-invoking component mounted hook
                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {
                  insert.fns[i$2]();
                }
              }
            } else {
              registerRef(ancestor);
            }
            ancestor = ancestor.parent;
          }
        }

        // destroy old node
        if (isDef(parentElm)) {
          removeVnodes([oldVnode], 0, 0);
        } else if (isDef(oldVnode.tag)) {
          invokeDestroyHook(oldVnode);
        }
      }
    }

    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);
    return vnode.elm
  }
}

/*  */

var directives = {
  create: updateDirectives,
  update: updateDirectives,
  destroy: function unbindDirectives (vnode) {
    updateDirectives(vnode, emptyNode);
  }
};

function updateDirectives (oldVnode, vnode) {
  if (oldVnode.data.directives || vnode.data.directives) {
    _update(oldVnode, vnode);
  }
}

function _update (oldVnode, vnode) {
  var isCreate = oldVnode === emptyNode;
  var isDestroy = vnode === emptyNode;
  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);
  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);

  var dirsWithInsert = [];
  var dirsWithPostpatch = [];

  var key, oldDir, dir;
  for (key in newDirs) {
    oldDir = oldDirs[key];
    dir = newDirs[key];
    if (!oldDir) {
      // new directive, bind
      callHook$1(dir, 'bind', vnode, oldVnode);
      if (dir.def && dir.def.inserted) {
        dirsWithInsert.push(dir);
      }
    } else {
      // existing directive, update
      dir.oldValue = oldDir.value;
      dir.oldArg = oldDir.arg;
      callHook$1(dir, 'update', vnode, oldVnode);
      if (dir.def && dir.def.componentUpdated) {
        dirsWithPostpatch.push(dir);
      }
    }
  }

  if (dirsWithInsert.length) {
    var callInsert = function () {
      for (var i = 0; i < dirsWithInsert.length; i++) {
        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);
      }
    };
    if (isCreate) {
      mergeVNodeHook(vnode, 'insert', callInsert);
    } else {
      callInsert();
    }
  }

  if (dirsWithPostpatch.length) {
    mergeVNodeHook(vnode, 'postpatch', function () {
      for (var i = 0; i < dirsWithPostpatch.length; i++) {
        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);
      }
    });
  }

  if (!isCreate) {
    for (key in oldDirs) {
      if (!newDirs[key]) {
        // no longer present, unbind
        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);
      }
    }
  }
}

var emptyModifiers = Object.create(null);

function normalizeDirectives$1 (
  dirs,
  vm
) {
  var res = Object.create(null);
  if (!dirs) {
    // $flow-disable-line
    return res
  }
  var i, dir;
  for (i = 0; i < dirs.length; i++) {
    dir = dirs[i];
    if (!dir.modifiers) {
      // $flow-disable-line
      dir.modifiers = emptyModifiers;
    }
    res[getRawDirName(dir)] = dir;
    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);
  }
  // $flow-disable-line
  return res
}

function getRawDirName (dir) {
  return dir.rawName || ((dir.name) + "." + (Object.keys(dir.modifiers || {}).join('.')))
}

function callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {
  var fn = dir.def && dir.def[hook];
  if (fn) {
    try {
      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);
    } catch (e) {
      handleError(e, vnode.context, ("directive " + (dir.name) + " " + hook + " hook"));
    }
  }
}

var baseModules = [
  ref,
  directives
];

/*  */

function updateAttrs (oldVnode, vnode) {
  var opts = vnode.componentOptions;
  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {
    return
  }
  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {
    return
  }
  var key, cur, old;
  var elm = vnode.elm;
  var oldAttrs = oldVnode.data.attrs || {};
  var attrs = vnode.data.attrs || {};
  // clone observed objects, as the user probably wants to mutate it
  if (isDef(attrs.__ob__)) {
    attrs = vnode.data.attrs = extend({}, attrs);
  }

  for (key in attrs) {
    cur = attrs[key];
    old = oldAttrs[key];
    if (old !== cur) {
      setAttr(elm, key, cur, vnode.data.pre);
    }
  }
  // #4391: in IE9, setting type can reset value for input[type=radio]
  // #6666: IE/Edge forces progress value down to 1 before setting a max
  /* istanbul ignore if */
  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {
    setAttr(elm, 'value', attrs.value);
  }
  for (key in oldAttrs) {
    if (isUndef(attrs[key])) {
      if (isXlink(key)) {
        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));
      } else if (!isEnumeratedAttr(key)) {
        elm.removeAttribute(key);
      }
    }
  }
}

function setAttr (el, key, value, isInPre) {
  if (isInPre || el.tagName.indexOf('-') > -1) {
    baseSetAttr(el, key, value);
  } else if (isBooleanAttr(key)) {
    // set attribute for blank value
    // e.g. <option disabled>Select one</option>
    if (isFalsyAttrValue(value)) {
      el.removeAttribute(key);
    } else {
      // technically allowfullscreen is a boolean attribute for <iframe>,
      // but Flash expects a value of "true" when used on <embed> tag
      value = key === 'allowfullscreen' && el.tagName === 'EMBED'
        ? 'true'
        : key;
      el.setAttribute(key, value);
    }
  } else if (isEnumeratedAttr(key)) {
    el.setAttribute(key, convertEnumeratedValue(key, value));
  } else if (isXlink(key)) {
    if (isFalsyAttrValue(value)) {
      el.removeAttributeNS(xlinkNS, getXlinkProp(key));
    } else {
      el.setAttributeNS(xlinkNS, key, value);
    }
  } else {
    baseSetAttr(el, key, value);
  }
}

function baseSetAttr (el, key, value) {
  if (isFalsyAttrValue(value)) {
    el.removeAttribute(key);
  } else {
    // #7138: IE10 & 11 fires input event when setting placeholder on
    // <textarea>... block the first input event and remove the blocker
    // immediately.
    /* istanbul ignore if */
    if (
      isIE && !isIE9 &&
      el.tagName === 'TEXTAREA' &&
      key === 'placeholder' && value !== '' && !el.__ieph
    ) {
      var blocker = function (e) {
        e.stopImmediatePropagation();
        el.removeEventListener('input', blocker);
      };
      el.addEventListener('input', blocker);
      // $flow-disable-line
      el.__ieph = true; /* IE placeholder patched */
    }
    el.setAttribute(key, value);
  }
}

var attrs = {
  create: updateAttrs,
  update: updateAttrs
};

/*  */

function updateClass (oldVnode, vnode) {
  var el = vnode.elm;
  var data = vnode.data;
  var oldData = oldVnode.data;
  if (
    isUndef(data.staticClass) &&
    isUndef(data.class) && (
      isUndef(oldData) || (
        isUndef(oldData.staticClass) &&
        isUndef(oldData.class)
      )
    )
  ) {
    return
  }

  var cls = genClassForVnode(vnode);

  // handle transition classes
  var transitionClass = el._transitionClasses;
  if (isDef(transitionClass)) {
    cls = concat(cls, stringifyClass(transitionClass));
  }

  // set the class
  if (cls !== el._prevClass) {
    el.setAttribute('class', cls);
    el._prevClass = cls;
  }
}

var klass = {
  create: updateClass,
  update: updateClass
};

/*  */

var validDivisionCharRE = /[\w).+\-_$\]]/;

function parseFilters (exp) {
  var inSingle = false;
  var inDouble = false;
  var inTemplateString = false;
  var inRegex = false;
  var curly = 0;
  var square = 0;
  var paren = 0;
  var lastFilterIndex = 0;
  var c, prev, i, expression, filters;

  for (i = 0; i < exp.length; i++) {
    prev = c;
    c = exp.charCodeAt(i);
    if (inSingle) {
      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }
    } else if (inDouble) {
      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }
    } else if (inTemplateString) {
      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }
    } else if (inRegex) {
      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }
    } else if (
      c === 0x7C && // pipe
      exp.charCodeAt(i + 1) !== 0x7C &&
      exp.charCodeAt(i - 1) !== 0x7C &&
      !curly && !square && !paren
    ) {
      if (expression === undefined) {
        // first filter, end of expression
        lastFilterIndex = i + 1;
        expression = exp.slice(0, i).trim();
      } else {
        pushFilter();
      }
    } else {
      switch (c) {
        case 0x22: inDouble = true; break         // "
        case 0x27: inSingle = true; break         // '
        case 0x60: inTemplateString = true; break // `
        case 0x28: paren++; break                 // (
        case 0x29: paren--; break                 // )
        case 0x5B: square++; break                // [
        case 0x5D: square--; break                // ]
        case 0x7B: curly++; break                 // {
        case 0x7D: curly--; break                 // }
      }
      if (c === 0x2f) { // /
        var j = i - 1;
        var p = (void 0);
        // find first non-whitespace prev char
        for (; j >= 0; j--) {
          p = exp.charAt(j);
          if (p !== ' ') { break }
        }
        if (!p || !validDivisionCharRE.test(p)) {
          inRegex = true;
        }
      }
    }
  }

  if (expression === undefined) {
    expression = exp.slice(0, i).trim();
  } else if (lastFilterIndex !== 0) {
    pushFilter();
  }

  function pushFilter () {
    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());
    lastFilterIndex = i + 1;
  }

  if (filters) {
    for (i = 0; i < filters.length; i++) {
      expression = wrapFilter(expression, filters[i]);
    }
  }

  return expression
}

function wrapFilter (exp, filter) {
  var i = filter.indexOf('(');
  if (i < 0) {
    // _f: resolveFilter
    return ("_f(\"" + filter + "\")(" + exp + ")")
  } else {
    var name = filter.slice(0, i);
    var args = filter.slice(i + 1);
    return ("_f(\"" + name + "\")(" + exp + (args !== ')' ? ',' + args : args))
  }
}

/*  */



/* eslint-disable no-unused-vars */
function baseWarn (msg, range) {
  console.error(("[Vue compiler]: " + msg));
}
/* eslint-enable no-unused-vars */

function pluckModuleFunction (
  modules,
  key
) {
  return modules
    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })
    : []
}

function addProp (el, name, value, range, dynamic) {
  (el.props || (el.props = [])).push(rangeSetItem({ name: name, value: value, dynamic: dynamic }, range));
  el.plain = false;
}

function addAttr (el, name, value, range, dynamic) {
  var attrs = dynamic
    ? (el.dynamicAttrs || (el.dynamicAttrs = []))
    : (el.attrs || (el.attrs = []));
  attrs.push(rangeSetItem({ name: name, value: value, dynamic: dynamic }, range));
  el.plain = false;
}

// add a raw attr (use this in preTransforms)
function addRawAttr (el, name, value, range) {
  el.attrsMap[name] = value;
  el.attrsList.push(rangeSetItem({ name: name, value: value }, range));
}

function addDirective (
  el,
  name,
  rawName,
  value,
  arg,
  isDynamicArg,
  modifiers,
  range
) {
  (el.directives || (el.directives = [])).push(rangeSetItem({
    name: name,
    rawName: rawName,
    value: value,
    arg: arg,
    isDynamicArg: isDynamicArg,
    modifiers: modifiers
  }, range));
  el.plain = false;
}

function prependModifierMarker (symbol, name, dynamic) {
  return dynamic
    ? ("_p(" + name + ",\"" + symbol + "\")")
    : symbol + name // mark the event as captured
}

function addHandler (
  el,
  name,
  value,
  modifiers,
  important,
  warn,
  range,
  dynamic
) {
  modifiers = modifiers || emptyObject;
  // warn prevent and passive modifier
  /* istanbul ignore if */
  if (
     true && warn &&
    modifiers.prevent && modifiers.passive
  ) {
    warn(
      'passive and prevent can\'t be used together. ' +
      'Passive handler can\'t prevent default event.',
      range
    );
  }

  // normalize click.right and click.middle since they don't actually fire
  // this is technically browser-specific, but at least for now browsers are
  // the only target envs that have right/middle clicks.
  if (modifiers.right) {
    if (dynamic) {
      name = "(" + name + ")==='click'?'contextmenu':(" + name + ")";
    } else if (name === 'click') {
      name = 'contextmenu';
      delete modifiers.right;
    }
  } else if (modifiers.middle) {
    if (dynamic) {
      name = "(" + name + ")==='click'?'mouseup':(" + name + ")";
    } else if (name === 'click') {
      name = 'mouseup';
    }
  }

  // check capture modifier
  if (modifiers.capture) {
    delete modifiers.capture;
    name = prependModifierMarker('!', name, dynamic);
  }
  if (modifiers.once) {
    delete modifiers.once;
    name = prependModifierMarker('~', name, dynamic);
  }
  /* istanbul ignore if */
  if (modifiers.passive) {
    delete modifiers.passive;
    name = prependModifierMarker('&', name, dynamic);
  }

  var events;
  if (modifiers.native) {
    delete modifiers.native;
    events = el.nativeEvents || (el.nativeEvents = {});
  } else {
    events = el.events || (el.events = {});
  }

  var newHandler = rangeSetItem({ value: value.trim(), dynamic: dynamic }, range);
  if (modifiers !== emptyObject) {
    newHandler.modifiers = modifiers;
  }

  var handlers = events[name];
  /* istanbul ignore if */
  if (Array.isArray(handlers)) {
    important ? handlers.unshift(newHandler) : handlers.push(newHandler);
  } else if (handlers) {
    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];
  } else {
    events[name] = newHandler;
  }

  el.plain = false;
}

function getRawBindingAttr (
  el,
  name
) {
  return el.rawAttrsMap[':' + name] ||
    el.rawAttrsMap['v-bind:' + name] ||
    el.rawAttrsMap[name]
}

function getBindingAttr (
  el,
  name,
  getStatic
) {
  var dynamicValue =
    getAndRemoveAttr(el, ':' + name) ||
    getAndRemoveAttr(el, 'v-bind:' + name);
  if (dynamicValue != null) {
    return parseFilters(dynamicValue)
  } else if (getStatic !== false) {
    var staticValue = getAndRemoveAttr(el, name);
    if (staticValue != null) {
      return JSON.stringify(staticValue)
    }
  }
}

// note: this only removes the attr from the Array (attrsList) so that it
// doesn't get processed by processAttrs.
// By default it does NOT remove it from the map (attrsMap) because the map is
// needed during codegen.
function getAndRemoveAttr (
  el,
  name,
  removeFromMap
) {
  var val;
  if ((val = el.attrsMap[name]) != null) {
    var list = el.attrsList;
    for (var i = 0, l = list.length; i < l; i++) {
      if (list[i].name === name) {
        list.splice(i, 1);
        break
      }
    }
  }
  if (removeFromMap) {
    delete el.attrsMap[name];
  }
  return val
}

function getAndRemoveAttrByRegex (
  el,
  name
) {
  var list = el.attrsList;
  for (var i = 0, l = list.length; i < l; i++) {
    var attr = list[i];
    if (name.test(attr.name)) {
      list.splice(i, 1);
      return attr
    }
  }
}

function rangeSetItem (
  item,
  range
) {
  if (range) {
    if (range.start != null) {
      item.start = range.start;
    }
    if (range.end != null) {
      item.end = range.end;
    }
  }
  return item
}

/*  */

/**
 * Cross-platform code generation for component v-model
 */
function genComponentModel (
  el,
  value,
  modifiers
) {
  var ref = modifiers || {};
  var number = ref.number;
  var trim = ref.trim;

  var baseValueExpression = '$$v';
  var valueExpression = baseValueExpression;
  if (trim) {
    valueExpression =
      "(typeof " + baseValueExpression + " === 'string'" +
      "? " + baseValueExpression + ".trim()" +
      ": " + baseValueExpression + ")";
  }
  if (number) {
    valueExpression = "_n(" + valueExpression + ")";
  }
  var assignment = genAssignmentCode(value, valueExpression);

  el.model = {
    value: ("(" + value + ")"),
    expression: JSON.stringify(value),
    callback: ("function (" + baseValueExpression + ") {" + assignment + "}")
  };
}

/**
 * Cross-platform codegen helper for generating v-model value assignment code.
 */
function genAssignmentCode (
  value,
  assignment
) {
  var res = parseModel(value);
  if (res.key === null) {
    return (value + "=" + assignment)
  } else {
    return ("$set(" + (res.exp) + ", " + (res.key) + ", " + assignment + ")")
  }
}

/**
 * Parse a v-model expression into a base path and a final key segment.
 * Handles both dot-path and possible square brackets.
 *
 * Possible cases:
 *
 * - test
 * - test[key]
 * - test[test1[key]]
 * - test["a"][key]
 * - xxx.test[a[a].test1[key]]
 * - test.xxx.a["asa"][test1[key]]
 *
 */

var len, str, chr, index$1, expressionPos, expressionEndPos;



function parseModel (val) {
  // Fix https://github.com/vuejs/vue/pull/7730
  // allow v-model="obj.val " (trailing whitespace)
  val = val.trim();
  len = val.length;

  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {
    index$1 = val.lastIndexOf('.');
    if (index$1 > -1) {
      return {
        exp: val.slice(0, index$1),
        key: '"' + val.slice(index$1 + 1) + '"'
      }
    } else {
      return {
        exp: val,
        key: null
      }
    }
  }

  str = val;
  index$1 = expressionPos = expressionEndPos = 0;

  while (!eof()) {
    chr = next();
    /* istanbul ignore if */
    if (isStringStart(chr)) {
      parseString(chr);
    } else if (chr === 0x5B) {
      parseBracket(chr);
    }
  }

  return {
    exp: val.slice(0, expressionPos),
    key: val.slice(expressionPos + 1, expressionEndPos)
  }
}

function next () {
  return str.charCodeAt(++index$1)
}

function eof () {
  return index$1 >= len
}

function isStringStart (chr) {
  return chr === 0x22 || chr === 0x27
}

function parseBracket (chr) {
  var inBracket = 1;
  expressionPos = index$1;
  while (!eof()) {
    chr = next();
    if (isStringStart(chr)) {
      parseString(chr);
      continue
    }
    if (chr === 0x5B) { inBracket++; }
    if (chr === 0x5D) { inBracket--; }
    if (inBracket === 0) {
      expressionEndPos = index$1;
      break
    }
  }
}

function parseString (chr) {
  var stringQuote = chr;
  while (!eof()) {
    chr = next();
    if (chr === stringQuote) {
      break
    }
  }
}

/*  */

var warn$1;

// in some cases, the event used has to be determined at runtime
// so we used some reserved tokens during compile.
var RANGE_TOKEN = '__r';
var CHECKBOX_RADIO_TOKEN = '__c';

function model (
  el,
  dir,
  _warn
) {
  warn$1 = _warn;
  var value = dir.value;
  var modifiers = dir.modifiers;
  var tag = el.tag;
  var type = el.attrsMap.type;

  if (true) {
    // inputs with type="file" are read only and setting the input's
    // value will throw an error.
    if (tag === 'input' && type === 'file') {
      warn$1(
        "<" + (el.tag) + " v-model=\"" + value + "\" type=\"file\">:\n" +
        "File inputs are read only. Use a v-on:change listener instead.",
        el.rawAttrsMap['v-model']
      );
    }
  }

  if (el.component) {
    genComponentModel(el, value, modifiers);
    // component v-model doesn't need extra runtime
    return false
  } else if (tag === 'select') {
    genSelect(el, value, modifiers);
  } else if (tag === 'input' && type === 'checkbox') {
    genCheckboxModel(el, value, modifiers);
  } else if (tag === 'input' && type === 'radio') {
    genRadioModel(el, value, modifiers);
  } else if (tag === 'input' || tag === 'textarea') {
    genDefaultModel(el, value, modifiers);
  } else if (!config.isReservedTag(tag)) {
    genComponentModel(el, value, modifiers);
    // component v-model doesn't need extra runtime
    return false
  } else if (true) {
    warn$1(
      "<" + (el.tag) + " v-model=\"" + value + "\">: " +
      "v-model is not supported on this element type. " +
      'If you are working with contenteditable, it\'s recommended to ' +
      'wrap a library dedicated for that purpose inside a custom component.',
      el.rawAttrsMap['v-model']
    );
  }

  // ensure runtime directive metadata
  return true
}

function genCheckboxModel (
  el,
  value,
  modifiers
) {
  var number = modifiers && modifiers.number;
  var valueBinding = getBindingAttr(el, 'value') || 'null';
  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';
  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';
  addProp(el, 'checked',
    "Array.isArray(" + value + ")" +
    "?_i(" + value + "," + valueBinding + ")>-1" + (
      trueValueBinding === 'true'
        ? (":(" + value + ")")
        : (":_q(" + value + "," + trueValueBinding + ")")
    )
  );
  addHandler(el, 'change',
    "var $$a=" + value + "," +
        '$$el=$event.target,' +
        "$$c=$$el.checked?(" + trueValueBinding + "):(" + falseValueBinding + ");" +
    'if(Array.isArray($$a)){' +
      "var $$v=" + (number ? '_n(' + valueBinding + ')' : valueBinding) + "," +
          '$$i=_i($$a,$$v);' +
      "if($$el.checked){$$i<0&&(" + (genAssignmentCode(value, '$$a.concat([$$v])')) + ")}" +
      "else{$$i>-1&&(" + (genAssignmentCode(value, '$$a.slice(0,$$i).concat($$a.slice($$i+1))')) + ")}" +
    "}else{" + (genAssignmentCode(value, '$$c')) + "}",
    null, true
  );
}

function genRadioModel (
  el,
  value,
  modifiers
) {
  var number = modifiers && modifiers.number;
  var valueBinding = getBindingAttr(el, 'value') || 'null';
  valueBinding = number ? ("_n(" + valueBinding + ")") : valueBinding;
  addProp(el, 'checked', ("_q(" + value + "," + valueBinding + ")"));
  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);
}

function genSelect (
  el,
  value,
  modifiers
) {
  var number = modifiers && modifiers.number;
  var selectedVal = "Array.prototype.filter" +
    ".call($event.target.options,function(o){return o.selected})" +
    ".map(function(o){var val = \"_value\" in o ? o._value : o.value;" +
    "return " + (number ? '_n(val)' : 'val') + "})";

  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';
  var code = "var $$selectedVal = " + selectedVal + ";";
  code = code + " " + (genAssignmentCode(value, assignment));
  addHandler(el, 'change', code, null, true);
}

function genDefaultModel (
  el,
  value,
  modifiers
) {
  var type = el.attrsMap.type;

  // warn if v-bind:value conflicts with v-model
  // except for inputs with v-bind:type
  if (true) {
    var value$1 = el.attrsMap['v-bind:value'] || el.attrsMap[':value'];
    var typeBinding = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];
    if (value$1 && !typeBinding) {
      var binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value';
      warn$1(
        binding + "=\"" + value$1 + "\" conflicts with v-model on the same element " +
        'because the latter already expands to a value binding internally',
        el.rawAttrsMap[binding]
      );
    }
  }

  var ref = modifiers || {};
  var lazy = ref.lazy;
  var number = ref.number;
  var trim = ref.trim;
  var needCompositionGuard = !lazy && type !== 'range';
  var event = lazy
    ? 'change'
    : type === 'range'
      ? RANGE_TOKEN
      : 'input';

  var valueExpression = '$event.target.value';
  if (trim) {
    valueExpression = "$event.target.value.trim()";
  }
  if (number) {
    valueExpression = "_n(" + valueExpression + ")";
  }

  var code = genAssignmentCode(value, valueExpression);
  if (needCompositionGuard) {
    code = "if($event.target.composing)return;" + code;
  }

  addProp(el, 'value', ("(" + value + ")"));
  addHandler(el, event, code, null, true);
  if (trim || number) {
    addHandler(el, 'blur', '$forceUpdate()');
  }
}

/*  */

// normalize v-model event tokens that can only be determined at runtime.
// it's important to place the event as the first in the array because
// the whole point is ensuring the v-model callback gets called before
// user-attached handlers.
function normalizeEvents (on) {
  /* istanbul ignore if */
  if (isDef(on[RANGE_TOKEN])) {
    // IE input[type=range] only supports `change` event
    var event = isIE ? 'change' : 'input';
    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);
    delete on[RANGE_TOKEN];
  }
  // This was originally intended to fix #4521 but no longer necessary
  // after 2.5. Keeping it for backwards compat with generated code from < 2.4
  /* istanbul ignore if */
  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {
    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);
    delete on[CHECKBOX_RADIO_TOKEN];
  }
}

var target$1;

function createOnceHandler$1 (event, handler, capture) {
  var _target = target$1; // save current target element in closure
  return function onceHandler () {
    var res = handler.apply(null, arguments);
    if (res !== null) {
      remove$2(event, onceHandler, capture, _target);
    }
  }
}

// #9446: Firefox <= 53 (in particular, ESR 52) has incorrect Event.timeStamp
// implementation and does not fire microtasks in between event propagation, so
// safe to exclude.
var useMicrotaskFix = isUsingMicroTask && !(isFF && Number(isFF[1]) <= 53);

function add$1 (
  name,
  handler,
  capture,
  passive
) {
  // async edge case #6566: inner click event triggers patch, event handler
  // attached to outer element during patch, and triggered again. This
  // happens because browsers fire microtask ticks between event propagation.
  // the solution is simple: we save the timestamp when a handler is attached,
  // and the handler would only fire if the event passed to it was fired
  // AFTER it was attached.
  if (useMicrotaskFix) {
    var attachedTimestamp = currentFlushTimestamp;
    var original = handler;
    handler = original._wrapper = function (e) {
      if (
        // no bubbling, should always fire.
        // this is just a safety net in case event.timeStamp is unreliable in
        // certain weird environments...
        e.target === e.currentTarget ||
        // event is fired after handler attachment
        e.timeStamp >= attachedTimestamp ||
        // bail for environments that have buggy event.timeStamp implementations
        // #9462 iOS 9 bug: event.timeStamp is 0 after history.pushState
        // #9681 QtWebEngine event.timeStamp is negative value
        e.timeStamp <= 0 ||
        // #9448 bail if event is fired in another document in a multi-page
        // electron/nw.js app, since event.timeStamp will be using a different
        // starting reference
        e.target.ownerDocument !== document
      ) {
        return original.apply(this, arguments)
      }
    };
  }
  target$1.addEventListener(
    name,
    handler,
    supportsPassive
      ? { capture: capture, passive: passive }
      : capture
  );
}

function remove$2 (
  name,
  handler,
  capture,
  _target
) {
  (_target || target$1).removeEventListener(
    name,
    handler._wrapper || handler,
    capture
  );
}

function updateDOMListeners (oldVnode, vnode) {
  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {
    return
  }
  var on = vnode.data.on || {};
  var oldOn = oldVnode.data.on || {};
  target$1 = vnode.elm;
  normalizeEvents(on);
  updateListeners(on, oldOn, add$1, remove$2, createOnceHandler$1, vnode.context);
  target$1 = undefined;
}

var events = {
  create: updateDOMListeners,
  update: updateDOMListeners
};

/*  */

var svgContainer;

function updateDOMProps (oldVnode, vnode) {
  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {
    return
  }
  var key, cur;
  var elm = vnode.elm;
  var oldProps = oldVnode.data.domProps || {};
  var props = vnode.data.domProps || {};
  // clone observed objects, as the user probably wants to mutate it
  if (isDef(props.__ob__)) {
    props = vnode.data.domProps = extend({}, props);
  }

  for (key in oldProps) {
    if (!(key in props)) {
      elm[key] = '';
    }
  }

  for (key in props) {
    cur = props[key];
    // ignore children if the node has textContent or innerHTML,
    // as these will throw away existing DOM nodes and cause removal errors
    // on subsequent patches (#3360)
    if (key === 'textContent' || key === 'innerHTML') {
      if (vnode.children) { vnode.children.length = 0; }
      if (cur === oldProps[key]) { continue }
      // #6601 work around Chrome version <= 55 bug where single textNode
      // replaced by innerHTML/textContent retains its parentNode property
      if (elm.childNodes.length === 1) {
        elm.removeChild(elm.childNodes[0]);
      }
    }

    if (key === 'value' && elm.tagName !== 'PROGRESS') {
      // store value as _value as well since
      // non-string values will be stringified
      elm._value = cur;
      // avoid resetting cursor position when value is the same
      var strCur = isUndef(cur) ? '' : String(cur);
      if (shouldUpdateValue(elm, strCur)) {
        elm.value = strCur;
      }
    } else if (key === 'innerHTML' && isSVG(elm.tagName) && isUndef(elm.innerHTML)) {
      // IE doesn't support innerHTML for SVG elements
      svgContainer = svgContainer || document.createElement('div');
      svgContainer.innerHTML = "<svg>" + cur + "</svg>";
      var svg = svgContainer.firstChild;
      while (elm.firstChild) {
        elm.removeChild(elm.firstChild);
      }
      while (svg.firstChild) {
        elm.appendChild(svg.firstChild);
      }
    } else if (
      // skip the update if old and new VDOM state is the same.
      // `value` is handled separately because the DOM value may be temporarily
      // out of sync with VDOM state due to focus, composition and modifiers.
      // This  #4521 by skipping the unnecessary `checked` update.
      cur !== oldProps[key]
    ) {
      // some property updates can throw
      // e.g. `value` on <progress> w/ non-finite value
      try {
        elm[key] = cur;
      } catch (e) {}
    }
  }
}

// check platforms/web/util/attrs.js acceptValue


function shouldUpdateValue (elm, checkVal) {
  return (!elm.composing && (
    elm.tagName === 'OPTION' ||
    isNotInFocusAndDirty(elm, checkVal) ||
    isDirtyWithModifiers(elm, checkVal)
  ))
}

function isNotInFocusAndDirty (elm, checkVal) {
  // return true when textbox (.number and .trim) loses focus and its value is
  // not equal to the updated value
  var notInFocus = true;
  // #6157
  // work around IE bug when accessing document.activeElement in an iframe
  try { notInFocus = document.activeElement !== elm; } catch (e) {}
  return notInFocus && elm.value !== checkVal
}

function isDirtyWithModifiers (elm, newVal) {
  var value = elm.value;
  var modifiers = elm._vModifiers; // injected by v-model runtime
  if (isDef(modifiers)) {
    if (modifiers.number) {
      return toNumber(value) !== toNumber(newVal)
    }
    if (modifiers.trim) {
      return value.trim() !== newVal.trim()
    }
  }
  return value !== newVal
}

var domProps = {
  create: updateDOMProps,
  update: updateDOMProps
};

/*  */

var parseStyleText = cached(function (cssText) {
  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function (item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);
      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
    }
  });
  return res
});

// merge static and dynamic style data on the same vnode
function normalizeStyleData (data) {
  var style = normalizeStyleBinding(data.style);
  // static style is pre-processed into an object during compilation
  // and is always a fresh object, so it's safe to merge into it
  return data.staticStyle
    ? extend(data.staticStyle, style)
    : style
}

// normalize possible array / string values into Object
function normalizeStyleBinding (bindingStyle) {
  if (Array.isArray(bindingStyle)) {
    return toObject(bindingStyle)
  }
  if (typeof bindingStyle === 'string') {
    return parseStyleText(bindingStyle)
  }
  return bindingStyle
}

/**
 * parent component style should be after child's
 * so that parent component's style could override it
 */
function getStyle (vnode, checkChild) {
  var res = {};
  var styleData;

  if (checkChild) {
    var childNode = vnode;
    while (childNode.componentInstance) {
      childNode = childNode.componentInstance._vnode;
      if (
        childNode && childNode.data &&
        (styleData = normalizeStyleData(childNode.data))
      ) {
        extend(res, styleData);
      }
    }
  }

  if ((styleData = normalizeStyleData(vnode.data))) {
    extend(res, styleData);
  }

  var parentNode = vnode;
  while ((parentNode = parentNode.parent)) {
    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {
      extend(res, styleData);
    }
  }
  return res
}

/*  */

var cssVarRE = /^--/;
var importantRE = /\s*!important$/;
var setProp = function (el, name, val) {
  /* istanbul ignore if */
  if (cssVarRE.test(name)) {
    el.style.setProperty(name, val);
  } else if (importantRE.test(val)) {
    el.style.setProperty(hyphenate(name), val.replace(importantRE, ''), 'important');
  } else {
    var normalizedName = normalize(name);
    if (Array.isArray(val)) {
      // Support values array created by autoprefixer, e.g.
      // {display: ["-webkit-box", "-ms-flexbox", "flex"]}
      // Set them one by one, and the browser will only set those it can recognize
      for (var i = 0, len = val.length; i < len; i++) {
        el.style[normalizedName] = val[i];
      }
    } else {
      el.style[normalizedName] = val;
    }
  }
};

var vendorNames = ['Webkit', 'Moz', 'ms'];

var emptyStyle;
var normalize = cached(function (prop) {
  emptyStyle = emptyStyle || document.createElement('div').style;
  prop = camelize(prop);
  if (prop !== 'filter' && (prop in emptyStyle)) {
    return prop
  }
  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);
  for (var i = 0; i < vendorNames.length; i++) {
    var name = vendorNames[i] + capName;
    if (name in emptyStyle) {
      return name
    }
  }
});

function updateStyle (oldVnode, vnode) {
  var data = vnode.data;
  var oldData = oldVnode.data;

  if (isUndef(data.staticStyle) && isUndef(data.style) &&
    isUndef(oldData.staticStyle) && isUndef(oldData.style)
  ) {
    return
  }

  var cur, name;
  var el = vnode.elm;
  var oldStaticStyle = oldData.staticStyle;
  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};

  // if static style exists, stylebinding already merged into it when doing normalizeStyleData
  var oldStyle = oldStaticStyle || oldStyleBinding;

  var style = normalizeStyleBinding(vnode.data.style) || {};

  // store normalized style under a different key for next diff
  // make sure to clone it if it's reactive, since the user likely wants
  // to mutate it.
  vnode.data.normalizedStyle = isDef(style.__ob__)
    ? extend({}, style)
    : style;

  var newStyle = getStyle(vnode, true);

  for (name in oldStyle) {
    if (isUndef(newStyle[name])) {
      setProp(el, name, '');
    }
  }
  for (name in newStyle) {
    cur = newStyle[name];
    if (cur !== oldStyle[name]) {
      // ie9 setting to null has no effect, must use empty string
      setProp(el, name, cur == null ? '' : cur);
    }
  }
}

var style = {
  create: updateStyle,
  update: updateStyle
};

/*  */

var whitespaceRE = /\s+/;

/**
 * Add class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */
function addClass (el, cls) {
  /* istanbul ignore if */
  if (!cls || !(cls = cls.trim())) {
    return
  }

  /* istanbul ignore else */
  if (el.classList) {
    if (cls.indexOf(' ') > -1) {
      cls.split(whitespaceRE).forEach(function (c) { return el.classList.add(c); });
    } else {
      el.classList.add(cls);
    }
  } else {
    var cur = " " + (el.getAttribute('class') || '') + " ";
    if (cur.indexOf(' ' + cls + ' ') < 0) {
      el.setAttribute('class', (cur + cls).trim());
    }
  }
}

/**
 * Remove class with compatibility for SVG since classList is not supported on
 * SVG elements in IE
 */
function removeClass (el, cls) {
  /* istanbul ignore if */
  if (!cls || !(cls = cls.trim())) {
    return
  }

  /* istanbul ignore else */
  if (el.classList) {
    if (cls.indexOf(' ') > -1) {
      cls.split(whitespaceRE).forEach(function (c) { return el.classList.remove(c); });
    } else {
      el.classList.remove(cls);
    }
    if (!el.classList.length) {
      el.removeAttribute('class');
    }
  } else {
    var cur = " " + (el.getAttribute('class') || '') + " ";
    var tar = ' ' + cls + ' ';
    while (cur.indexOf(tar) >= 0) {
      cur = cur.replace(tar, ' ');
    }
    cur = cur.trim();
    if (cur) {
      el.setAttribute('class', cur);
    } else {
      el.removeAttribute('class');
    }
  }
}

/*  */

function resolveTransition (def$$1) {
  if (!def$$1) {
    return
  }
  /* istanbul ignore else */
  if (typeof def$$1 === 'object') {
    var res = {};
    if (def$$1.css !== false) {
      extend(res, autoCssTransition(def$$1.name || 'v'));
    }
    extend(res, def$$1);
    return res
  } else if (typeof def$$1 === 'string') {
    return autoCssTransition(def$$1)
  }
}

var autoCssTransition = cached(function (name) {
  return {
    enterClass: (name + "-enter"),
    enterToClass: (name + "-enter-to"),
    enterActiveClass: (name + "-enter-active"),
    leaveClass: (name + "-leave"),
    leaveToClass: (name + "-leave-to"),
    leaveActiveClass: (name + "-leave-active")
  }
});

var hasTransition = inBrowser && !isIE9;
var TRANSITION = 'transition';
var ANIMATION = 'animation';

// Transition property/event sniffing
var transitionProp = 'transition';
var transitionEndEvent = 'transitionend';
var animationProp = 'animation';
var animationEndEvent = 'animationend';
if (hasTransition) {
  /* istanbul ignore if */
  if (window.ontransitionend === undefined &&
    window.onwebkittransitionend !== undefined
  ) {
    transitionProp = 'WebkitTransition';
    transitionEndEvent = 'webkitTransitionEnd';
  }
  if (window.onanimationend === undefined &&
    window.onwebkitanimationend !== undefined
  ) {
    animationProp = 'WebkitAnimation';
    animationEndEvent = 'webkitAnimationEnd';
  }
}

// binding to window is necessary to make hot reload work in IE in strict mode
var raf = inBrowser
  ? window.requestAnimationFrame
    ? window.requestAnimationFrame.bind(window)
    : setTimeout
  : /* istanbul ignore next */ function (fn) { return fn(); };

function nextFrame (fn) {
  raf(function () {
    raf(fn);
  });
}

function addTransitionClass (el, cls) {
  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);
  if (transitionClasses.indexOf(cls) < 0) {
    transitionClasses.push(cls);
    addClass(el, cls);
  }
}

function removeTransitionClass (el, cls) {
  if (el._transitionClasses) {
    remove(el._transitionClasses, cls);
  }
  removeClass(el, cls);
}

function whenTransitionEnds (
  el,
  expectedType,
  cb
) {
  var ref = getTransitionInfo(el, expectedType);
  var type = ref.type;
  var timeout = ref.timeout;
  var propCount = ref.propCount;
  if (!type) { return cb() }
  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;
  var ended = 0;
  var end = function () {
    el.removeEventListener(event, onEnd);
    cb();
  };
  var onEnd = function (e) {
    if (e.target === el) {
      if (++ended >= propCount) {
        end();
      }
    }
  };
  setTimeout(function () {
    if (ended < propCount) {
      end();
    }
  }, timeout + 1);
  el.addEventListener(event, onEnd);
}

var transformRE = /\b(transform|all)(,|$)/;

function getTransitionInfo (el, expectedType) {
  var styles = window.getComputedStyle(el);
  // JSDOM may return undefined for transition properties
  var transitionDelays = (styles[transitionProp + 'Delay'] || '').split(', ');
  var transitionDurations = (styles[transitionProp + 'Duration'] || '').split(', ');
  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);
  var animationDelays = (styles[animationProp + 'Delay'] || '').split(', ');
  var animationDurations = (styles[animationProp + 'Duration'] || '').split(', ');
  var animationTimeout = getTimeout(animationDelays, animationDurations);

  var type;
  var timeout = 0;
  var propCount = 0;
  /* istanbul ignore if */
  if (expectedType === TRANSITION) {
    if (transitionTimeout > 0) {
      type = TRANSITION;
      timeout = transitionTimeout;
      propCount = transitionDurations.length;
    }
  } else if (expectedType === ANIMATION) {
    if (animationTimeout > 0) {
      type = ANIMATION;
      timeout = animationTimeout;
      propCount = animationDurations.length;
    }
  } else {
    timeout = Math.max(transitionTimeout, animationTimeout);
    type = timeout > 0
      ? transitionTimeout > animationTimeout
        ? TRANSITION
        : ANIMATION
      : null;
    propCount = type
      ? type === TRANSITION
        ? transitionDurations.length
        : animationDurations.length
      : 0;
  }
  var hasTransform =
    type === TRANSITION &&
    transformRE.test(styles[transitionProp + 'Property']);
  return {
    type: type,
    timeout: timeout,
    propCount: propCount,
    hasTransform: hasTransform
  }
}

function getTimeout (delays, durations) {
  /* istanbul ignore next */
  while (delays.length < durations.length) {
    delays = delays.concat(delays);
  }

  return Math.max.apply(null, durations.map(function (d, i) {
    return toMs(d) + toMs(delays[i])
  }))
}

// Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers
// in a locale-dependent way, using a comma instead of a dot.
// If comma is not replaced with a dot, the input will be rounded down (i.e. acting
// as a floor function) causing unexpected behaviors
function toMs (s) {
  return Number(s.slice(0, -1).replace(',', '.')) * 1000
}

/*  */

function enter (vnode, toggleDisplay) {
  var el = vnode.elm;

  // call leave callback now
  if (isDef(el._leaveCb)) {
    el._leaveCb.cancelled = true;
    el._leaveCb();
  }

  var data = resolveTransition(vnode.data.transition);
  if (isUndef(data)) {
    return
  }

  /* istanbul ignore if */
  if (isDef(el._enterCb) || el.nodeType !== 1) {
    return
  }

  var css = data.css;
  var type = data.type;
  var enterClass = data.enterClass;
  var enterToClass = data.enterToClass;
  var enterActiveClass = data.enterActiveClass;
  var appearClass = data.appearClass;
  var appearToClass = data.appearToClass;
  var appearActiveClass = data.appearActiveClass;
  var beforeEnter = data.beforeEnter;
  var enter = data.enter;
  var afterEnter = data.afterEnter;
  var enterCancelled = data.enterCancelled;
  var beforeAppear = data.beforeAppear;
  var appear = data.appear;
  var afterAppear = data.afterAppear;
  var appearCancelled = data.appearCancelled;
  var duration = data.duration;

  // activeInstance will always be the <transition> component managing this
  // transition. One edge case to check is when the <transition> is placed
  // as the root node of a child component. In that case we need to check
  // <transition>'s parent for appear check.
  var context = activeInstance;
  var transitionNode = activeInstance.$vnode;
  while (transitionNode && transitionNode.parent) {
    context = transitionNode.context;
    transitionNode = transitionNode.parent;
  }

  var isAppear = !context._isMounted || !vnode.isRootInsert;

  if (isAppear && !appear && appear !== '') {
    return
  }

  var startClass = isAppear && appearClass
    ? appearClass
    : enterClass;
  var activeClass = isAppear && appearActiveClass
    ? appearActiveClass
    : enterActiveClass;
  var toClass = isAppear && appearToClass
    ? appearToClass
    : enterToClass;

  var beforeEnterHook = isAppear
    ? (beforeAppear || beforeEnter)
    : beforeEnter;
  var enterHook = isAppear
    ? (typeof appear === 'function' ? appear : enter)
    : enter;
  var afterEnterHook = isAppear
    ? (afterAppear || afterEnter)
    : afterEnter;
  var enterCancelledHook = isAppear
    ? (appearCancelled || enterCancelled)
    : enterCancelled;

  var explicitEnterDuration = toNumber(
    isObject(duration)
      ? duration.enter
      : duration
  );

  if ( true && explicitEnterDuration != null) {
    checkDuration(explicitEnterDuration, 'enter', vnode);
  }

  var expectsCSS = css !== false && !isIE9;
  var userWantsControl = getHookArgumentsLength(enterHook);

  var cb = el._enterCb = once(function () {
    if (expectsCSS) {
      removeTransitionClass(el, toClass);
      removeTransitionClass(el, activeClass);
    }
    if (cb.cancelled) {
      if (expectsCSS) {
        removeTransitionClass(el, startClass);
      }
      enterCancelledHook && enterCancelledHook(el);
    } else {
      afterEnterHook && afterEnterHook(el);
    }
    el._enterCb = null;
  });

  if (!vnode.data.show) {
    // remove pending leave element on enter by injecting an insert hook
    mergeVNodeHook(vnode, 'insert', function () {
      var parent = el.parentNode;
      var pendingNode = parent && parent._pending && parent._pending[vnode.key];
      if (pendingNode &&
        pendingNode.tag === vnode.tag &&
        pendingNode.elm._leaveCb
      ) {
        pendingNode.elm._leaveCb();
      }
      enterHook && enterHook(el, cb);
    });
  }

  // start enter transition
  beforeEnterHook && beforeEnterHook(el);
  if (expectsCSS) {
    addTransitionClass(el, startClass);
    addTransitionClass(el, activeClass);
    nextFrame(function () {
      removeTransitionClass(el, startClass);
      if (!cb.cancelled) {
        addTransitionClass(el, toClass);
        if (!userWantsControl) {
          if (isValidDuration(explicitEnterDuration)) {
            setTimeout(cb, explicitEnterDuration);
          } else {
            whenTransitionEnds(el, type, cb);
          }
        }
      }
    });
  }

  if (vnode.data.show) {
    toggleDisplay && toggleDisplay();
    enterHook && enterHook(el, cb);
  }

  if (!expectsCSS && !userWantsControl) {
    cb();
  }
}

function leave (vnode, rm) {
  var el = vnode.elm;

  // call enter callback now
  if (isDef(el._enterCb)) {
    el._enterCb.cancelled = true;
    el._enterCb();
  }

  var data = resolveTransition(vnode.data.transition);
  if (isUndef(data) || el.nodeType !== 1) {
    return rm()
  }

  /* istanbul ignore if */
  if (isDef(el._leaveCb)) {
    return
  }

  var css = data.css;
  var type = data.type;
  var leaveClass = data.leaveClass;
  var leaveToClass = data.leaveToClass;
  var leaveActiveClass = data.leaveActiveClass;
  var beforeLeave = data.beforeLeave;
  var leave = data.leave;
  var afterLeave = data.afterLeave;
  var leaveCancelled = data.leaveCancelled;
  var delayLeave = data.delayLeave;
  var duration = data.duration;

  var expectsCSS = css !== false && !isIE9;
  var userWantsControl = getHookArgumentsLength(leave);

  var explicitLeaveDuration = toNumber(
    isObject(duration)
      ? duration.leave
      : duration
  );

  if ( true && isDef(explicitLeaveDuration)) {
    checkDuration(explicitLeaveDuration, 'leave', vnode);
  }

  var cb = el._leaveCb = once(function () {
    if (el.parentNode && el.parentNode._pending) {
      el.parentNode._pending[vnode.key] = null;
    }
    if (expectsCSS) {
      removeTransitionClass(el, leaveToClass);
      removeTransitionClass(el, leaveActiveClass);
    }
    if (cb.cancelled) {
      if (expectsCSS) {
        removeTransitionClass(el, leaveClass);
      }
      leaveCancelled && leaveCancelled(el);
    } else {
      rm();
      afterLeave && afterLeave(el);
    }
    el._leaveCb = null;
  });

  if (delayLeave) {
    delayLeave(performLeave);
  } else {
    performLeave();
  }

  function performLeave () {
    // the delayed leave may have already been cancelled
    if (cb.cancelled) {
      return
    }
    // record leaving element
    if (!vnode.data.show && el.parentNode) {
      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;
    }
    beforeLeave && beforeLeave(el);
    if (expectsCSS) {
      addTransitionClass(el, leaveClass);
      addTransitionClass(el, leaveActiveClass);
      nextFrame(function () {
        removeTransitionClass(el, leaveClass);
        if (!cb.cancelled) {
          addTransitionClass(el, leaveToClass);
          if (!userWantsControl) {
            if (isValidDuration(explicitLeaveDuration)) {
              setTimeout(cb, explicitLeaveDuration);
            } else {
              whenTransitionEnds(el, type, cb);
            }
          }
        }
      });
    }
    leave && leave(el, cb);
    if (!expectsCSS && !userWantsControl) {
      cb();
    }
  }
}

// only used in dev mode
function checkDuration (val, name, vnode) {
  if (typeof val !== 'number') {
    warn(
      "<transition> explicit " + name + " duration is not a valid number - " +
      "got " + (JSON.stringify(val)) + ".",
      vnode.context
    );
  } else if (isNaN(val)) {
    warn(
      "<transition> explicit " + name + " duration is NaN - " +
      'the duration expression might be incorrect.',
      vnode.context
    );
  }
}

function isValidDuration (val) {
  return typeof val === 'number' && !isNaN(val)
}

/**
 * Normalize a transition hook's argument length. The hook may be:
 * - a merged hook (invoker) with the original in .fns
 * - a wrapped component method (check ._length)
 * - a plain function (.length)
 */
function getHookArgumentsLength (fn) {
  if (isUndef(fn)) {
    return false
  }
  var invokerFns = fn.fns;
  if (isDef(invokerFns)) {
    // invoker
    return getHookArgumentsLength(
      Array.isArray(invokerFns)
        ? invokerFns[0]
        : invokerFns
    )
  } else {
    return (fn._length || fn.length) > 1
  }
}

function _enter (_, vnode) {
  if (vnode.data.show !== true) {
    enter(vnode);
  }
}

var transition = inBrowser ? {
  create: _enter,
  activate: _enter,
  remove: function remove$$1 (vnode, rm) {
    /* istanbul ignore else */
    if (vnode.data.show !== true) {
      leave(vnode, rm);
    } else {
      rm();
    }
  }
} : {};

var platformModules = [
  attrs,
  klass,
  events,
  domProps,
  style,
  transition
];

/*  */

// the directive module should be applied last, after all
// built-in modules have been applied.
var modules = platformModules.concat(baseModules);

var patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });

/**
 * Not type checking this file because flow doesn't like attaching
 * properties to Elements.
 */

/* istanbul ignore if */
if (isIE9) {
  // http://www.matts411.com/post/internet-explorer-9-oninput/
  document.addEventListener('selectionchange', function () {
    var el = document.activeElement;
    if (el && el.vmodel) {
      trigger(el, 'input');
    }
  });
}

var directive = {
  inserted: function inserted (el, binding, vnode, oldVnode) {
    if (vnode.tag === 'select') {
      // #6903
      if (oldVnode.elm && !oldVnode.elm._vOptions) {
        mergeVNodeHook(vnode, 'postpatch', function () {
          directive.componentUpdated(el, binding, vnode);
        });
      } else {
        setSelected(el, binding, vnode.context);
      }
      el._vOptions = [].map.call(el.options, getValue);
    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {
      el._vModifiers = binding.modifiers;
      if (!binding.modifiers.lazy) {
        el.addEventListener('compositionstart', onCompositionStart);
        el.addEventListener('compositionend', onCompositionEnd);
        // Safari < 10.2 & UIWebView doesn't fire compositionend when
        // switching focus before confirming composition choice
        // this also fixes the issue where some browsers e.g. iOS Chrome
        // fires "change" instead of "input" on autocomplete.
        el.addEventListener('change', onCompositionEnd);
        /* istanbul ignore if */
        if (isIE9) {
          el.vmodel = true;
        }
      }
    }
  },

  componentUpdated: function componentUpdated (el, binding, vnode) {
    if (vnode.tag === 'select') {
      setSelected(el, binding, vnode.context);
      // in case the options rendered by v-for have changed,
      // it's possible that the value is out-of-sync with the rendered options.
      // detect such cases and filter out values that no longer has a matching
      // option in the DOM.
      var prevOptions = el._vOptions;
      var curOptions = el._vOptions = [].map.call(el.options, getValue);
      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {
        // trigger change event if
        // no matching option found for at least one value
        var needReset = el.multiple
          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })
          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);
        if (needReset) {
          trigger(el, 'change');
        }
      }
    }
  }
};

function setSelected (el, binding, vm) {
  actuallySetSelected(el, binding, vm);
  /* istanbul ignore if */
  if (isIE || isEdge) {
    setTimeout(function () {
      actuallySetSelected(el, binding, vm);
    }, 0);
  }
}

function actuallySetSelected (el, binding, vm) {
  var value = binding.value;
  var isMultiple = el.multiple;
  if (isMultiple && !Array.isArray(value)) {
     true && warn(
      "<select multiple v-model=\"" + (binding.expression) + "\"> " +
      "expects an Array value for its binding, but got " + (Object.prototype.toString.call(value).slice(8, -1)),
      vm
    );
    return
  }
  var selected, option;
  for (var i = 0, l = el.options.length; i < l; i++) {
    option = el.options[i];
    if (isMultiple) {
      selected = looseIndexOf(value, getValue(option)) > -1;
      if (option.selected !== selected) {
        option.selected = selected;
      }
    } else {
      if (looseEqual(getValue(option), value)) {
        if (el.selectedIndex !== i) {
          el.selectedIndex = i;
        }
        return
      }
    }
  }
  if (!isMultiple) {
    el.selectedIndex = -1;
  }
}

function hasNoMatchingOption (value, options) {
  return options.every(function (o) { return !looseEqual(o, value); })
}

function getValue (option) {
  return '_value' in option
    ? option._value
    : option.value
}

function onCompositionStart (e) {
  e.target.composing = true;
}

function onCompositionEnd (e) {
  // prevent triggering an input event for no reason
  if (!e.target.composing) { return }
  e.target.composing = false;
  trigger(e.target, 'input');
}

function trigger (el, type) {
  var e = document.createEvent('HTMLEvents');
  e.initEvent(type, true, true);
  el.dispatchEvent(e);
}

/*  */

// recursively search for possible transition defined inside the component root
function locateNode (vnode) {
  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)
    ? locateNode(vnode.componentInstance._vnode)
    : vnode
}

var show = {
  bind: function bind (el, ref, vnode) {
    var value = ref.value;

    vnode = locateNode(vnode);
    var transition$$1 = vnode.data && vnode.data.transition;
    var originalDisplay = el.__vOriginalDisplay =
      el.style.display === 'none' ? '' : el.style.display;
    if (value && transition$$1) {
      vnode.data.show = true;
      enter(vnode, function () {
        el.style.display = originalDisplay;
      });
    } else {
      el.style.display = value ? originalDisplay : 'none';
    }
  },

  update: function update (el, ref, vnode) {
    var value = ref.value;
    var oldValue = ref.oldValue;

    /* istanbul ignore if */
    if (!value === !oldValue) { return }
    vnode = locateNode(vnode);
    var transition$$1 = vnode.data && vnode.data.transition;
    if (transition$$1) {
      vnode.data.show = true;
      if (value) {
        enter(vnode, function () {
          el.style.display = el.__vOriginalDisplay;
        });
      } else {
        leave(vnode, function () {
          el.style.display = 'none';
        });
      }
    } else {
      el.style.display = value ? el.__vOriginalDisplay : 'none';
    }
  },

  unbind: function unbind (
    el,
    binding,
    vnode,
    oldVnode,
    isDestroy
  ) {
    if (!isDestroy) {
      el.style.display = el.__vOriginalDisplay;
    }
  }
};

var platformDirectives = {
  model: directive,
  show: show
};

/*  */

var transitionProps = {
  name: String,
  appear: Boolean,
  css: Boolean,
  mode: String,
  type: String,
  enterClass: String,
  leaveClass: String,
  enterToClass: String,
  leaveToClass: String,
  enterActiveClass: String,
  leaveActiveClass: String,
  appearClass: String,
  appearActiveClass: String,
  appearToClass: String,
  duration: [Number, String, Object]
};

// in case the child is also an abstract component, e.g. <keep-alive>
// we want to recursively retrieve the real component to be rendered
function getRealChild (vnode) {
  var compOptions = vnode && vnode.componentOptions;
  if (compOptions && compOptions.Ctor.options.abstract) {
    return getRealChild(getFirstComponentChild(compOptions.children))
  } else {
    return vnode
  }
}

function extractTransitionData (comp) {
  var data = {};
  var options = comp.$options;
  // props
  for (var key in options.propsData) {
    data[key] = comp[key];
  }
  // events.
  // extract listeners and pass them directly to the transition methods
  var listeners = options._parentListeners;
  for (var key$1 in listeners) {
    data[camelize(key$1)] = listeners[key$1];
  }
  return data
}

function placeholder (h, rawChild) {
  if (/\d-keep-alive$/.test(rawChild.tag)) {
    return h('keep-alive', {
      props: rawChild.componentOptions.propsData
    })
  }
}

function hasParentTransition (vnode) {
  while ((vnode = vnode.parent)) {
    if (vnode.data.transition) {
      return true
    }
  }
}

function isSameChild (child, oldChild) {
  return oldChild.key === child.key && oldChild.tag === child.tag
}

var isNotTextNode = function (c) { return c.tag || isAsyncPlaceholder(c); };

var isVShowDirective = function (d) { return d.name === 'show'; };

var Transition = {
  name: 'transition',
  props: transitionProps,
  abstract: true,

  render: function render (h) {
    var this$1 = this;

    var children = this.$slots.default;
    if (!children) {
      return
    }

    // filter out text nodes (possible whitespaces)
    children = children.filter(isNotTextNode);
    /* istanbul ignore if */
    if (!children.length) {
      return
    }

    // warn multiple elements
    if ( true && children.length > 1) {
      warn(
        '<transition> can only be used on a single element. Use ' +
        '<transition-group> for lists.',
        this.$parent
      );
    }

    var mode = this.mode;

    // warn invalid mode
    if ( true &&
      mode && mode !== 'in-out' && mode !== 'out-in'
    ) {
      warn(
        'invalid <transition> mode: ' + mode,
        this.$parent
      );
    }

    var rawChild = children[0];

    // if this is a component root node and the component's
    // parent container node also has transition, skip.
    if (hasParentTransition(this.$vnode)) {
      return rawChild
    }

    // apply transition data to child
    // use getRealChild() to ignore abstract components e.g. keep-alive
    var child = getRealChild(rawChild);
    /* istanbul ignore if */
    if (!child) {
      return rawChild
    }

    if (this._leaving) {
      return placeholder(h, rawChild)
    }

    // ensure a key that is unique to the vnode type and to this transition
    // component instance. This key will be used to remove pending leaving nodes
    // during entering.
    var id = "__transition-" + (this._uid) + "-";
    child.key = child.key == null
      ? child.isComment
        ? id + 'comment'
        : id + child.tag
      : isPrimitive(child.key)
        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)
        : child.key;

    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);
    var oldRawChild = this._vnode;
    var oldChild = getRealChild(oldRawChild);

    // mark v-show
    // so that the transition module can hand over the control to the directive
    if (child.data.directives && child.data.directives.some(isVShowDirective)) {
      child.data.show = true;
    }

    if (
      oldChild &&
      oldChild.data &&
      !isSameChild(child, oldChild) &&
      !isAsyncPlaceholder(oldChild) &&
      // #6687 component root is a comment node
      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)
    ) {
      // replace old child transition data with fresh one
      // important for dynamic transitions!
      var oldData = oldChild.data.transition = extend({}, data);
      // handle transition mode
      if (mode === 'out-in') {
        // return placeholder node and queue update when leave finishes
        this._leaving = true;
        mergeVNodeHook(oldData, 'afterLeave', function () {
          this$1._leaving = false;
          this$1.$forceUpdate();
        });
        return placeholder(h, rawChild)
      } else if (mode === 'in-out') {
        if (isAsyncPlaceholder(child)) {
          return oldRawChild
        }
        var delayedLeave;
        var performLeave = function () { delayedLeave(); };
        mergeVNodeHook(data, 'afterEnter', performLeave);
        mergeVNodeHook(data, 'enterCancelled', performLeave);
        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });
      }
    }

    return rawChild
  }
};

/*  */

var props = extend({
  tag: String,
  moveClass: String
}, transitionProps);

delete props.mode;

var TransitionGroup = {
  props: props,

  beforeMount: function beforeMount () {
    var this$1 = this;

    var update = this._update;
    this._update = function (vnode, hydrating) {
      var restoreActiveInstance = setActiveInstance(this$1);
      // force removing pass
      this$1.__patch__(
        this$1._vnode,
        this$1.kept,
        false, // hydrating
        true // removeOnly (!important, avoids unnecessary moves)
      );
      this$1._vnode = this$1.kept;
      restoreActiveInstance();
      update.call(this$1, vnode, hydrating);
    };
  },

  render: function render (h) {
    var tag = this.tag || this.$vnode.data.tag || 'span';
    var map = Object.create(null);
    var prevChildren = this.prevChildren = this.children;
    var rawChildren = this.$slots.default || [];
    var children = this.children = [];
    var transitionData = extractTransitionData(this);

    for (var i = 0; i < rawChildren.length; i++) {
      var c = rawChildren[i];
      if (c.tag) {
        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {
          children.push(c);
          map[c.key] = c
          ;(c.data || (c.data = {})).transition = transitionData;
        } else if (true) {
          var opts = c.componentOptions;
          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;
          warn(("<transition-group> children must be keyed: <" + name + ">"));
        }
      }
    }

    if (prevChildren) {
      var kept = [];
      var removed = [];
      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {
        var c$1 = prevChildren[i$1];
        c$1.data.transition = transitionData;
        c$1.data.pos = c$1.elm.getBoundingClientRect();
        if (map[c$1.key]) {
          kept.push(c$1);
        } else {
          removed.push(c$1);
        }
      }
      this.kept = h(tag, null, kept);
      this.removed = removed;
    }

    return h(tag, null, children)
  },

  updated: function updated () {
    var children = this.prevChildren;
    var moveClass = this.moveClass || ((this.name || 'v') + '-move');
    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {
      return
    }

    // we divide the work into three loops to avoid mixing DOM reads and writes
    // in each iteration - which helps prevent layout thrashing.
    children.forEach(callPendingCbs);
    children.forEach(recordPosition);
    children.forEach(applyTranslation);

    // force reflow to put everything in position
    // assign to this to avoid being removed in tree-shaking
    // $flow-disable-line
    this._reflow = document.body.offsetHeight;

    children.forEach(function (c) {
      if (c.data.moved) {
        var el = c.elm;
        var s = el.style;
        addTransitionClass(el, moveClass);
        s.transform = s.WebkitTransform = s.transitionDuration = '';
        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {
          if (e && e.target !== el) {
            return
          }
          if (!e || /transform$/.test(e.propertyName)) {
            el.removeEventListener(transitionEndEvent, cb);
            el._moveCb = null;
            removeTransitionClass(el, moveClass);
          }
        });
      }
    });
  },

  methods: {
    hasMove: function hasMove (el, moveClass) {
      /* istanbul ignore if */
      if (!hasTransition) {
        return false
      }
      /* istanbul ignore if */
      if (this._hasMove) {
        return this._hasMove
      }
      // Detect whether an element with the move class applied has
      // CSS transitions. Since the element may be inside an entering
      // transition at this very moment, we make a clone of it and remove
      // all other transition classes applied to ensure only the move class
      // is applied.
      var clone = el.cloneNode();
      if (el._transitionClasses) {
        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });
      }
      addClass(clone, moveClass);
      clone.style.display = 'none';
      this.$el.appendChild(clone);
      var info = getTransitionInfo(clone);
      this.$el.removeChild(clone);
      return (this._hasMove = info.hasTransform)
    }
  }
};

function callPendingCbs (c) {
  /* istanbul ignore if */
  if (c.elm._moveCb) {
    c.elm._moveCb();
  }
  /* istanbul ignore if */
  if (c.elm._enterCb) {
    c.elm._enterCb();
  }
}

function recordPosition (c) {
  c.data.newPos = c.elm.getBoundingClientRect();
}

function applyTranslation (c) {
  var oldPos = c.data.pos;
  var newPos = c.data.newPos;
  var dx = oldPos.left - newPos.left;
  var dy = oldPos.top - newPos.top;
  if (dx || dy) {
    c.data.moved = true;
    var s = c.elm.style;
    s.transform = s.WebkitTransform = "translate(" + dx + "px," + dy + "px)";
    s.transitionDuration = '0s';
  }
}

var platformComponents = {
  Transition: Transition,
  TransitionGroup: TransitionGroup
};

/*  */

// install platform specific utils
Vue.config.mustUseProp = mustUseProp;
Vue.config.isReservedTag = isReservedTag;
Vue.config.isReservedAttr = isReservedAttr;
Vue.config.getTagNamespace = getTagNamespace;
Vue.config.isUnknownElement = isUnknownElement;

// install platform runtime directives & components
extend(Vue.options.directives, platformDirectives);
extend(Vue.options.components, platformComponents);

// install platform patch function
Vue.prototype.__patch__ = inBrowser ? patch : noop;

// public mount method
Vue.prototype.$mount = function (
  el,
  hydrating
) {
  el = el && inBrowser ? query(el) : undefined;
  return mountComponent(this, el, hydrating)
};

// devtools global hook
/* istanbul ignore next */
if (inBrowser) {
  setTimeout(function () {
    if (config.devtools) {
      if (devtools) {
        devtools.emit('init', Vue);
      } else if (
        true
      ) {
        console[console.info ? 'info' : 'log'](
          'Download the Vue Devtools extension for a better development experience:\n' +
          'https://github.com/vuejs/vue-devtools'
        );
      }
    }
    if ( true &&
      config.productionTip !== false &&
      typeof console !== 'undefined'
    ) {
      console[console.info ? 'info' : 'log'](
        "You are running Vue in development mode.\n" +
        "Make sure to turn on production mode when deploying for production.\n" +
        "See more tips at https://vuejs.org/guide/deployment.html"
      );
    }
  }, 0);
}

/*  */

var defaultTagRE = /\{\{((?:.|\r?\n)+?)\}\}/g;
var regexEscapeRE = /[-.*+?^${}()|[\]\/\\]/g;

var buildRegex = cached(function (delimiters) {
  var open = delimiters[0].replace(regexEscapeRE, '\\$&');
  var close = delimiters[1].replace(regexEscapeRE, '\\$&');
  return new RegExp(open + '((?:.|\\n)+?)' + close, 'g')
});



function parseText (
  text,
  delimiters
) {
  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;
  if (!tagRE.test(text)) {
    return
  }
  var tokens = [];
  var rawTokens = [];
  var lastIndex = tagRE.lastIndex = 0;
  var match, index, tokenValue;
  while ((match = tagRE.exec(text))) {
    index = match.index;
    // push text token
    if (index > lastIndex) {
      rawTokens.push(tokenValue = text.slice(lastIndex, index));
      tokens.push(JSON.stringify(tokenValue));
    }
    // tag token
    var exp = parseFilters(match[1].trim());
    tokens.push(("_s(" + exp + ")"));
    rawTokens.push({ '@binding': exp });
    lastIndex = index + match[0].length;
  }
  if (lastIndex < text.length) {
    rawTokens.push(tokenValue = text.slice(lastIndex));
    tokens.push(JSON.stringify(tokenValue));
  }
  return {
    expression: tokens.join('+'),
    tokens: rawTokens
  }
}

/*  */

function transformNode (el, options) {
  var warn = options.warn || baseWarn;
  var staticClass = getAndRemoveAttr(el, 'class');
  if ( true && staticClass) {
    var res = parseText(staticClass, options.delimiters);
    if (res) {
      warn(
        "class=\"" + staticClass + "\": " +
        'Interpolation inside attributes has been removed. ' +
        'Use v-bind or the colon shorthand instead. For example, ' +
        'instead of <div class="{{ val }}">, use <div :class="val">.',
        el.rawAttrsMap['class']
      );
    }
  }
  if (staticClass) {
    el.staticClass = JSON.stringify(staticClass);
  }
  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);
  if (classBinding) {
    el.classBinding = classBinding;
  }
}

function genData (el) {
  var data = '';
  if (el.staticClass) {
    data += "staticClass:" + (el.staticClass) + ",";
  }
  if (el.classBinding) {
    data += "class:" + (el.classBinding) + ",";
  }
  return data
}

var klass$1 = {
  staticKeys: ['staticClass'],
  transformNode: transformNode,
  genData: genData
};

/*  */

function transformNode$1 (el, options) {
  var warn = options.warn || baseWarn;
  var staticStyle = getAndRemoveAttr(el, 'style');
  if (staticStyle) {
    /* istanbul ignore if */
    if (true) {
      var res = parseText(staticStyle, options.delimiters);
      if (res) {
        warn(
          "style=\"" + staticStyle + "\": " +
          'Interpolation inside attributes has been removed. ' +
          'Use v-bind or the colon shorthand instead. For example, ' +
          'instead of <div style="{{ val }}">, use <div :style="val">.',
          el.rawAttrsMap['style']
        );
      }
    }
    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));
  }

  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);
  if (styleBinding) {
    el.styleBinding = styleBinding;
  }
}

function genData$1 (el) {
  var data = '';
  if (el.staticStyle) {
    data += "staticStyle:" + (el.staticStyle) + ",";
  }
  if (el.styleBinding) {
    data += "style:(" + (el.styleBinding) + "),";
  }
  return data
}

var style$1 = {
  staticKeys: ['staticStyle'],
  transformNode: transformNode$1,
  genData: genData$1
};

/*  */

var decoder;

var he = {
  decode: function decode (html) {
    decoder = decoder || document.createElement('div');
    decoder.innerHTML = html;
    return decoder.textContent
  }
};

/*  */

var isUnaryTag = makeMap(
  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +
  'link,meta,param,source,track,wbr'
);

// Elements that you can, intentionally, leave open
// (and which close themselves)
var canBeLeftOpenTag = makeMap(
  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'
);

// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3
// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content
var isNonPhrasingTag = makeMap(
  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +
  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +
  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +
  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +
  'title,tr,track'
);

/**
 * Not type-checking this file because it's mostly vendor code.
 */

// Regular Expressions for parsing tags and attributes
var attribute = /^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/;
var dynamicArgAttribute = /^\s*((?:v-[\w-]+:|@|:|#)\[[^=]+?\][^\s"'<>\/=]*)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/;
var ncname = "[a-zA-Z_][\\-\\.0-9_a-zA-Z" + (unicodeRegExp.source) + "]*";
var qnameCapture = "((?:" + ncname + "\\:)?" + ncname + ")";
var startTagOpen = new RegExp(("^<" + qnameCapture));
var startTagClose = /^\s*(\/?)>/;
var endTag = new RegExp(("^<\\/" + qnameCapture + "[^>]*>"));
var doctype = /^<!DOCTYPE [^>]+>/i;
// #7298: escape - to avoid being passed as HTML comment when inlined in page
var comment = /^<!\--/;
var conditionalComment = /^<!\[/;

// Special Elements (can contain anything)
var isPlainTextElement = makeMap('script,style,textarea', true);
var reCache = {};

var decodingMap = {
  '&lt;': '<',
  '&gt;': '>',
  '&quot;': '"',
  '&amp;': '&',
  '&#10;': '\n',
  '&#9;': '\t',
  '&#39;': "'"
};
var encodedAttr = /&(?:lt|gt|quot|amp|#39);/g;
var encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#39|#10|#9);/g;

// #5992
var isIgnoreNewlineTag = makeMap('pre,textarea', true);
var shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\n'; };

function decodeAttr (value, shouldDecodeNewlines) {
  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;
  return value.replace(re, function (match) { return decodingMap[match]; })
}

function parseHTML (html, options) {
  var stack = [];
  var expectHTML = options.expectHTML;
  var isUnaryTag$$1 = options.isUnaryTag || no;
  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;
  var index = 0;
  var last, lastTag;
  while (html) {
    last = html;
    // Make sure we're not in a plaintext content element like script/style
    if (!lastTag || !isPlainTextElement(lastTag)) {
      var textEnd = html.indexOf('<');
      if (textEnd === 0) {
        // Comment:
        if (comment.test(html)) {
          var commentEnd = html.indexOf('-->');

          if (commentEnd >= 0) {
            if (options.shouldKeepComment) {
              options.comment(html.substring(4, commentEnd), index, index + commentEnd + 3);
            }
            advance(commentEnd + 3);
            continue
          }
        }

        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment
        if (conditionalComment.test(html)) {
          var conditionalEnd = html.indexOf(']>');

          if (conditionalEnd >= 0) {
            advance(conditionalEnd + 2);
            continue
          }
        }

        // Doctype:
        var doctypeMatch = html.match(doctype);
        if (doctypeMatch) {
          advance(doctypeMatch[0].length);
          continue
        }

        // End tag:
        var endTagMatch = html.match(endTag);
        if (endTagMatch) {
          var curIndex = index;
          advance(endTagMatch[0].length);
          parseEndTag(endTagMatch[1], curIndex, index);
          continue
        }

        // Start tag:
        var startTagMatch = parseStartTag();
        if (startTagMatch) {
          handleStartTag(startTagMatch);
          if (shouldIgnoreFirstNewline(startTagMatch.tagName, html)) {
            advance(1);
          }
          continue
        }
      }

      var text = (void 0), rest = (void 0), next = (void 0);
      if (textEnd >= 0) {
        rest = html.slice(textEnd);
        while (
          !endTag.test(rest) &&
          !startTagOpen.test(rest) &&
          !comment.test(rest) &&
          !conditionalComment.test(rest)
        ) {
          // < in plain text, be forgiving and treat it as text
          next = rest.indexOf('<', 1);
          if (next < 0) { break }
          textEnd += next;
          rest = html.slice(textEnd);
        }
        text = html.substring(0, textEnd);
      }

      if (textEnd < 0) {
        text = html;
      }

      if (text) {
        advance(text.length);
      }

      if (options.chars && text) {
        options.chars(text, index - text.length, index);
      }
    } else {
      var endTagLength = 0;
      var stackedTag = lastTag.toLowerCase();
      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\s\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));
      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {
        endTagLength = endTag.length;
        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {
          text = text
            .replace(/<!\--([\s\S]*?)-->/g, '$1') // #7298
            .replace(/<!\[CDATA\[([\s\S]*?)]]>/g, '$1');
        }
        if (shouldIgnoreFirstNewline(stackedTag, text)) {
          text = text.slice(1);
        }
        if (options.chars) {
          options.chars(text);
        }
        return ''
      });
      index += html.length - rest$1.length;
      html = rest$1;
      parseEndTag(stackedTag, index - endTagLength, index);
    }

    if (html === last) {
      options.chars && options.chars(html);
      if ( true && !stack.length && options.warn) {
        options.warn(("Mal-formatted tag at end of template: \"" + html + "\""), { start: index + html.length });
      }
      break
    }
  }

  // Clean up any remaining tags
  parseEndTag();

  function advance (n) {
    index += n;
    html = html.substring(n);
  }

  function parseStartTag () {
    var start = html.match(startTagOpen);
    if (start) {
      var match = {
        tagName: start[1],
        attrs: [],
        start: index
      };
      advance(start[0].length);
      var end, attr;
      while (!(end = html.match(startTagClose)) && (attr = html.match(dynamicArgAttribute) || html.match(attribute))) {
        attr.start = index;
        advance(attr[0].length);
        attr.end = index;
        match.attrs.push(attr);
      }
      if (end) {
        match.unarySlash = end[1];
        advance(end[0].length);
        match.end = index;
        return match
      }
    }
  }

  function handleStartTag (match) {
    var tagName = match.tagName;
    var unarySlash = match.unarySlash;

    if (expectHTML) {
      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {
        parseEndTag(lastTag);
      }
      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {
        parseEndTag(tagName);
      }
    }

    var unary = isUnaryTag$$1(tagName) || !!unarySlash;

    var l = match.attrs.length;
    var attrs = new Array(l);
    for (var i = 0; i < l; i++) {
      var args = match.attrs[i];
      var value = args[3] || args[4] || args[5] || '';
      var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'
        ? options.shouldDecodeNewlinesForHref
        : options.shouldDecodeNewlines;
      attrs[i] = {
        name: args[1],
        value: decodeAttr(value, shouldDecodeNewlines)
      };
      if ( true && options.outputSourceRange) {
        attrs[i].start = args.start + args[0].match(/^\s*/).length;
        attrs[i].end = args.end;
      }
    }

    if (!unary) {
      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs, start: match.start, end: match.end });
      lastTag = tagName;
    }

    if (options.start) {
      options.start(tagName, attrs, unary, match.start, match.end);
    }
  }

  function parseEndTag (tagName, start, end) {
    var pos, lowerCasedTagName;
    if (start == null) { start = index; }
    if (end == null) { end = index; }

    // Find the closest opened tag of the same type
    if (tagName) {
      lowerCasedTagName = tagName.toLowerCase();
      for (pos = stack.length - 1; pos >= 0; pos--) {
        if (stack[pos].lowerCasedTag === lowerCasedTagName) {
          break
        }
      }
    } else {
      // If no tag name is provided, clean shop
      pos = 0;
    }

    if (pos >= 0) {
      // Close all the open elements, up the stack
      for (var i = stack.length - 1; i >= pos; i--) {
        if ( true &&
          (i > pos || !tagName) &&
          options.warn
        ) {
          options.warn(
            ("tag <" + (stack[i].tag) + "> has no matching end tag."),
            { start: stack[i].start, end: stack[i].end }
          );
        }
        if (options.end) {
          options.end(stack[i].tag, start, end);
        }
      }

      // Remove the open elements from the stack
      stack.length = pos;
      lastTag = pos && stack[pos - 1].tag;
    } else if (lowerCasedTagName === 'br') {
      if (options.start) {
        options.start(tagName, [], true, start, end);
      }
    } else if (lowerCasedTagName === 'p') {
      if (options.start) {
        options.start(tagName, [], false, start, end);
      }
      if (options.end) {
        options.end(tagName, start, end);
      }
    }
  }
}

/*  */

var onRE = /^@|^v-on:/;
var dirRE = /^v-|^@|^:|^#/;
var forAliasRE = /([\s\S]*?)\s+(?:in|of)\s+([\s\S]*)/;
var forIteratorRE = /,([^,\}\]]*)(?:,([^,\}\]]*))?$/;
var stripParensRE = /^\(|\)$/g;
var dynamicArgRE = /^\[.*\]$/;

var argRE = /:(.*)$/;
var bindRE = /^:|^\.|^v-bind:/;
var modifierRE = /\.[^.\]]+(?=[^\]]*$)/g;

var slotRE = /^v-slot(:|$)|^#/;

var lineBreakRE = /[\r\n]/;
var whitespaceRE$1 = /[ \f\t\r\n]+/g;

var invalidAttributeRE = /[\s"'<>\/=]/;

var decodeHTMLCached = cached(he.decode);

var emptySlotScopeToken = "_empty_";

// configurable state
var warn$2;
var delimiters;
var transforms;
var preTransforms;
var postTransforms;
var platformIsPreTag;
var platformMustUseProp;
var platformGetTagNamespace;
var maybeComponent;

function createASTElement (
  tag,
  attrs,
  parent
) {
  return {
    type: 1,
    tag: tag,
    attrsList: attrs,
    attrsMap: makeAttrsMap(attrs),
    rawAttrsMap: {},
    parent: parent,
    children: []
  }
}

/**
 * Convert HTML string to AST.
 */
function parse (
  template,
  options
) {
  warn$2 = options.warn || baseWarn;

  platformIsPreTag = options.isPreTag || no;
  platformMustUseProp = options.mustUseProp || no;
  platformGetTagNamespace = options.getTagNamespace || no;
  var isReservedTag = options.isReservedTag || no;
  maybeComponent = function (el) { return !!(
    el.component ||
    el.attrsMap[':is'] ||
    el.attrsMap['v-bind:is'] ||
    !(el.attrsMap.is ? isReservedTag(el.attrsMap.is) : isReservedTag(el.tag))
  ); };
  transforms = pluckModuleFunction(options.modules, 'transformNode');
  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');
  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');

  delimiters = options.delimiters;

  var stack = [];
  var preserveWhitespace = options.preserveWhitespace !== false;
  var whitespaceOption = options.whitespace;
  var root;
  var currentParent;
  var inVPre = false;
  var inPre = false;
  var warned = false;

  function warnOnce (msg, range) {
    if (!warned) {
      warned = true;
      warn$2(msg, range);
    }
  }

  function closeElement (element) {
    trimEndingWhitespace(element);
    if (!inVPre && !element.processed) {
      element = processElement(element, options);
    }
    // tree management
    if (!stack.length && element !== root) {
      // allow root elements with v-if, v-else-if and v-else
      if (root.if && (element.elseif || element.else)) {
        if (true) {
          checkRootConstraints(element);
        }
        addIfCondition(root, {
          exp: element.elseif,
          block: element
        });
      } else if (true) {
        warnOnce(
          "Component template should contain exactly one root element. " +
          "If you are using v-if on multiple elements, " +
          "use v-else-if to chain them instead.",
          { start: element.start }
        );
      }
    }
    if (currentParent && !element.forbidden) {
      if (element.elseif || element.else) {
        processIfConditions(element, currentParent);
      } else {
        if (element.slotScope) {
          // scoped slot
          // keep it in the children list so that v-else(-if) conditions can
          // find it as the prev node.
          var name = element.slotTarget || '"default"'
          ;(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;
        }
        currentParent.children.push(element);
        element.parent = currentParent;
      }
    }

    // final children cleanup
    // filter out scoped slots
    element.children = element.children.filter(function (c) { return !(c).slotScope; });
    // remove trailing whitespace node again
    trimEndingWhitespace(element);

    // check pre state
    if (element.pre) {
      inVPre = false;
    }
    if (platformIsPreTag(element.tag)) {
      inPre = false;
    }
    // apply post-transforms
    for (var i = 0; i < postTransforms.length; i++) {
      postTransforms[i](element, options);
    }
  }

  function trimEndingWhitespace (el) {
    // remove trailing whitespace node
    if (!inPre) {
      var lastNode;
      while (
        (lastNode = el.children[el.children.length - 1]) &&
        lastNode.type === 3 &&
        lastNode.text === ' '
      ) {
        el.children.pop();
      }
    }
  }

  function checkRootConstraints (el) {
    if (el.tag === 'slot' || el.tag === 'template') {
      warnOnce(
        "Cannot use <" + (el.tag) + "> as component root element because it may " +
        'contain multiple nodes.',
        { start: el.start }
      );
    }
    if (el.attrsMap.hasOwnProperty('v-for')) {
      warnOnce(
        'Cannot use v-for on stateful component root element because ' +
        'it renders multiple elements.',
        el.rawAttrsMap['v-for']
      );
    }
  }

  parseHTML(template, {
    warn: warn$2,
    expectHTML: options.expectHTML,
    isUnaryTag: options.isUnaryTag,
    canBeLeftOpenTag: options.canBeLeftOpenTag,
    shouldDecodeNewlines: options.shouldDecodeNewlines,
    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,
    shouldKeepComment: options.comments,
    outputSourceRange: options.outputSourceRange,
    start: function start (tag, attrs, unary, start$1, end) {
      // check namespace.
      // inherit parent ns if there is one
      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);

      // handle IE svg bug
      /* istanbul ignore if */
      if (isIE && ns === 'svg') {
        attrs = guardIESVGBug(attrs);
      }

      var element = createASTElement(tag, attrs, currentParent);
      if (ns) {
        element.ns = ns;
      }

      if (true) {
        if (options.outputSourceRange) {
          element.start = start$1;
          element.end = end;
          element.rawAttrsMap = element.attrsList.reduce(function (cumulated, attr) {
            cumulated[attr.name] = attr;
            return cumulated
          }, {});
        }
        attrs.forEach(function (attr) {
          if (invalidAttributeRE.test(attr.name)) {
            warn$2(
              "Invalid dynamic argument expression: attribute names cannot contain " +
              "spaces, quotes, <, >, / or =.",
              {
                start: attr.start + attr.name.indexOf("["),
                end: attr.start + attr.name.length
              }
            );
          }
        });
      }

      if (isForbiddenTag(element) && !isServerRendering()) {
        element.forbidden = true;
         true && warn$2(
          'Templates should only be responsible for mapping the state to the ' +
          'UI. Avoid placing tags with side-effects in your templates, such as ' +
          "<" + tag + ">" + ', as they will not be parsed.',
          { start: element.start }
        );
      }

      // apply pre-transforms
      for (var i = 0; i < preTransforms.length; i++) {
        element = preTransforms[i](element, options) || element;
      }

      if (!inVPre) {
        processPre(element);
        if (element.pre) {
          inVPre = true;
        }
      }
      if (platformIsPreTag(element.tag)) {
        inPre = true;
      }
      if (inVPre) {
        processRawAttrs(element);
      } else if (!element.processed) {
        // structural directives
        processFor(element);
        processIf(element);
        processOnce(element);
      }

      if (!root) {
        root = element;
        if (true) {
          checkRootConstraints(root);
        }
      }

      if (!unary) {
        currentParent = element;
        stack.push(element);
      } else {
        closeElement(element);
      }
    },

    end: function end (tag, start, end$1) {
      var element = stack[stack.length - 1];
      // pop stack
      stack.length -= 1;
      currentParent = stack[stack.length - 1];
      if ( true && options.outputSourceRange) {
        element.end = end$1;
      }
      closeElement(element);
    },

    chars: function chars (text, start, end) {
      if (!currentParent) {
        if (true) {
          if (text === template) {
            warnOnce(
              'Component template requires a root element, rather than just text.',
              { start: start }
            );
          } else if ((text = text.trim())) {
            warnOnce(
              ("text \"" + text + "\" outside root element will be ignored."),
              { start: start }
            );
          }
        }
        return
      }
      // IE textarea placeholder bug
      /* istanbul ignore if */
      if (isIE &&
        currentParent.tag === 'textarea' &&
        currentParent.attrsMap.placeholder === text
      ) {
        return
      }
      var children = currentParent.children;
      if (inPre || text.trim()) {
        text = isTextTag(currentParent) ? text : decodeHTMLCached(text);
      } else if (!children.length) {
        // remove the whitespace-only node right after an opening tag
        text = '';
      } else if (whitespaceOption) {
        if (whitespaceOption === 'condense') {
          // in condense mode, remove the whitespace node if it contains
          // line break, otherwise condense to a single space
          text = lineBreakRE.test(text) ? '' : ' ';
        } else {
          text = ' ';
        }
      } else {
        text = preserveWhitespace ? ' ' : '';
      }
      if (text) {
        if (!inPre && whitespaceOption === 'condense') {
          // condense consecutive whitespaces into single space
          text = text.replace(whitespaceRE$1, ' ');
        }
        var res;
        var child;
        if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {
          child = {
            type: 2,
            expression: res.expression,
            tokens: res.tokens,
            text: text
          };
        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {
          child = {
            type: 3,
            text: text
          };
        }
        if (child) {
          if ( true && options.outputSourceRange) {
            child.start = start;
            child.end = end;
          }
          children.push(child);
        }
      }
    },
    comment: function comment (text, start, end) {
      // adding anything as a sibling to the root node is forbidden
      // comments should still be allowed, but ignored
      if (currentParent) {
        var child = {
          type: 3,
          text: text,
          isComment: true
        };
        if ( true && options.outputSourceRange) {
          child.start = start;
          child.end = end;
        }
        currentParent.children.push(child);
      }
    }
  });
  return root
}

function processPre (el) {
  if (getAndRemoveAttr(el, 'v-pre') != null) {
    el.pre = true;
  }
}

function processRawAttrs (el) {
  var list = el.attrsList;
  var len = list.length;
  if (len) {
    var attrs = el.attrs = new Array(len);
    for (var i = 0; i < len; i++) {
      attrs[i] = {
        name: list[i].name,
        value: JSON.stringify(list[i].value)
      };
      if (list[i].start != null) {
        attrs[i].start = list[i].start;
        attrs[i].end = list[i].end;
      }
    }
  } else if (!el.pre) {
    // non root node in pre blocks with no attributes
    el.plain = true;
  }
}

function processElement (
  element,
  options
) {
  processKey(element);

  // determine whether this is a plain element after
  // removing structural attributes
  element.plain = (
    !element.key &&
    !element.scopedSlots &&
    !element.attrsList.length
  );

  processRef(element);
  processSlotContent(element);
  processSlotOutlet(element);
  processComponent(element);
  for (var i = 0; i < transforms.length; i++) {
    element = transforms[i](element, options) || element;
  }
  processAttrs(element);
  return element
}

function processKey (el) {
  var exp = getBindingAttr(el, 'key');
  if (exp) {
    if (true) {
      if (el.tag === 'template') {
        warn$2(
          "<template> cannot be keyed. Place the key on real elements instead.",
          getRawBindingAttr(el, 'key')
        );
      }
      if (el.for) {
        var iterator = el.iterator2 || el.iterator1;
        var parent = el.parent;
        if (iterator && iterator === exp && parent && parent.tag === 'transition-group') {
          warn$2(
            "Do not use v-for index as key on <transition-group> children, " +
            "this is the same as not using keys.",
            getRawBindingAttr(el, 'key'),
            true /* tip */
          );
        }
      }
    }
    el.key = exp;
  }
}

function processRef (el) {
  var ref = getBindingAttr(el, 'ref');
  if (ref) {
    el.ref = ref;
    el.refInFor = checkInFor(el);
  }
}

function processFor (el) {
  var exp;
  if ((exp = getAndRemoveAttr(el, 'v-for'))) {
    var res = parseFor(exp);
    if (res) {
      extend(el, res);
    } else if (true) {
      warn$2(
        ("Invalid v-for expression: " + exp),
        el.rawAttrsMap['v-for']
      );
    }
  }
}



function parseFor (exp) {
  var inMatch = exp.match(forAliasRE);
  if (!inMatch) { return }
  var res = {};
  res.for = inMatch[2].trim();
  var alias = inMatch[1].trim().replace(stripParensRE, '');
  var iteratorMatch = alias.match(forIteratorRE);
  if (iteratorMatch) {
    res.alias = alias.replace(forIteratorRE, '').trim();
    res.iterator1 = iteratorMatch[1].trim();
    if (iteratorMatch[2]) {
      res.iterator2 = iteratorMatch[2].trim();
    }
  } else {
    res.alias = alias;
  }
  return res
}

function processIf (el) {
  var exp = getAndRemoveAttr(el, 'v-if');
  if (exp) {
    el.if = exp;
    addIfCondition(el, {
      exp: exp,
      block: el
    });
  } else {
    if (getAndRemoveAttr(el, 'v-else') != null) {
      el.else = true;
    }
    var elseif = getAndRemoveAttr(el, 'v-else-if');
    if (elseif) {
      el.elseif = elseif;
    }
  }
}

function processIfConditions (el, parent) {
  var prev = findPrevElement(parent.children);
  if (prev && prev.if) {
    addIfCondition(prev, {
      exp: el.elseif,
      block: el
    });
  } else if (true) {
    warn$2(
      "v-" + (el.elseif ? ('else-if="' + el.elseif + '"') : 'else') + " " +
      "used on element <" + (el.tag) + "> without corresponding v-if.",
      el.rawAttrsMap[el.elseif ? 'v-else-if' : 'v-else']
    );
  }
}

function findPrevElement (children) {
  var i = children.length;
  while (i--) {
    if (children[i].type === 1) {
      return children[i]
    } else {
      if ( true && children[i].text !== ' ') {
        warn$2(
          "text \"" + (children[i].text.trim()) + "\" between v-if and v-else(-if) " +
          "will be ignored.",
          children[i]
        );
      }
      children.pop();
    }
  }
}

function addIfCondition (el, condition) {
  if (!el.ifConditions) {
    el.ifConditions = [];
  }
  el.ifConditions.push(condition);
}

function processOnce (el) {
  var once$$1 = getAndRemoveAttr(el, 'v-once');
  if (once$$1 != null) {
    el.once = true;
  }
}

// handle content being passed to a component as slot,
// e.g. <template slot="xxx">, <div slot-scope="xxx">
function processSlotContent (el) {
  var slotScope;
  if (el.tag === 'template') {
    slotScope = getAndRemoveAttr(el, 'scope');
    /* istanbul ignore if */
    if ( true && slotScope) {
      warn$2(
        "the \"scope\" attribute for scoped slots have been deprecated and " +
        "replaced by \"slot-scope\" since 2.5. The new \"slot-scope\" attribute " +
        "can also be used on plain elements in addition to <template> to " +
        "denote scoped slots.",
        el.rawAttrsMap['scope'],
        true
      );
    }
    el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');
  } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {
    /* istanbul ignore if */
    if ( true && el.attrsMap['v-for']) {
      warn$2(
        "Ambiguous combined usage of slot-scope and v-for on <" + (el.tag) + "> " +
        "(v-for takes higher priority). Use a wrapper <template> for the " +
        "scoped slot to make it clearer.",
        el.rawAttrsMap['slot-scope'],
        true
      );
    }
    el.slotScope = slotScope;
  }

  // slot="xxx"
  var slotTarget = getBindingAttr(el, 'slot');
  if (slotTarget) {
    el.slotTarget = slotTarget === '""' ? '"default"' : slotTarget;
    el.slotTargetDynamic = !!(el.attrsMap[':slot'] || el.attrsMap['v-bind:slot']);
    // preserve slot as an attribute for native shadow DOM compat
    // only for non-scoped slots.
    if (el.tag !== 'template' && !el.slotScope) {
      addAttr(el, 'slot', slotTarget, getRawBindingAttr(el, 'slot'));
    }
  }

  // 2.6 v-slot syntax
  {
    if (el.tag === 'template') {
      // v-slot on <template>
      var slotBinding = getAndRemoveAttrByRegex(el, slotRE);
      if (slotBinding) {
        if (true) {
          if (el.slotTarget || el.slotScope) {
            warn$2(
              "Unexpected mixed usage of different slot syntaxes.",
              el
            );
          }
          if (el.parent && !maybeComponent(el.parent)) {
            warn$2(
              "<template v-slot> can only appear at the root level inside " +
              "the receiving component",
              el
            );
          }
        }
        var ref = getSlotName(slotBinding);
        var name = ref.name;
        var dynamic = ref.dynamic;
        el.slotTarget = name;
        el.slotTargetDynamic = dynamic;
        el.slotScope = slotBinding.value || emptySlotScopeToken; // force it into a scoped slot for perf
      }
    } else {
      // v-slot on component, denotes default slot
      var slotBinding$1 = getAndRemoveAttrByRegex(el, slotRE);
      if (slotBinding$1) {
        if (true) {
          if (!maybeComponent(el)) {
            warn$2(
              "v-slot can only be used on components or <template>.",
              slotBinding$1
            );
          }
          if (el.slotScope || el.slotTarget) {
            warn$2(
              "Unexpected mixed usage of different slot syntaxes.",
              el
            );
          }
          if (el.scopedSlots) {
            warn$2(
              "To avoid scope ambiguity, the default slot should also use " +
              "<template> syntax when there are other named slots.",
              slotBinding$1
            );
          }
        }
        // add the component's children to its default slot
        var slots = el.scopedSlots || (el.scopedSlots = {});
        var ref$1 = getSlotName(slotBinding$1);
        var name$1 = ref$1.name;
        var dynamic$1 = ref$1.dynamic;
        var slotContainer = slots[name$1] = createASTElement('template', [], el);
        slotContainer.slotTarget = name$1;
        slotContainer.slotTargetDynamic = dynamic$1;
        slotContainer.children = el.children.filter(function (c) {
          if (!c.slotScope) {
            c.parent = slotContainer;
            return true
          }
        });
        slotContainer.slotScope = slotBinding$1.value || emptySlotScopeToken;
        // remove children as they are returned from scopedSlots now
        el.children = [];
        // mark el non-plain so data gets generated
        el.plain = false;
      }
    }
  }
}

function getSlotName (binding) {
  var name = binding.name.replace(slotRE, '');
  if (!name) {
    if (binding.name[0] !== '#') {
      name = 'default';
    } else if (true) {
      warn$2(
        "v-slot shorthand syntax requires a slot name.",
        binding
      );
    }
  }
  return dynamicArgRE.test(name)
    // dynamic [name]
    ? { name: name.slice(1, -1), dynamic: true }
    // static name
    : { name: ("\"" + name + "\""), dynamic: false }
}

// handle <slot/> outlets
function processSlotOutlet (el) {
  if (el.tag === 'slot') {
    el.slotName = getBindingAttr(el, 'name');
    if ( true && el.key) {
      warn$2(
        "`key` does not work on <slot> because slots are abstract outlets " +
        "and can possibly expand into multiple elements. " +
        "Use the key on a wrapping element instead.",
        getRawBindingAttr(el, 'key')
      );
    }
  }
}

function processComponent (el) {
  var binding;
  if ((binding = getBindingAttr(el, 'is'))) {
    el.component = binding;
  }
  if (getAndRemoveAttr(el, 'inline-template') != null) {
    el.inlineTemplate = true;
  }
}

function processAttrs (el) {
  var list = el.attrsList;
  var i, l, name, rawName, value, modifiers, syncGen, isDynamic;
  for (i = 0, l = list.length; i < l; i++) {
    name = rawName = list[i].name;
    value = list[i].value;
    if (dirRE.test(name)) {
      // mark element as dynamic
      el.hasBindings = true;
      // modifiers
      modifiers = parseModifiers(name.replace(dirRE, ''));
      // support .foo shorthand syntax for the .prop modifier
      if (modifiers) {
        name = name.replace(modifierRE, '');
      }
      if (bindRE.test(name)) { // v-bind
        name = name.replace(bindRE, '');
        value = parseFilters(value);
        isDynamic = dynamicArgRE.test(name);
        if (isDynamic) {
          name = name.slice(1, -1);
        }
        if (
           true &&
          value.trim().length === 0
        ) {
          warn$2(
            ("The value for a v-bind expression cannot be empty. Found in \"v-bind:" + name + "\"")
          );
        }
        if (modifiers) {
          if (modifiers.prop && !isDynamic) {
            name = camelize(name);
            if (name === 'innerHtml') { name = 'innerHTML'; }
          }
          if (modifiers.camel && !isDynamic) {
            name = camelize(name);
          }
          if (modifiers.sync) {
            syncGen = genAssignmentCode(value, "$event");
            if (!isDynamic) {
              addHandler(
                el,
                ("update:" + (camelize(name))),
                syncGen,
                null,
                false,
                warn$2,
                list[i]
              );
              if (hyphenate(name) !== camelize(name)) {
                addHandler(
                  el,
                  ("update:" + (hyphenate(name))),
                  syncGen,
                  null,
                  false,
                  warn$2,
                  list[i]
                );
              }
            } else {
              // handler w/ dynamic event name
              addHandler(
                el,
                ("\"update:\"+(" + name + ")"),
                syncGen,
                null,
                false,
                warn$2,
                list[i],
                true // dynamic
              );
            }
          }
        }
        if ((modifiers && modifiers.prop) || (
          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)
        )) {
          addProp(el, name, value, list[i], isDynamic);
        } else {
          addAttr(el, name, value, list[i], isDynamic);
        }
      } else if (onRE.test(name)) { // v-on
        name = name.replace(onRE, '');
        isDynamic = dynamicArgRE.test(name);
        if (isDynamic) {
          name = name.slice(1, -1);
        }
        addHandler(el, name, value, modifiers, false, warn$2, list[i], isDynamic);
      } else { // normal directives
        name = name.replace(dirRE, '');
        // parse arg
        var argMatch = name.match(argRE);
        var arg = argMatch && argMatch[1];
        isDynamic = false;
        if (arg) {
          name = name.slice(0, -(arg.length + 1));
          if (dynamicArgRE.test(arg)) {
            arg = arg.slice(1, -1);
            isDynamic = true;
          }
        }
        addDirective(el, name, rawName, value, arg, isDynamic, modifiers, list[i]);
        if ( true && name === 'model') {
          checkForAliasModel(el, value);
        }
      }
    } else {
      // literal attribute
      if (true) {
        var res = parseText(value, delimiters);
        if (res) {
          warn$2(
            name + "=\"" + value + "\": " +
            'Interpolation inside attributes has been removed. ' +
            'Use v-bind or the colon shorthand instead. For example, ' +
            'instead of <div id="{{ val }}">, use <div :id="val">.',
            list[i]
          );
        }
      }
      addAttr(el, name, JSON.stringify(value), list[i]);
      // #6887 firefox doesn't update muted state if set via attribute
      // even immediately after element creation
      if (!el.component &&
          name === 'muted' &&
          platformMustUseProp(el.tag, el.attrsMap.type, name)) {
        addProp(el, name, 'true', list[i]);
      }
    }
  }
}

function checkInFor (el) {
  var parent = el;
  while (parent) {
    if (parent.for !== undefined) {
      return true
    }
    parent = parent.parent;
  }
  return false
}

function parseModifiers (name) {
  var match = name.match(modifierRE);
  if (match) {
    var ret = {};
    match.forEach(function (m) { ret[m.slice(1)] = true; });
    return ret
  }
}

function makeAttrsMap (attrs) {
  var map = {};
  for (var i = 0, l = attrs.length; i < l; i++) {
    if (
       true &&
      map[attrs[i].name] && !isIE && !isEdge
    ) {
      warn$2('duplicate attribute: ' + attrs[i].name, attrs[i]);
    }
    map[attrs[i].name] = attrs[i].value;
  }
  return map
}

// for script (e.g. type="x/template") or style, do not decode content
function isTextTag (el) {
  return el.tag === 'script' || el.tag === 'style'
}

function isForbiddenTag (el) {
  return (
    el.tag === 'style' ||
    (el.tag === 'script' && (
      !el.attrsMap.type ||
      el.attrsMap.type === 'text/javascript'
    ))
  )
}

var ieNSBug = /^xmlns:NS\d+/;
var ieNSPrefix = /^NS\d+:/;

/* istanbul ignore next */
function guardIESVGBug (attrs) {
  var res = [];
  for (var i = 0; i < attrs.length; i++) {
    var attr = attrs[i];
    if (!ieNSBug.test(attr.name)) {
      attr.name = attr.name.replace(ieNSPrefix, '');
      res.push(attr);
    }
  }
  return res
}

function checkForAliasModel (el, value) {
  var _el = el;
  while (_el) {
    if (_el.for && _el.alias === value) {
      warn$2(
        "<" + (el.tag) + " v-model=\"" + value + "\">: " +
        "You are binding v-model directly to a v-for iteration alias. " +
        "This will not be able to modify the v-for source array because " +
        "writing to the alias is like modifying a function local variable. " +
        "Consider using an array of objects and use v-model on an object property instead.",
        el.rawAttrsMap['v-model']
      );
    }
    _el = _el.parent;
  }
}

/*  */

function preTransformNode (el, options) {
  if (el.tag === 'input') {
    var map = el.attrsMap;
    if (!map['v-model']) {
      return
    }

    var typeBinding;
    if (map[':type'] || map['v-bind:type']) {
      typeBinding = getBindingAttr(el, 'type');
    }
    if (!map.type && !typeBinding && map['v-bind']) {
      typeBinding = "(" + (map['v-bind']) + ").type";
    }

    if (typeBinding) {
      var ifCondition = getAndRemoveAttr(el, 'v-if', true);
      var ifConditionExtra = ifCondition ? ("&&(" + ifCondition + ")") : "";
      var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;
      var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true);
      // 1. checkbox
      var branch0 = cloneASTElement(el);
      // process for on the main node
      processFor(branch0);
      addRawAttr(branch0, 'type', 'checkbox');
      processElement(branch0, options);
      branch0.processed = true; // prevent it from double-processed
      branch0.if = "(" + typeBinding + ")==='checkbox'" + ifConditionExtra;
      addIfCondition(branch0, {
        exp: branch0.if,
        block: branch0
      });
      // 2. add radio else-if condition
      var branch1 = cloneASTElement(el);
      getAndRemoveAttr(branch1, 'v-for', true);
      addRawAttr(branch1, 'type', 'radio');
      processElement(branch1, options);
      addIfCondition(branch0, {
        exp: "(" + typeBinding + ")==='radio'" + ifConditionExtra,
        block: branch1
      });
      // 3. other
      var branch2 = cloneASTElement(el);
      getAndRemoveAttr(branch2, 'v-for', true);
      addRawAttr(branch2, ':type', typeBinding);
      processElement(branch2, options);
      addIfCondition(branch0, {
        exp: ifCondition,
        block: branch2
      });

      if (hasElse) {
        branch0.else = true;
      } else if (elseIfCondition) {
        branch0.elseif = elseIfCondition;
      }

      return branch0
    }
  }
}

function cloneASTElement (el) {
  return createASTElement(el.tag, el.attrsList.slice(), el.parent)
}

var model$1 = {
  preTransformNode: preTransformNode
};

var modules$1 = [
  klass$1,
  style$1,
  model$1
];

/*  */

function text (el, dir) {
  if (dir.value) {
    addProp(el, 'textContent', ("_s(" + (dir.value) + ")"), dir);
  }
}

/*  */

function html (el, dir) {
  if (dir.value) {
    addProp(el, 'innerHTML', ("_s(" + (dir.value) + ")"), dir);
  }
}

var directives$1 = {
  model: model,
  text: text,
  html: html
};

/*  */

var baseOptions = {
  expectHTML: true,
  modules: modules$1,
  directives: directives$1,
  isPreTag: isPreTag,
  isUnaryTag: isUnaryTag,
  mustUseProp: mustUseProp,
  canBeLeftOpenTag: canBeLeftOpenTag,
  isReservedTag: isReservedTag,
  getTagNamespace: getTagNamespace,
  staticKeys: genStaticKeys(modules$1)
};

/*  */

var isStaticKey;
var isPlatformReservedTag;

var genStaticKeysCached = cached(genStaticKeys$1);

/**
 * Goal of the optimizer: walk the generated template AST tree
 * and detect sub-trees that are purely static, i.e. parts of
 * the DOM that never needs to change.
 *
 * Once we detect these sub-trees, we can:
 *
 * 1. Hoist them into constants, so that we no longer need to
 *    create fresh nodes for them on each re-render;
 * 2. Completely skip them in the patching process.
 */
function optimize (root, options) {
  if (!root) { return }
  isStaticKey = genStaticKeysCached(options.staticKeys || '');
  isPlatformReservedTag = options.isReservedTag || no;
  // first pass: mark all non-static nodes.
  markStatic$1(root);
  // second pass: mark static roots.
  markStaticRoots(root, false);
}

function genStaticKeys$1 (keys) {
  return makeMap(
    'type,tag,attrsList,attrsMap,plain,parent,children,attrs,start,end,rawAttrsMap' +
    (keys ? ',' + keys : '')
  )
}

function markStatic$1 (node) {
  node.static = isStatic(node);
  if (node.type === 1) {
    // do not make component slot content static. this avoids
    // 1. components not able to mutate slot nodes
    // 2. static slot content fails for hot-reloading
    if (
      !isPlatformReservedTag(node.tag) &&
      node.tag !== 'slot' &&
      node.attrsMap['inline-template'] == null
    ) {
      return
    }
    for (var i = 0, l = node.children.length; i < l; i++) {
      var child = node.children[i];
      markStatic$1(child);
      if (!child.static) {
        node.static = false;
      }
    }
    if (node.ifConditions) {
      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {
        var block = node.ifConditions[i$1].block;
        markStatic$1(block);
        if (!block.static) {
          node.static = false;
        }
      }
    }
  }
}

function markStaticRoots (node, isInFor) {
  if (node.type === 1) {
    if (node.static || node.once) {
      node.staticInFor = isInFor;
    }
    // For a node to qualify as a static root, it should have children that
    // are not just static text. Otherwise the cost of hoisting out will
    // outweigh the benefits and it's better off to just always render it fresh.
    if (node.static && node.children.length && !(
      node.children.length === 1 &&
      node.children[0].type === 3
    )) {
      node.staticRoot = true;
      return
    } else {
      node.staticRoot = false;
    }
    if (node.children) {
      for (var i = 0, l = node.children.length; i < l; i++) {
        markStaticRoots(node.children[i], isInFor || !!node.for);
      }
    }
    if (node.ifConditions) {
      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {
        markStaticRoots(node.ifConditions[i$1].block, isInFor);
      }
    }
  }
}

function isStatic (node) {
  if (node.type === 2) { // expression
    return false
  }
  if (node.type === 3) { // text
    return true
  }
  return !!(node.pre || (
    !node.hasBindings && // no dynamic bindings
    !node.if && !node.for && // not v-if or v-for or v-else
    !isBuiltInTag(node.tag) && // not a built-in
    isPlatformReservedTag(node.tag) && // not a component
    !isDirectChildOfTemplateFor(node) &&
    Object.keys(node).every(isStaticKey)
  ))
}

function isDirectChildOfTemplateFor (node) {
  while (node.parent) {
    node = node.parent;
    if (node.tag !== 'template') {
      return false
    }
    if (node.for) {
      return true
    }
  }
  return false
}

/*  */

var fnExpRE = /^([\w$_]+|\([^)]*?\))\s*=>|^function(?:\s+[\w$]+)?\s*\(/;
var fnInvokeRE = /\([^)]*?\);*$/;
var simplePathRE = /^[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*$/;

// KeyboardEvent.keyCode aliases
var keyCodes = {
  esc: 27,
  tab: 9,
  enter: 13,
  space: 32,
  up: 38,
  left: 37,
  right: 39,
  down: 40,
  'delete': [8, 46]
};

// KeyboardEvent.key aliases
var keyNames = {
  // #7880: IE11 and Edge use `Esc` for Escape key name.
  esc: ['Esc', 'Escape'],
  tab: 'Tab',
  enter: 'Enter',
  // #9112: IE11 uses `Spacebar` for Space key name.
  space: [' ', 'Spacebar'],
  // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.
  up: ['Up', 'ArrowUp'],
  left: ['Left', 'ArrowLeft'],
  right: ['Right', 'ArrowRight'],
  down: ['Down', 'ArrowDown'],
  // #9112: IE11 uses `Del` for Delete key name.
  'delete': ['Backspace', 'Delete', 'Del']
};

// #4868: modifiers that prevent the execution of the listener
// need to explicitly return null so that we can determine whether to remove
// the listener for .once
var genGuard = function (condition) { return ("if(" + condition + ")return null;"); };

var modifierCode = {
  stop: '$event.stopPropagation();',
  prevent: '$event.preventDefault();',
  self: genGuard("$event.target !== $event.currentTarget"),
  ctrl: genGuard("!$event.ctrlKey"),
  shift: genGuard("!$event.shiftKey"),
  alt: genGuard("!$event.altKey"),
  meta: genGuard("!$event.metaKey"),
  left: genGuard("'button' in $event && $event.button !== 0"),
  middle: genGuard("'button' in $event && $event.button !== 1"),
  right: genGuard("'button' in $event && $event.button !== 2")
};

function genHandlers (
  events,
  isNative
) {
  var prefix = isNative ? 'nativeOn:' : 'on:';
  var staticHandlers = "";
  var dynamicHandlers = "";
  for (var name in events) {
    var handlerCode = genHandler(events[name]);
    if (events[name] && events[name].dynamic) {
      dynamicHandlers += name + "," + handlerCode + ",";
    } else {
      staticHandlers += "\"" + name + "\":" + handlerCode + ",";
    }
  }
  staticHandlers = "{" + (staticHandlers.slice(0, -1)) + "}";
  if (dynamicHandlers) {
    return prefix + "_d(" + staticHandlers + ",[" + (dynamicHandlers.slice(0, -1)) + "])"
  } else {
    return prefix + staticHandlers
  }
}

function genHandler (handler) {
  if (!handler) {
    return 'function(){}'
  }

  if (Array.isArray(handler)) {
    return ("[" + (handler.map(function (handler) { return genHandler(handler); }).join(',')) + "]")
  }

  var isMethodPath = simplePathRE.test(handler.value);
  var isFunctionExpression = fnExpRE.test(handler.value);
  var isFunctionInvocation = simplePathRE.test(handler.value.replace(fnInvokeRE, ''));

  if (!handler.modifiers) {
    if (isMethodPath || isFunctionExpression) {
      return handler.value
    }
    return ("function($event){" + (isFunctionInvocation ? ("return " + (handler.value)) : handler.value) + "}") // inline statement
  } else {
    var code = '';
    var genModifierCode = '';
    var keys = [];
    for (var key in handler.modifiers) {
      if (modifierCode[key]) {
        genModifierCode += modifierCode[key];
        // left/right
        if (keyCodes[key]) {
          keys.push(key);
        }
      } else if (key === 'exact') {
        var modifiers = (handler.modifiers);
        genModifierCode += genGuard(
          ['ctrl', 'shift', 'alt', 'meta']
            .filter(function (keyModifier) { return !modifiers[keyModifier]; })
            .map(function (keyModifier) { return ("$event." + keyModifier + "Key"); })
            .join('||')
        );
      } else {
        keys.push(key);
      }
    }
    if (keys.length) {
      code += genKeyFilter(keys);
    }
    // Make sure modifiers like prevent and stop get executed after key filtering
    if (genModifierCode) {
      code += genModifierCode;
    }
    var handlerCode = isMethodPath
      ? ("return " + (handler.value) + ".apply(null, arguments)")
      : isFunctionExpression
        ? ("return (" + (handler.value) + ").apply(null, arguments)")
        : isFunctionInvocation
          ? ("return " + (handler.value))
          : handler.value;
    return ("function($event){" + code + handlerCode + "}")
  }
}

function genKeyFilter (keys) {
  return (
    // make sure the key filters only apply to KeyboardEvents
    // #9441: can't use 'keyCode' in $event because Chrome autofill fires fake
    // key events that do not have keyCode property...
    "if(!$event.type.indexOf('key')&&" +
    (keys.map(genFilterCode).join('&&')) + ")return null;"
  )
}

function genFilterCode (key) {
  var keyVal = parseInt(key, 10);
  if (keyVal) {
    return ("$event.keyCode!==" + keyVal)
  }
  var keyCode = keyCodes[key];
  var keyName = keyNames[key];
  return (
    "_k($event.keyCode," +
    (JSON.stringify(key)) + "," +
    (JSON.stringify(keyCode)) + "," +
    "$event.key," +
    "" + (JSON.stringify(keyName)) +
    ")"
  )
}

/*  */

function on (el, dir) {
  if ( true && dir.modifiers) {
    warn("v-on without argument does not support modifiers.");
  }
  el.wrapListeners = function (code) { return ("_g(" + code + "," + (dir.value) + ")"); };
}

/*  */

function bind$1 (el, dir) {
  el.wrapData = function (code) {
    return ("_b(" + code + ",'" + (el.tag) + "'," + (dir.value) + "," + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + ")")
  };
}

/*  */

var baseDirectives = {
  on: on,
  bind: bind$1,
  cloak: noop
};

/*  */





var CodegenState = function CodegenState (options) {
  this.options = options;
  this.warn = options.warn || baseWarn;
  this.transforms = pluckModuleFunction(options.modules, 'transformCode');
  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');
  this.directives = extend(extend({}, baseDirectives), options.directives);
  var isReservedTag = options.isReservedTag || no;
  this.maybeComponent = function (el) { return !!el.component || !isReservedTag(el.tag); };
  this.onceId = 0;
  this.staticRenderFns = [];
  this.pre = false;
};



function generate (
  ast,
  options
) {
  var state = new CodegenState(options);
  // fix #11483, Root level <script> tags should not be rendered.
  var code = ast ? (ast.tag === 'script' ? 'null' : genElement(ast, state)) : '_c("div")';
  return {
    render: ("with(this){return " + code + "}"),
    staticRenderFns: state.staticRenderFns
  }
}

function genElement (el, state) {
  if (el.parent) {
    el.pre = el.pre || el.parent.pre;
  }

  if (el.staticRoot && !el.staticProcessed) {
    return genStatic(el, state)
  } else if (el.once && !el.onceProcessed) {
    return genOnce(el, state)
  } else if (el.for && !el.forProcessed) {
    return genFor(el, state)
  } else if (el.if && !el.ifProcessed) {
    return genIf(el, state)
  } else if (el.tag === 'template' && !el.slotTarget && !state.pre) {
    return genChildren(el, state) || 'void 0'
  } else if (el.tag === 'slot') {
    return genSlot(el, state)
  } else {
    // component or element
    var code;
    if (el.component) {
      code = genComponent(el.component, el, state);
    } else {
      var data;
      if (!el.plain || (el.pre && state.maybeComponent(el))) {
        data = genData$2(el, state);
      }

      var children = el.inlineTemplate ? null : genChildren(el, state, true);
      code = "_c('" + (el.tag) + "'" + (data ? ("," + data) : '') + (children ? ("," + children) : '') + ")";
    }
    // module transforms
    for (var i = 0; i < state.transforms.length; i++) {
      code = state.transforms[i](el, code);
    }
    return code
  }
}

// hoist static sub-trees out
function genStatic (el, state) {
  el.staticProcessed = true;
  // Some elements (templates) need to behave differently inside of a v-pre
  // node.  All pre nodes are static roots, so we can use this as a location to
  // wrap a state change and reset it upon exiting the pre node.
  var originalPreState = state.pre;
  if (el.pre) {
    state.pre = el.pre;
  }
  state.staticRenderFns.push(("with(this){return " + (genElement(el, state)) + "}"));
  state.pre = originalPreState;
  return ("_m(" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + ")")
}

// v-once
function genOnce (el, state) {
  el.onceProcessed = true;
  if (el.if && !el.ifProcessed) {
    return genIf(el, state)
  } else if (el.staticInFor) {
    var key = '';
    var parent = el.parent;
    while (parent) {
      if (parent.for) {
        key = parent.key;
        break
      }
      parent = parent.parent;
    }
    if (!key) {
       true && state.warn(
        "v-once can only be used inside v-for that is keyed. ",
        el.rawAttrsMap['v-once']
      );
      return genElement(el, state)
    }
    return ("_o(" + (genElement(el, state)) + "," + (state.onceId++) + "," + key + ")")
  } else {
    return genStatic(el, state)
  }
}

function genIf (
  el,
  state,
  altGen,
  altEmpty
) {
  el.ifProcessed = true; // avoid recursion
  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)
}

function genIfConditions (
  conditions,
  state,
  altGen,
  altEmpty
) {
  if (!conditions.length) {
    return altEmpty || '_e()'
  }

  var condition = conditions.shift();
  if (condition.exp) {
    return ("(" + (condition.exp) + ")?" + (genTernaryExp(condition.block)) + ":" + (genIfConditions(conditions, state, altGen, altEmpty)))
  } else {
    return ("" + (genTernaryExp(condition.block)))
  }

  // v-if with v-once should generate code like (a)?_m(0):_m(1)
  function genTernaryExp (el) {
    return altGen
      ? altGen(el, state)
      : el.once
        ? genOnce(el, state)
        : genElement(el, state)
  }
}

function genFor (
  el,
  state,
  altGen,
  altHelper
) {
  var exp = el.for;
  var alias = el.alias;
  var iterator1 = el.iterator1 ? ("," + (el.iterator1)) : '';
  var iterator2 = el.iterator2 ? ("," + (el.iterator2)) : '';

  if ( true &&
    state.maybeComponent(el) &&
    el.tag !== 'slot' &&
    el.tag !== 'template' &&
    !el.key
  ) {
    state.warn(
      "<" + (el.tag) + " v-for=\"" + alias + " in " + exp + "\">: component lists rendered with " +
      "v-for should have explicit keys. " +
      "See https://vuejs.org/guide/list.html#key for more info.",
      el.rawAttrsMap['v-for'],
      true /* tip */
    );
  }

  el.forProcessed = true; // avoid recursion
  return (altHelper || '_l') + "((" + exp + ")," +
    "function(" + alias + iterator1 + iterator2 + "){" +
      "return " + ((altGen || genElement)(el, state)) +
    '})'
}

function genData$2 (el, state) {
  var data = '{';

  // directives first.
  // directives may mutate the el's other properties before they are generated.
  var dirs = genDirectives(el, state);
  if (dirs) { data += dirs + ','; }

  // key
  if (el.key) {
    data += "key:" + (el.key) + ",";
  }
  // ref
  if (el.ref) {
    data += "ref:" + (el.ref) + ",";
  }
  if (el.refInFor) {
    data += "refInFor:true,";
  }
  // pre
  if (el.pre) {
    data += "pre:true,";
  }
  // record original tag name for components using "is" attribute
  if (el.component) {
    data += "tag:\"" + (el.tag) + "\",";
  }
  // module data generation functions
  for (var i = 0; i < state.dataGenFns.length; i++) {
    data += state.dataGenFns[i](el);
  }
  // attributes
  if (el.attrs) {
    data += "attrs:" + (genProps(el.attrs)) + ",";
  }
  // DOM props
  if (el.props) {
    data += "domProps:" + (genProps(el.props)) + ",";
  }
  // event handlers
  if (el.events) {
    data += (genHandlers(el.events, false)) + ",";
  }
  if (el.nativeEvents) {
    data += (genHandlers(el.nativeEvents, true)) + ",";
  }
  // slot target
  // only for non-scoped slots
  if (el.slotTarget && !el.slotScope) {
    data += "slot:" + (el.slotTarget) + ",";
  }
  // scoped slots
  if (el.scopedSlots) {
    data += (genScopedSlots(el, el.scopedSlots, state)) + ",";
  }
  // component v-model
  if (el.model) {
    data += "model:{value:" + (el.model.value) + ",callback:" + (el.model.callback) + ",expression:" + (el.model.expression) + "},";
  }
  // inline-template
  if (el.inlineTemplate) {
    var inlineTemplate = genInlineTemplate(el, state);
    if (inlineTemplate) {
      data += inlineTemplate + ",";
    }
  }
  data = data.replace(/,$/, '') + '}';
  // v-bind dynamic argument wrap
  // v-bind with dynamic arguments must be applied using the same v-bind object
  // merge helper so that class/style/mustUseProp attrs are handled correctly.
  if (el.dynamicAttrs) {
    data = "_b(" + data + ",\"" + (el.tag) + "\"," + (genProps(el.dynamicAttrs)) + ")";
  }
  // v-bind data wrap
  if (el.wrapData) {
    data = el.wrapData(data);
  }
  // v-on data wrap
  if (el.wrapListeners) {
    data = el.wrapListeners(data);
  }
  return data
}

function genDirectives (el, state) {
  var dirs = el.directives;
  if (!dirs) { return }
  var res = 'directives:[';
  var hasRuntime = false;
  var i, l, dir, needRuntime;
  for (i = 0, l = dirs.length; i < l; i++) {
    dir = dirs[i];
    needRuntime = true;
    var gen = state.directives[dir.name];
    if (gen) {
      // compile-time directive that manipulates AST.
      // returns true if it also needs a runtime counterpart.
      needRuntime = !!gen(el, dir, state.warn);
    }
    if (needRuntime) {
      hasRuntime = true;
      res += "{name:\"" + (dir.name) + "\",rawName:\"" + (dir.rawName) + "\"" + (dir.value ? (",value:(" + (dir.value) + "),expression:" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (",arg:" + (dir.isDynamicArg ? dir.arg : ("\"" + (dir.arg) + "\""))) : '') + (dir.modifiers ? (",modifiers:" + (JSON.stringify(dir.modifiers))) : '') + "},";
    }
  }
  if (hasRuntime) {
    return res.slice(0, -1) + ']'
  }
}

function genInlineTemplate (el, state) {
  var ast = el.children[0];
  if ( true && (
    el.children.length !== 1 || ast.type !== 1
  )) {
    state.warn(
      'Inline-template components must have exactly one child element.',
      { start: el.start }
    );
  }
  if (ast && ast.type === 1) {
    var inlineRenderFns = generate(ast, state.options);
    return ("inlineTemplate:{render:function(){" + (inlineRenderFns.render) + "},staticRenderFns:[" + (inlineRenderFns.staticRenderFns.map(function (code) { return ("function(){" + code + "}"); }).join(',')) + "]}")
  }
}

function genScopedSlots (
  el,
  slots,
  state
) {
  // by default scoped slots are considered "stable", this allows child
  // components with only scoped slots to skip forced updates from parent.
  // but in some cases we have to bail-out of this optimization
  // for example if the slot contains dynamic names, has v-if or v-for on them...
  var needsForceUpdate = el.for || Object.keys(slots).some(function (key) {
    var slot = slots[key];
    return (
      slot.slotTargetDynamic ||
      slot.if ||
      slot.for ||
      containsSlotChild(slot) // is passing down slot from parent which may be dynamic
    )
  });

  // #9534: if a component with scoped slots is inside a conditional branch,
  // it's possible for the same component to be reused but with different
  // compiled slot content. To avoid that, we generate a unique key based on
  // the generated code of all the slot contents.
  var needsKey = !!el.if;

  // OR when it is inside another scoped slot or v-for (the reactivity may be
  // disconnected due to the intermediate scope variable)
  // #9438, #9506
  // TODO: this can be further optimized by properly analyzing in-scope bindings
  // and skip force updating ones that do not actually use scope variables.
  if (!needsForceUpdate) {
    var parent = el.parent;
    while (parent) {
      if (
        (parent.slotScope && parent.slotScope !== emptySlotScopeToken) ||
        parent.for
      ) {
        needsForceUpdate = true;
        break
      }
      if (parent.if) {
        needsKey = true;
      }
      parent = parent.parent;
    }
  }

  var generatedSlots = Object.keys(slots)
    .map(function (key) { return genScopedSlot(slots[key], state); })
    .join(',');

  return ("scopedSlots:_u([" + generatedSlots + "]" + (needsForceUpdate ? ",null,true" : "") + (!needsForceUpdate && needsKey ? (",null,false," + (hash(generatedSlots))) : "") + ")")
}

function hash(str) {
  var hash = 5381;
  var i = str.length;
  while(i) {
    hash = (hash * 33) ^ str.charCodeAt(--i);
  }
  return hash >>> 0
}

function containsSlotChild (el) {
  if (el.type === 1) {
    if (el.tag === 'slot') {
      return true
    }
    return el.children.some(containsSlotChild)
  }
  return false
}

function genScopedSlot (
  el,
  state
) {
  var isLegacySyntax = el.attrsMap['slot-scope'];
  if (el.if && !el.ifProcessed && !isLegacySyntax) {
    return genIf(el, state, genScopedSlot, "null")
  }
  if (el.for && !el.forProcessed) {
    return genFor(el, state, genScopedSlot)
  }
  var slotScope = el.slotScope === emptySlotScopeToken
    ? ""
    : String(el.slotScope);
  var fn = "function(" + slotScope + "){" +
    "return " + (el.tag === 'template'
      ? el.if && isLegacySyntax
        ? ("(" + (el.if) + ")?" + (genChildren(el, state) || 'undefined') + ":undefined")
        : genChildren(el, state) || 'undefined'
      : genElement(el, state)) + "}";
  // reverse proxy v-slot without scope on this.$slots
  var reverseProxy = slotScope ? "" : ",proxy:true";
  return ("{key:" + (el.slotTarget || "\"default\"") + ",fn:" + fn + reverseProxy + "}")
}

function genChildren (
  el,
  state,
  checkSkip,
  altGenElement,
  altGenNode
) {
  var children = el.children;
  if (children.length) {
    var el$1 = children[0];
    // optimize single v-for
    if (children.length === 1 &&
      el$1.for &&
      el$1.tag !== 'template' &&
      el$1.tag !== 'slot'
    ) {
      var normalizationType = checkSkip
        ? state.maybeComponent(el$1) ? ",1" : ",0"
        : "";
      return ("" + ((altGenElement || genElement)(el$1, state)) + normalizationType)
    }
    var normalizationType$1 = checkSkip
      ? getNormalizationType(children, state.maybeComponent)
      : 0;
    var gen = altGenNode || genNode;
    return ("[" + (children.map(function (c) { return gen(c, state); }).join(',')) + "]" + (normalizationType$1 ? ("," + normalizationType$1) : ''))
  }
}

// determine the normalization needed for the children array.
// 0: no normalization needed
// 1: simple normalization needed (possible 1-level deep nested array)
// 2: full normalization needed
function getNormalizationType (
  children,
  maybeComponent
) {
  var res = 0;
  for (var i = 0; i < children.length; i++) {
    var el = children[i];
    if (el.type !== 1) {
      continue
    }
    if (needsNormalization(el) ||
        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {
      res = 2;
      break
    }
    if (maybeComponent(el) ||
        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {
      res = 1;
    }
  }
  return res
}

function needsNormalization (el) {
  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'
}

function genNode (node, state) {
  if (node.type === 1) {
    return genElement(node, state)
  } else if (node.type === 3 && node.isComment) {
    return genComment(node)
  } else {
    return genText(node)
  }
}

function genText (text) {
  return ("_v(" + (text.type === 2
    ? text.expression // no need for () because already wrapped in _s()
    : transformSpecialNewlines(JSON.stringify(text.text))) + ")")
}

function genComment (comment) {
  return ("_e(" + (JSON.stringify(comment.text)) + ")")
}

function genSlot (el, state) {
  var slotName = el.slotName || '"default"';
  var children = genChildren(el, state);
  var res = "_t(" + slotName + (children ? (",function(){return " + children + "}") : '');
  var attrs = el.attrs || el.dynamicAttrs
    ? genProps((el.attrs || []).concat(el.dynamicAttrs || []).map(function (attr) { return ({
        // slot props are camelized
        name: camelize(attr.name),
        value: attr.value,
        dynamic: attr.dynamic
      }); }))
    : null;
  var bind$$1 = el.attrsMap['v-bind'];
  if ((attrs || bind$$1) && !children) {
    res += ",null";
  }
  if (attrs) {
    res += "," + attrs;
  }
  if (bind$$1) {
    res += (attrs ? '' : ',null') + "," + bind$$1;
  }
  return res + ')'
}

// componentName is el.component, take it as argument to shun flow's pessimistic refinement
function genComponent (
  componentName,
  el,
  state
) {
  var children = el.inlineTemplate ? null : genChildren(el, state, true);
  return ("_c(" + componentName + "," + (genData$2(el, state)) + (children ? ("," + children) : '') + ")")
}

function genProps (props) {
  var staticProps = "";
  var dynamicProps = "";
  for (var i = 0; i < props.length; i++) {
    var prop = props[i];
    var value = transformSpecialNewlines(prop.value);
    if (prop.dynamic) {
      dynamicProps += (prop.name) + "," + value + ",";
    } else {
      staticProps += "\"" + (prop.name) + "\":" + value + ",";
    }
  }
  staticProps = "{" + (staticProps.slice(0, -1)) + "}";
  if (dynamicProps) {
    return ("_d(" + staticProps + ",[" + (dynamicProps.slice(0, -1)) + "])")
  } else {
    return staticProps
  }
}

// #3895, #4268
function transformSpecialNewlines (text) {
  return text
    .replace(/\u2028/g, '\\u2028')
    .replace(/\u2029/g, '\\u2029')
}

/*  */



// these keywords should not appear inside expressions, but operators like
// typeof, instanceof and in are allowed
var prohibitedKeywordRE = new RegExp('\\b' + (
  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +
  'super,throw,while,yield,delete,export,import,return,switch,default,' +
  'extends,finally,continue,debugger,function,arguments'
).split(',').join('\\b|\\b') + '\\b');

// these unary operators should not be used as property/method names
var unaryOperatorsRE = new RegExp('\\b' + (
  'delete,typeof,void'
).split(',').join('\\s*\\([^\\)]*\\)|\\b') + '\\s*\\([^\\)]*\\)');

// strip strings in expressions
var stripStringRE = /'(?:[^'\\]|\\.)*'|"(?:[^"\\]|\\.)*"|`(?:[^`\\]|\\.)*\$\{|\}(?:[^`\\]|\\.)*`|`(?:[^`\\]|\\.)*`/g;

// detect problematic expressions in a template
function detectErrors (ast, warn) {
  if (ast) {
    checkNode(ast, warn);
  }
}

function checkNode (node, warn) {
  if (node.type === 1) {
    for (var name in node.attrsMap) {
      if (dirRE.test(name)) {
        var value = node.attrsMap[name];
        if (value) {
          var range = node.rawAttrsMap[name];
          if (name === 'v-for') {
            checkFor(node, ("v-for=\"" + value + "\""), warn, range);
          } else if (name === 'v-slot' || name[0] === '#') {
            checkFunctionParameterExpression(value, (name + "=\"" + value + "\""), warn, range);
          } else if (onRE.test(name)) {
            checkEvent(value, (name + "=\"" + value + "\""), warn, range);
          } else {
            checkExpression(value, (name + "=\"" + value + "\""), warn, range);
          }
        }
      }
    }
    if (node.children) {
      for (var i = 0; i < node.children.length; i++) {
        checkNode(node.children[i], warn);
      }
    }
  } else if (node.type === 2) {
    checkExpression(node.expression, node.text, warn, node);
  }
}

function checkEvent (exp, text, warn, range) {
  var stripped = exp.replace(stripStringRE, '');
  var keywordMatch = stripped.match(unaryOperatorsRE);
  if (keywordMatch && stripped.charAt(keywordMatch.index - 1) !== '$') {
    warn(
      "avoid using JavaScript unary operator as property name: " +
      "\"" + (keywordMatch[0]) + "\" in expression " + (text.trim()),
      range
    );
  }
  checkExpression(exp, text, warn, range);
}

function checkFor (node, text, warn, range) {
  checkExpression(node.for || '', text, warn, range);
  checkIdentifier(node.alias, 'v-for alias', text, warn, range);
  checkIdentifier(node.iterator1, 'v-for iterator', text, warn, range);
  checkIdentifier(node.iterator2, 'v-for iterator', text, warn, range);
}

function checkIdentifier (
  ident,
  type,
  text,
  warn,
  range
) {
  if (typeof ident === 'string') {
    try {
      new Function(("var " + ident + "=_"));
    } catch (e) {
      warn(("invalid " + type + " \"" + ident + "\" in expression: " + (text.trim())), range);
    }
  }
}

function checkExpression (exp, text, warn, range) {
  try {
    new Function(("return " + exp));
  } catch (e) {
    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);
    if (keywordMatch) {
      warn(
        "avoid using JavaScript keyword as property name: " +
        "\"" + (keywordMatch[0]) + "\"\n  Raw expression: " + (text.trim()),
        range
      );
    } else {
      warn(
        "invalid expression: " + (e.message) + " in\n\n" +
        "    " + exp + "\n\n" +
        "  Raw expression: " + (text.trim()) + "\n",
        range
      );
    }
  }
}

function checkFunctionParameterExpression (exp, text, warn, range) {
  try {
    new Function(exp, '');
  } catch (e) {
    warn(
      "invalid function parameter expression: " + (e.message) + " in\n\n" +
      "    " + exp + "\n\n" +
      "  Raw expression: " + (text.trim()) + "\n",
      range
    );
  }
}

/*  */

var range = 2;

function generateCodeFrame (
  source,
  start,
  end
) {
  if ( start === void 0 ) start = 0;
  if ( end === void 0 ) end = source.length;

  var lines = source.split(/\r?\n/);
  var count = 0;
  var res = [];
  for (var i = 0; i < lines.length; i++) {
    count += lines[i].length + 1;
    if (count >= start) {
      for (var j = i - range; j <= i + range || end > count; j++) {
        if (j < 0 || j >= lines.length) { continue }
        res.push(("" + (j + 1) + (repeat$1(" ", 3 - String(j + 1).length)) + "|  " + (lines[j])));
        var lineLength = lines[j].length;
        if (j === i) {
          // push underline
          var pad = start - (count - lineLength) + 1;
          var length = end > count ? lineLength - pad : end - start;
          res.push("   |  " + repeat$1(" ", pad) + repeat$1("^", length));
        } else if (j > i) {
          if (end > count) {
            var length$1 = Math.min(end - count, lineLength);
            res.push("   |  " + repeat$1("^", length$1));
          }
          count += lineLength + 1;
        }
      }
      break
    }
  }
  return res.join('\n')
}

function repeat$1 (str, n) {
  var result = '';
  if (n > 0) {
    while (true) { // eslint-disable-line
      if (n & 1) { result += str; }
      n >>>= 1;
      if (n <= 0) { break }
      str += str;
    }
  }
  return result
}

/*  */



function createFunction (code, errors) {
  try {
    return new Function(code)
  } catch (err) {
    errors.push({ err: err, code: code });
    return noop
  }
}

function createCompileToFunctionFn (compile) {
  var cache = Object.create(null);

  return function compileToFunctions (
    template,
    options,
    vm
  ) {
    options = extend({}, options);
    var warn$$1 = options.warn || warn;
    delete options.warn;

    /* istanbul ignore if */
    if (true) {
      // detect possible CSP restriction
      try {
        new Function('return 1');
      } catch (e) {
        if (e.toString().match(/unsafe-eval|CSP/)) {
          warn$$1(
            'It seems you are using the standalone build of Vue.js in an ' +
            'environment with Content Security Policy that prohibits unsafe-eval. ' +
            'The template compiler cannot work in this environment. Consider ' +
            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +
            'templates into render functions.'
          );
        }
      }
    }

    // check cache
    var key = options.delimiters
      ? String(options.delimiters) + template
      : template;
    if (cache[key]) {
      return cache[key]
    }

    // compile
    var compiled = compile(template, options);

    // check compilation errors/tips
    if (true) {
      if (compiled.errors && compiled.errors.length) {
        if (options.outputSourceRange) {
          compiled.errors.forEach(function (e) {
            warn$$1(
              "Error compiling template:\n\n" + (e.msg) + "\n\n" +
              generateCodeFrame(template, e.start, e.end),
              vm
            );
          });
        } else {
          warn$$1(
            "Error compiling template:\n\n" + template + "\n\n" +
            compiled.errors.map(function (e) { return ("- " + e); }).join('\n') + '\n',
            vm
          );
        }
      }
      if (compiled.tips && compiled.tips.length) {
        if (options.outputSourceRange) {
          compiled.tips.forEach(function (e) { return tip(e.msg, vm); });
        } else {
          compiled.tips.forEach(function (msg) { return tip(msg, vm); });
        }
      }
    }

    // turn code into functions
    var res = {};
    var fnGenErrors = [];
    res.render = createFunction(compiled.render, fnGenErrors);
    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {
      return createFunction(code, fnGenErrors)
    });

    // check function generation errors.
    // this should only happen if there is a bug in the compiler itself.
    // mostly for codegen development use
    /* istanbul ignore if */
    if (true) {
      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {
        warn$$1(
          "Failed to generate render function:\n\n" +
          fnGenErrors.map(function (ref) {
            var err = ref.err;
            var code = ref.code;

            return ((err.toString()) + " in\n\n" + code + "\n");
        }).join('\n'),
          vm
        );
      }
    }

    return (cache[key] = res)
  }
}

/*  */

function createCompilerCreator (baseCompile) {
  return function createCompiler (baseOptions) {
    function compile (
      template,
      options
    ) {
      var finalOptions = Object.create(baseOptions);
      var errors = [];
      var tips = [];

      var warn = function (msg, range, tip) {
        (tip ? tips : errors).push(msg);
      };

      if (options) {
        if ( true && options.outputSourceRange) {
          // $flow-disable-line
          var leadingSpaceLength = template.match(/^\s*/)[0].length;

          warn = function (msg, range, tip) {
            var data = { msg: msg };
            if (range) {
              if (range.start != null) {
                data.start = range.start + leadingSpaceLength;
              }
              if (range.end != null) {
                data.end = range.end + leadingSpaceLength;
              }
            }
            (tip ? tips : errors).push(data);
          };
        }
        // merge custom modules
        if (options.modules) {
          finalOptions.modules =
            (baseOptions.modules || []).concat(options.modules);
        }
        // merge custom directives
        if (options.directives) {
          finalOptions.directives = extend(
            Object.create(baseOptions.directives || null),
            options.directives
          );
        }
        // copy other options
        for (var key in options) {
          if (key !== 'modules' && key !== 'directives') {
            finalOptions[key] = options[key];
          }
        }
      }

      finalOptions.warn = warn;

      var compiled = baseCompile(template.trim(), finalOptions);
      if (true) {
        detectErrors(compiled.ast, warn);
      }
      compiled.errors = errors;
      compiled.tips = tips;
      return compiled
    }

    return {
      compile: compile,
      compileToFunctions: createCompileToFunctionFn(compile)
    }
  }
}

/*  */

// `createCompilerCreator` allows creating compilers that use alternative
// parser/optimizer/codegen, e.g the SSR optimizing compiler.
// Here we just export a default compiler using the default parts.
var createCompiler = createCompilerCreator(function baseCompile (
  template,
  options
) {
  var ast = parse(template.trim(), options);
  if (options.optimize !== false) {
    optimize(ast, options);
  }
  var code = generate(ast, options);
  return {
    ast: ast,
    render: code.render,
    staticRenderFns: code.staticRenderFns
  }
});

/*  */

var ref$1 = createCompiler(baseOptions);
var compile = ref$1.compile;
var compileToFunctions = ref$1.compileToFunctions;

/*  */

// check whether current browser encodes a char inside attribute values
var div;
function getShouldDecode (href) {
  div = div || document.createElement('div');
  div.innerHTML = href ? "<a href=\"\n\"/>" : "<div a=\"\n\"/>";
  return div.innerHTML.indexOf('&#10;') > 0
}

// #3663: IE encodes newlines inside attribute values while other browsers don't
var shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false;
// #6828: chrome encodes content in a[href]
var shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;

/*  */

var idToTemplate = cached(function (id) {
  var el = query(id);
  return el && el.innerHTML
});

var mount = Vue.prototype.$mount;
Vue.prototype.$mount = function (
  el,
  hydrating
) {
  el = el && query(el);

  /* istanbul ignore if */
  if (el === document.body || el === document.documentElement) {
     true && warn(
      "Do not mount Vue to <html> or <body> - mount to normal elements instead."
    );
    return this
  }

  var options = this.$options;
  // resolve template/el and convert to render function
  if (!options.render) {
    var template = options.template;
    if (template) {
      if (typeof template === 'string') {
        if (template.charAt(0) === '#') {
          template = idToTemplate(template);
          /* istanbul ignore if */
          if ( true && !template) {
            warn(
              ("Template element not found or is empty: " + (options.template)),
              this
            );
          }
        }
      } else if (template.nodeType) {
        template = template.innerHTML;
      } else {
        if (true) {
          warn('invalid template option:' + template, this);
        }
        return this
      }
    } else if (el) {
      template = getOuterHTML(el);
    }
    if (template) {
      /* istanbul ignore if */
      if ( true && config.performance && mark) {
        mark('compile');
      }

      var ref = compileToFunctions(template, {
        outputSourceRange: "development" !== 'production',
        shouldDecodeNewlines: shouldDecodeNewlines,
        shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,
        delimiters: options.delimiters,
        comments: options.comments
      }, this);
      var render = ref.render;
      var staticRenderFns = ref.staticRenderFns;
      options.render = render;
      options.staticRenderFns = staticRenderFns;

      /* istanbul ignore if */
      if ( true && config.performance && mark) {
        mark('compile end');
        measure(("vue " + (this._name) + " compile"), 'compile', 'compile end');
      }
    }
  }
  return mount.call(this, el, hydrating)
};

/**
 * Get outerHTML of elements, taking care
 * of SVG elements in IE as well.
 */
function getOuterHTML (el) {
  if (el.outerHTML) {
    return el.outerHTML
  } else {
    var container = document.createElement('div');
    container.appendChild(el.cloneNode(true));
    return container.innerHTML
  }
}

Vue.compile = compileToFunctions;

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Vue);


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!******************************!*\
  !*** ./src/market/market.js ***!
  \******************************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _configs_defaultOptions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./configs/defaultOptions */ "./src/market/configs/defaultOptions.js");
/* harmony import */ var _modules_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/options */ "./src/market/modules/options.js");
/* harmony import */ var _modules_ajax__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/ajax */ "./src/market/modules/ajax.js");
/* harmony import */ var _modules_binance__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/binance */ "./src/market/modules/binance.js");
/* harmony import */ var _modules_coincap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/coincap */ "./src/market/modules/coincap.js");
/* harmony import */ var _modules_alarms__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/alarms */ "./src/market/modules/alarms.js");
/* harmony import */ var _modules_history__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/history */ "./src/market/modules/history.js");
/* harmony import */ var _modules_notify__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./modules/notify */ "./src/market/modules/notify.js");
/* harmony import */ var _modules_news__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./modules/news */ "./src/market/modules/news.js");
/* harmony import */ var _modules_messenger__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./modules/messenger */ "./src/market/modules/messenger.js");
/* harmony import */ var _modules_router__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./modules/router */ "./src/market/modules/router.js");
/* harmony import */ var _modules_bus__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./modules/bus */ "./src/market/modules/bus.js");
/* harmony import */ var _modules_sorter__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./modules/sorter */ "./src/market/modules/sorter.js");
/* harmony import */ var _modules_scroller__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./modules/scroller */ "./src/market/modules/scroller.js");
/* harmony import */ var _modules_tooltip__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./modules/tooltip */ "./src/market/modules/tooltip.js");
/* harmony import */ var _modules_store__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./modules/store */ "./src/market/modules/store.js");
/* harmony import */ var _modules_sentiment__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./modules/sentiment */ "./src/market/modules/sentiment.js");
/* harmony import */ var _modules_utils__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./modules/utils */ "./src/market/modules/utils.js");
/* harmony import */ var _modules_utils__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(_modules_utils__WEBPACK_IMPORTED_MODULE_17__);
/* harmony import */ var _components_App_vue__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./components/App.vue */ "./src/market/components/App.vue");
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! vue */ "./node_modules/vue/dist/vue.esm.js");
/**
 * Main app entry file.
 */
window.DEBUG = false; // app dependencies




















 // setup common helper classes

var _options = new _modules_options__WEBPACK_IMPORTED_MODULE_1__["default"](_configs_defaultOptions__WEBPACK_IMPORTED_MODULE_0__["default"]);

var _ajax = new _modules_ajax__WEBPACK_IMPORTED_MODULE_2__["default"]();

var _binance = new _modules_binance__WEBPACK_IMPORTED_MODULE_3__["default"]();

var _coincap = new _modules_coincap__WEBPACK_IMPORTED_MODULE_4__["default"]();

var _alarms = new _modules_alarms__WEBPACK_IMPORTED_MODULE_5__["default"]();

var _history = new _modules_history__WEBPACK_IMPORTED_MODULE_6__["default"]();

var _notify = new _modules_notify__WEBPACK_IMPORTED_MODULE_7__["default"]();

var _news = new _modules_news__WEBPACK_IMPORTED_MODULE_8__["default"]();

var _messenger = new _modules_messenger__WEBPACK_IMPORTED_MODULE_9__["default"]();

var _router = new _modules_router__WEBPACK_IMPORTED_MODULE_10__["default"]();

var _bus = new _modules_bus__WEBPACK_IMPORTED_MODULE_11__["default"]();

var _sorter = new _modules_sorter__WEBPACK_IMPORTED_MODULE_12__["default"]();

var _scroller = new _modules_scroller__WEBPACK_IMPORTED_MODULE_13__["default"]();

var _tooltip = new _modules_tooltip__WEBPACK_IMPORTED_MODULE_14__["default"](); // create custom global vue properties


Object.defineProperties(vue__WEBPACK_IMPORTED_MODULE_19__["default"].prototype, {
  $opts: {
    get: function get() {
      return _options;
    }
  },
  $ajax: {
    get: function get() {
      return _ajax;
    }
  },
  $binance: {
    get: function get() {
      return _binance;
    }
  },
  $coincap: {
    get: function get() {
      return _coincap;
    }
  },
  $alarms: {
    get: function get() {
      return _alarms;
    }
  },
  $history: {
    get: function get() {
      return _history;
    }
  },
  $notify: {
    get: function get() {
      return _notify;
    }
  },
  $news: {
    get: function get() {
      return _news;
    }
  },
  $messenger: {
    get: function get() {
      return _messenger;
    }
  },
  $router: {
    get: function get() {
      return _router;
    }
  },
  $scroller: {
    get: function get() {
      return _scroller;
    }
  },
  $bus: {
    get: function get() {
      return _bus;
    }
  },
  $sorter: {
    get: function get() {
      return _sorter;
    }
  },
  $store: {
    get: function get() {
      return _modules_store__WEBPACK_IMPORTED_MODULE_15__["default"];
    }
  },
  $sentiment: {
    get: function get() {
      return _modules_sentiment__WEBPACK_IMPORTED_MODULE_16__["default"];
    }
  },
  $utils: {
    get: function get() {
      return (_modules_utils__WEBPACK_IMPORTED_MODULE_17___default());
    }
  }
}); // single tooltip instance for entire app

vue__WEBPACK_IMPORTED_MODULE_19__["default"].directive('tooltip', {
  bind: function bind(el) {
    _tooltip.select(el);
  },
  unbind: function unbind(el) {
    _tooltip.unselect(el);
  }
}); // global filters used to format currency and price change values

vue__WEBPACK_IMPORTED_MODULE_19__["default"].filter('toLinks', function (text) {
  return _modules_utils__WEBPACK_IMPORTED_MODULE_17___default().linkUrl(text);
});
vue__WEBPACK_IMPORTED_MODULE_19__["default"].filter('toNoun', function (num, s, p) {
  return _modules_utils__WEBPACK_IMPORTED_MODULE_17___default().noun(num, s, p);
});
vue__WEBPACK_IMPORTED_MODULE_19__["default"].filter('toElapsed', function (time, suffix, _short) {
  return _modules_utils__WEBPACK_IMPORTED_MODULE_17___default().elapsed((Date.now() - time) / 1000, suffix, _short);
});
vue__WEBPACK_IMPORTED_MODULE_19__["default"].filter('toDate', function (time, full) {
  return _modules_utils__WEBPACK_IMPORTED_MODULE_17___default().date(time, full);
});
vue__WEBPACK_IMPORTED_MODULE_19__["default"].filter('toMoney', function (num, decimals) {
  return _modules_utils__WEBPACK_IMPORTED_MODULE_17___default().money(num, decimals);
});
vue__WEBPACK_IMPORTED_MODULE_19__["default"].filter('toFixed', function (num, asset) {
  return _modules_utils__WEBPACK_IMPORTED_MODULE_17___default().fixed(num, asset);
}); // init and/or render

window.addEventListener('load', function (e) {
  if (window.top !== window) return;
  document.body.setAttribute('tabindex', '0');
  new vue__WEBPACK_IMPORTED_MODULE_19__["default"]({
    el: '#market',
    render: function render(h) {
      return h(_components_App_vue__WEBPACK_IMPORTED_MODULE_18__["default"]);
    }
  });
});
})();

/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,